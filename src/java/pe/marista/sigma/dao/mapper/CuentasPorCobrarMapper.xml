<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="pe.marista.sigma.dao.CuentasPorCobrarDAO">  
   
    <sql id="consultaCtasXCobrar">
        SELECT 
        cta.idCtasXCobrar				as idCtasXCobrar
        ,cta.idEstudiante				as idEstudiante	
        ,cta.idMatricula                                as idMatricula
        ,stu.idGradoHabilitado                          as idGradoHabilitado
        ,gra.nombre                                     as nombreGradoHab
        ,pro.idProgramacion                             as idProgramacion
        ,stu.seccion					as seccionEst
        ,cta.uniNeg					as uniNeg
        ,uni.nombreUniNeg				as nombreUniNeg
        ,cta.idConcepto					as idConcepto
        ,con.nombre					as nombreConcepto
        ,isnull(con.flgPrecio,1)			as flgPrecio
        ,cta.idDocIngreso				as idDocIngreso
        ,doc.idDocIngreso				as idDocIngresoDoc
        ,cta.fechaPago					as fechaPago
        ,cta.cr						as cr
        ,cen.cr						as cr2
        ,cen.nombre					as nombreCr
        ,cta.cuentad					as cuentaD
        ,plad.nombre					as nombreCuentaD
        ,cta.cuentah					as cuentaH
        ,plah.nombre					as nombreCuentaH
        ,isnull(cta.monto,0)				as monto
        ,isnull(cta.montoPagado,0)			as montoPagado	
        ,isnull(cta.deuda,0)				as deuda
        ,isnull(cta.mora,0)				as mora
        ,isnull(cta.tasainteres,0)			as interes
        ,cta.idTipoMoneda				as idTipoMoneda
        ,cod.codigo					as codigoMoneda
        ,cta.fechaVenc					as fechaVenc
        ,cta.fechaPago					as fechaPago
        ,cta.dsctoBeca					as dsctoBeca
        ,isnull(cta.idEstudianteBeca,0)				as idEstudianteBeca
        ,est.idtipomotivobeca                           as idTipMotivoBeca
        ,codModBec.codigo				as codigoTipMotivoBeca
        ,est.mesInicio					as mesInicio
        ,est.idBeca					as idBeca
        ,isnull(bec.nombre,'0/6')				as nombreBeca
        ,bec.porcentaje					as porcentaje
        ,bec.idtipobeca                                 as idTipBeca
        ,codBec.codigo                                  as codigoBeca
        ,cta.idtipobeca                                 as idTipoBeca	
        ,tipb.codigo                                    as codigoTipoBeca
        ,cta.docRefProvision				as docRefProvision
        ,cta.anio					as anio	
        ,cta.mes					as mes
        ,cta.idTipoStatusCtaCte                         as idTipoStatusCtaCte
        ,sta.codigo					as codigoStatusCtaCte
        ,cta.idTipoDscto                        	as idTipoDscto
        ,tipd.codigo                    		as codigoTipoDscto
        ,cta.idTipoMotivoDscto                  	as idTipoMotivoDscto
        ,tipm.codigo                            	as codigoTipoMotivoDscto
        ,isnull(cta.dscto,0.0)				as dsctoM
        ,isnull(cta.dscto,0.0)				as dscto
        ,cta.idProcesoEnvio                     	as idProcesoEnvio
        ,proe.monto					as montoEnvio
        ,cta.idProcesoRecup                     	as idProcesoRecup
        ,recu.monto					as montoRecup
        ,tipLugar.idCodigo                              as idTipoLugarPago
        ,tipLugar.codigo                                as codTipoLugarPago
        ,cta.creaPor					as creaPor
        ,cta.creaFecha					as creaFecha
        ,cta.creaDscto				as creaDscto
        ,cta.dsctoFecha				as dsctoFecha
        ,cta.obs                                as obs
        ,cta.modiPor                                as modiPor
        ,isnull(cta.tasainteres,0)                                as tasainteres
        ,tc.nombre                             as tipoConcepto
        ,(case when cta.iddocingreso is not null then '/resources/images/icons/agregar.png' 
        else '/resources/images/icons/agregarrojo.png' end) as alerta
        ,stu.codigo                                     as codigo
        ,doc.discente                                  as nombreDiscente
        ,convert(varchar,cta.fechaPago,102)            as fechaPagoVista
        ,cta.flgEnvio                                  as estadoConcilia
        <!--,(case 
        when cta.iddocingreso is not null  and cta.fechapago is not null then 'true' 
        when cta.iddocingreso is not null  and cta.fechapago is null  and cta.idtipostatusctacte in (19401) then 'false' 
        when cta.iddocingreso is null  and cta.fechapago is null THEN (case when cta.unineg='CHAMPS2' THEN 'true' ELSE 'false' END)  
        else 'true' end )  as disabled-->
        ,(case when stu.idtipostatusest=18003 and cta.anio=2017
        then 'true' 
        else 
        (case 
        when cta.iddocingreso is not null  and cta.fechapago is not null then 'true' 
        when cta.iddocingreso is not null  and cta.fechapago is null  and cta.idtipostatusctacte in (19401) then 'false' 
        when cta.iddocingreso is null  and cta.fechapago is null THEN (case when cta.unineg='CHAMPS2' THEN 'true' ELSE 'false' END)  
        else 'true' end )
        end)   as disabled
        <!--  ,(case when isnull(cta.dscto,0)>0 then CAST((ROUND((((isnull(cta.dscto,0)/isnull(cta.mora,0))*100)), 0)) AS decimal(8,2)) else 0 end) as porcentajeDscto-->
        ,graM.idGradoAcademico as idGradoAcademico
        ,graM.nombre as nombreGrado
        ,(case when  cta.fechaPago is null then 1 else 0 end ) as flgFechaPagoNull
        ,(case when  cta.dsctoFecha is null then 1 else 0 end ) as flgFechaDsctoNull
        ,(case when  cta.fechavenc is null then 1 else 0 end ) as flgFechaVencNull
        ,(case when  cta.idprocesoBanco is null then 1 else 0 end ) as idProcesoBancoNull
        ,cta.idProcesoBanco
        ,prob.nombre as nombreProcesoBanco
        ,doc.serie as serie
        ,doc.nrodoc as nroDoc
        ,UPPER(pe.nombre) as nombre
        ,upper(pe.apepat) as apepat
        ,upper(pe.apemat) as apemat,
        doc.idrecibosmora as recibosMora
        FROM MT_CtasxCobrar cta
        INNER JOIN MX_Estudiante stu on stu.idestudiante = cta.idestudiante and stu.unineg=cta.unineg
        inner join mx_persona pe on stu.idestudiante = pe.idpersona and stu.unineg = pe.unineg <!-- ADD PERSONA -->
        INNER JOIN MX_Matricula mat on cta.idestudiante = mat.idestudiante and stu.unineg=mat.unineg and mat.anio=cta.anio
        INNER JOIN MX_GradoAcademico graM on graM.idGradoAcademico = mat.idGradoAcademico
        INNER JOIN MX_GradoAcademico gra on gra.idGradoAcademico = stu.idGradoHabilitado
        LEFT JOIN MX_Programacion pro on pro.idProgramacion = mat.idProgramacion and stu.unineg=pro.unineg and pro.anio=cta.anio
        INNER JOIN MO_UnidadNegocio uni on uni.unineg = cta.unineg
        INNER JOIN MT_Concepto con ON cta.idconcepto = con.idconcepto
        INNER JOIN MT_TipoConcepto tc on tc.idTipoConcepto=con.idtipoconcepto 
        LEFT JOIN MT_DocIngreso doc ON cta.iddocingreso = doc.iddocingreso and stu.unineg=doc.unineg and doc.anio=cta.anio
        LEFT JOIN MO_Codigo tipLugar ON doc.idTipoLugarPago = tipLugar.idcodigo    
        LEFT JOIN MT_CentroResponsabilidad cen ON cta.cr = cen.cr
        LEFT JOIN MT_PlanContable plad ON cta.cuentad = plad.cuenta     
        LEFT JOIN MT_PlanContable plah ON cta.cuentad = plah.cuenta    
        LEFT JOIN MO_Codigo cod ON cta.idtipomoneda = cod.idcodigo 
        LEFT JOIN MX_EstudianteBeca est ON est.idestudiantebeca = cta.idestudiantebeca and est.unineg=cta.unineg and est.anio=cta.anio
        LEFT JOIN MT_Beca bec ON bec.idbeca = est.idbeca
        LEFT JOIN MO_Codigo tipb ON cta.idTipoBeca = tipb.idcodigo    
        LEFT JOIN MO_Codigo sta ON cta.idtipostatusctacte = sta.idcodigo 
        LEFT JOIN MO_Codigo tipd ON cta.idTipoDscto = tipd.idcodigo     
        LEFT JOIN MO_Codigo tipm ON cta.idtipostatusctacte = tipm.idcodigo 
        LEFT JOIN MT_ProcesoEnvio proe ON cta.idprocesoenvio = proe.idprocesoenvio
        LEFT JOIN MT_ProcesoRecup recu ON cta.idprocesoenvio = recu.idprocesorecup
        LEFT JOIN MT_ProcesoBanco proB ON cta.idprocesobanco = proB.idprocesoBanco and cta.unineg=prob.unineg
        LEFT JOIN MO_Codigo codBec ON bec.idtipobeca = codBec.idcodigo    
        LEFT JOIN MO_Codigo codModBec ON est.idTipoMotivoBeca = codModBec.idcodigo  
    </sql>
    
    <sql id="consultaConcilia">
        SELECT 
        cta.idCtasXCobrar				as idCtasXCobrar
        ,cta.idEstudiante				as idEstudiante	
        ,cta.idMatricula                                as idMatricula
        ,stu.idGradoHabilitado                          as idGradoHabilitado
        ,gra.nombre                                     as nombreGradoHab
        ,pro.idProgramacion                             as idProgramacion
        ,stu.seccion					as seccionEst
        ,cta.uniNeg					as uniNeg
        ,uni.nombreUniNeg				as nombreUniNeg
        ,cta.idConcepto					as idConcepto
        ,con.nombre					as nombreConcepto
        ,isnull(con.flgPrecio,1)			as flgPrecio
        ,cta.idDocIngreso				as idDocIngreso
        ,doc.idDocIngreso				as idDocIngresoDoc
        ,cta.fechaPago					as fechaPago
        ,cta.cr						as cr
        ,cen.cr						as cr2
        ,cen.nombre					as nombreCr
        ,cta.cuentad					as cuentaD
        ,plad.nombre					as nombreCuentaD
        ,cta.cuentah					as cuentaH
        ,plah.nombre					as nombreCuentaH
        ,isnull(doc.montoefectivosol,0)				as montoEfectivoSol
        ,isnull(doc.montoefectivodol,0)				as montoEfectivoDol
        ,isnull(doc.montopos1,0)				as montoPos1
        ,isnull(doc.montopos2,0)				as montoPos2
        ,isnull(cta.monto,0)				as monto
        ,isnull(cta.montoPagado,0)			as montoPagado	
        ,isnull(cta.deuda,0)				as deuda
        ,isnull(cta.mora,0)				as mora
        ,isnull(cta.tasainteres,0)			as interes
        ,cta.idTipoMoneda				as idTipoMoneda
        ,cod.codigo					as codigoMoneda
        ,cta.fechaVenc					as fechaVenc
        ,cta.fechaPago					as fechaPago
        ,cta.dsctoBeca					as dsctoBeca
        ,isnull(cta.idEstudianteBeca,0)				as idEstudianteBeca
        ,est.idtipomotivobeca                           as idTipMotivoBeca
        ,codModBec.codigo				as codigoTipMotivoBeca
        ,est.mesInicio					as mesInicio
        ,est.idBeca					as idBeca
        ,isnull(bec.nombre,'0/6')				as nombreBeca
        ,bec.porcentaje					as porcentaje
        ,bec.idtipobeca                                 as idTipBeca
        ,codBec.codigo                                  as codigoBeca
        ,cta.idtipobeca                                 as idTipoBeca	
        ,tipb.codigo                                    as codigoTipoBeca
        ,cta.docRefProvision				as docRefProvision
        ,cta.anio					as anio	
        ,cta.mes					as mes
        ,cta.idTipoStatusCtaCte                         as idTipoStatusCtaCte
        ,sta.codigo					as codigoStatusCtaCte
        ,cta.idTipoDscto                        	as idTipoDscto
        ,tipd.codigo                    		as codigoTipoDscto
        ,cta.idTipoMotivoDscto                  	as idTipoMotivoDscto
        ,tipm.codigo                            	as codigoTipoMotivoDscto
        ,isnull(cta.dscto,0.0)				as dsctoM
        ,isnull(cta.dscto,0.0)				as dscto
        ,cta.idProcesoEnvio                     	as idProcesoEnvio
        ,proe.monto					as montoEnvio
        ,cta.idProcesoRecup                     	as idProcesoRecup
        ,recu.monto					as montoRecup
        ,tipLugar.idCodigo                              as idTipoLugarPago
        ,tipLugar.codigo                                as codTipoLugarPago
        ,cta.creaPor					as creaPor
        ,cta.creaFecha					as creaFecha
        ,cta.creaDscto				as creaDscto
        ,cta.dsctoFecha				as dsctoFecha
        ,cta.obs                                as obs
        ,cta.modiPor                                as modiPor
        ,isnull(cta.tasainteres,0)                                as tasainteres
        ,tc.nombre                             as tipoConcepto
        ,(case when cta.iddocingreso is not null then '/resources/images/icons/agregar.png' 
        else '/resources/images/icons/agregarrojo.png' end) as alerta
        ,stu.codigo                                     as codigo
        ,upper(concat(p.apepat,' ',p.apemat,', ',p.nombre))     as nombreDiscente
        ,convert(varchar,cta.fechaPago,103)            as fechaPagoVista
        ,cta.flgEnvio                                  as estadoConcilia 
        ,(case when stu.idtipostatusest=18003 and cta.anio=YEAR(GETDATE())
        then 'true' 
        else 
        (case 
        when cta.iddocingreso is not null  and cta.fechapago is not null then 'true' 
        when cta.iddocingreso is not null  and cta.fechapago is null  and cta.idtipostatusctacte in (19401) then 'false' 
        when cta.iddocingreso is null  and cta.fechapago is null THEN (case when cta.unineg='CHAMPS2' THEN 'true' ELSE 'false' END)  
        else 'true' end )
        end)   as disabled
        ,(case when isnull(cta.dscto,0)>0 then CAST((ROUND((((isnull(cta.dscto,0)/isnull(cta.mora,0))*100)), 0)) AS decimal(8,2)) else 0 end) as porcentajeDscto
        ,graM.idGradoAcademico as idGradoAcademico
        ,graM.nombre as nombreGrado
        ,(case when  cta.fechaPago is null then 1 else 0 end ) as flgFechaPagoNull
        ,(case when  cta.dsctoFecha is null then 1 else 0 end ) as flgFechaDsctoNull
        ,(case when  cta.fechavenc is null then 1 else 0 end ) as flgFechaVencNull
        ,(case when  cta.idprocesoBanco is null then 1 else 0 end ) as idProcesoBancoNull
        ,cta.idProcesoBanco
        ,prob.nombre as nombreProcesoBanco
        ,doc.serie as serie
        ,doc.nrodoc as nroDoc
        ,(case
        when mat.idgradoacademico = 1 then CONCAT(SUBSTRING(na.nombre,1,1),'1',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 2 then CONCAT(SUBSTRING(na.nombre,1,1),'2',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 3 then CONCAT(SUBSTRING(na.nombre,1,1),'3',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 4 then CONCAT(SUBSTRING(na.nombre,1,1),'4',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 5 then CONCAT(SUBSTRING(na.nombre,1,1),'5',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 6 then CONCAT(SUBSTRING(na.nombre,1,1),'6',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 7 then CONCAT(SUBSTRING(na.nombre,1,1),'7',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 8 then CONCAT(SUBSTRING(na.nombre,1,1),'8',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 9 then CONCAT(SUBSTRING(na.nombre,1,1),'9',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 10 then CONCAT(SUBSTRING(na.nombre,1,1),'10',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 11 then CONCAT(SUBSTRING(na.nombre,1,1),'11',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 23 then CONCAT(SUBSTRING(na.nombre,1,1),'3',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 24 then CONCAT(SUBSTRING(na.nombre,1,1),'4',ISNULL(mat.seccion,''))
        when mat.idgradoacademico = 25 then CONCAT(SUBSTRING(na.nombre,1,1),'5',ISNULL(mat.seccion,''))
        end)as nomSeccion 
        FROM MT_CtasxCobrar cta
        INNER JOIN MX_Estudiante stu on stu.idestudiante = cta.idestudiante and stu.unineg=cta.unineg
        inner join mx_persona p on stu.idestudiante = p.idpersona and stu.unineg = p.unineg
        INNER JOIN MX_Matricula mat on cta.idestudiante = mat.idestudiante and stu.unineg=mat.unineg and mat.anio=cta.anio and cta.idmatricula = mat.idmatricula
        INNER JOIN MX_GradoAcademico graM on graM.idGradoAcademico = mat.idGradoAcademico
        INNER JOIN MX_GradoAcademico gra on gra.idGradoAcademico = stu.idGradoHabilitado
        LEFT JOIN MX_Programacion pro on pro.idProgramacion = mat.idProgramacion and stu.unineg=pro.unineg and pro.anio=cta.anio
        INNER JOIN MO_UnidadNegocio uni on uni.unineg = cta.unineg
        INNER JOIN MT_Concepto con ON cta.idconcepto = con.idconcepto
        INNER JOIN MT_TipoConcepto tc on tc.idTipoConcepto=con.idtipoconcepto 
        LEFT JOIN MT_DocIngreso doc ON cta.iddocingreso = doc.iddocingreso and stu.unineg=doc.unineg and doc.anio=cta.anio
        LEFT JOIN MO_Codigo tipLugar ON doc.idTipoLugarPago = tipLugar.idcodigo    
        LEFT JOIN MT_CentroResponsabilidad cen ON cta.cr = cen.cr
        LEFT JOIN MT_PlanContable plad ON cta.cuentad = plad.cuenta     
        LEFT JOIN MT_PlanContable plah ON cta.cuentad = plah.cuenta    
        LEFT JOIN MO_Codigo cod ON cta.idtipomoneda = cod.idcodigo 
        LEFT JOIN MX_EstudianteBeca est ON est.idestudiantebeca = cta.idestudiantebeca and est.unineg=cta.unineg and est.anio=cta.anio
        LEFT JOIN MT_Beca bec ON bec.idbeca = est.idbeca
        LEFT JOIN MO_Codigo tipb ON cta.idTipoBeca = tipb.idcodigo    
        LEFT JOIN MO_Codigo sta ON cta.idtipostatusctacte = sta.idcodigo 
        LEFT JOIN MO_Codigo tipd ON cta.idTipoDscto = tipd.idcodigo     
        LEFT JOIN MO_Codigo tipm ON cta.idtipostatusctacte = tipm.idcodigo 
        LEFT JOIN MT_ProcesoEnvio proe ON cta.idprocesoenvio = proe.idprocesoenvio
        LEFT JOIN MT_ProcesoRecup recu ON cta.idprocesoenvio = recu.idprocesorecup
        LEFT JOIN MT_ProcesoBanco proB ON cta.idprocesobanco = proB.idprocesoBanco and cta.unineg=prob.unineg
        LEFT JOIN MO_Codigo codBec ON bec.idtipobeca = codBec.idcodigo    
        LEFT JOIN MO_Codigo codModBec ON est.idTipoMotivoBeca = codModBec.idcodigo
        inner join MX_NivelAcademico na on graM.idnivelacademico = na.idnivelacademico
    </sql>
    <resultMap id="ctasXCobrarResultado" type="pe.marista.sigma.bean.CuentasPorCobrarBean">
        <id property="idCtasXCobrar" column="idCtasXCobrar"/>
        <result property="anio" column="anio"/>
        <result property="mes" column="mes"/>
        <result property="monto" column="monto"/>
        <result property="tasaInteres" column="tasaInteres"/>
        <result property="mora" column="mora"/>
        <result property="dscto" column="dsctoM"/>
        <result property="dscto" column="dscto"/>
        <result property="montoPagado" column="montoPagado"/>
        <result property="deuda" column="deuda"/>       
        <result property="fechaVenc" column="fechaVenc"/>
        <result property="fechaPago" column="fechaPago"/>
        <result property="dsctoBeca" column="dsctoBeca"/>
        <result property="docRefProvision" column="docRefProvision"/>        
        <result property="creaPor" column="creaPor"/>
        <result property="creaFecha" column="creaFecha"/>
        <result property="modiPor" column="modiPor"/> 
        <result property="flgDistinct" column="flgDistinct"/> 
        <result property="creaDscto" column="creaDscto"/> 
        <result property="dsctoFecha" column="dsctoFecha"/> 
        <result property="alerta" column="alerta"/> 
        <result property="disabled" column="disabled"/> 
        <result property="obs" column="obs"/> 
        <result property="fechaPagoVista" column="fechaPagoVista"/> 
        <result property="flgEnvio" column="estadoConcilia"/> 
        <result property="porcentajeDscto" column="porcentajeDscto"/>  
        <result property="tasainteres" column="tasainteres"/> 
        <result property="flgFechaPagoNull" column="flgFechaPagoNull"/> 
        <result property="flgFechaDsctoNull" column="flgFechaDsctoNull"/> 
        <result property="flgFechaVencNull" column="flgFechaVencNull"/> 
        <result property="idProcesoBancoNull" column="idProcesoBancoNull"/> 
        <result property="montoPalabras" column="montoPalabras"/> 
        <result property="fechaPalabras" column="fechaPalabras"/> 
        <result property="nomBanco" column="nomBanco"/> 
        <result property="grado" column="grado"/> 
        <result property="correoRec" column="correoRec"/> 
        <result property="referenciaCuenta" column="referenciaCuenta"/> 
        <result property="idProcesoBanco" column="idProcesoBanco"/> 
        <result property="nombreProcesoBanco" column="nombreProcesoBanco"/> 
        <result property="meses" column="meses"/> 
        <result property="nomSeccion" column="nomSeccion"/>  
        <association property="unidadNegocioBean" column="uniNeg"
                     javaType="pe.marista.sigma.bean.UnidadNegocioBean"
                     resultMap="unidadNegocioResultado"/> 
        <association property="estudianteBean" column="idEstudiante"
                     javaType="pe.marista.sigma.bean.EstudianteBean"
                     resultMap="estudianteResultado"/>     
        <association property="matriculaBean" column="idMatricula"
                     javaType="pe.marista.sigma.bean.MatriculaBean"
                     resultMap="matriculaResultado"/>        
        <association property="conceptoBean" column="idConcepto"
                     javaType="pe.marista.sigma.bean.ConceptoBean"
                     resultMap="conceptoResultado"/>
        <association property="idTipoStatusCtaCte" column="idTipoStatusCtaCte"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoStatusCtaCteResultado"/>
        <association property="centroResponsabilidadBean" column="cr"
                     javaType="pe.marista.sigma.bean.CentroResponsabilidadBean"
                     resultMap="centroResponsabilidadResultado"/>
        <association property="cuentaD" column="cuentaD"
                     javaType="pe.marista.sigma.bean.PlanContableBean"
                     resultMap="planContableDResultado"/>
        <association property="cuentaH" column="cuentaH"
                     javaType="pe.marista.sigma.bean.PlanContableBean"
                     resultMap="planContableHResultado"/>
        <association property="docIngresoBean" column="idDocIngreso"
                     javaType="pe.marista.sigma.bean.DocIngresoBean"
                     resultMap="docIngresoResultado"/>        
        <association property="idTipoMoneda" column="idTipoMoneda"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoMonedaResultado"/>
        <association property="idTipoDscto" column="idTipoDscto"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoDsctoResultado"/>
        <association property="idTipoMotivoDscto" column="idTipoMotivoDscto"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoMotivoResultado"/>
        <association property="estudianteBecaBean" column="idEstudianteBeca"
                     javaType="pe.marista.sigma.bean.EstudianteBecaBean"
                     resultMap="estudianteBecaResultado"/>
        <association property="idTipoBeca" column="idTipoBeca"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoBecaResultado"/>
        <association property="procesoEnvioBean" column="idProcesoEnvio"
                     javaType="pe.marista.sigma.bean.ProcesoEnvioBean"
                     resultMap="procesoEnvioResultado"/>
        <association property="procesoRecuperacionBean" column="idProcesoRecup"
                     javaType="pe.marista.sigma.bean.ProcesoRecuperacionBean"
                     resultMap="procesoRecuperacionResultado"/>
        
    </resultMap>
    
    <!--idEstudiante-->
    <resultMap id="matriculaResultado" type="pe.marista.sigma.bean.MatriculaBean">
        <id property="idMatricula" column="idMatricula"/>
        <result property="seccion" column="seccion"/>
        <association property="gradoAcademicoBean" column="idGradoAcademico"
                     javaType="pe.marista.sigma.bean.GradoAcademicoBean"
                     resultMap="gradoAcademicoResultado"/>  
        <association property="programacionBean" column="idProgramacion"
                     javaType="pe.marista.sigma.bean.ProgramacionBean"
                     resultMap="programacionResultado"/>  
    </resultMap>
    <!--idGradoAcadémico-->
    <resultMap id="gradoAcademicoResultado" type="pe.marista.sigma.bean.GradoAcademicoBean">
        <id property="idGradoAcademico" column="idGradoAcademico"/>
        <result property="nombre" column="nombreGrado"/>
        <association property="nivelAcademicoBean" column="idNivelAcademico"
                     javaType="pe.marista.sigma.bean.NivelAcademicoBean"
                     resultMap="nivelResultado"/>
    </resultMap>
    
    <resultMap id="nivelResultado" type="pe.marista.sigma.bean.NivelAcademicoBean">
        <id property="idNivelAcademico" column="idNivelAcademico"/>
        <result property="nombre" column="nomNA"/> 
    </resultMap>
    <!--idProgramacion-->
    <resultMap id="programacionResultado" type="pe.marista.sigma.bean.ProgramacionBean">
        <id property="idProgramacion" column="idProgramacion"/>
        <result property="seccion" column="seccion"/>
    </resultMap>
    <!--idConcepto-->
    <resultMap id="conceptoResultado" type="pe.marista.sigma.bean.ConceptoBean">
        <id property="idConcepto" column="idConcepto"/>
        <result property="nombre" column="nombreConcepto"/>
        <result property="flgPrecio" column="flgPrecio"/>
        <association property="tipoConceptoBean" column="idTipoConcepto"
                     javaType="pe.marista.sigma.bean.TipoConceptoBean"
                     resultMap="tipoConceptoResultado"/>
    </resultMap>
    <resultMap id="tipoConceptoResultado" type="pe.marista.sigma.bean.TipoConceptoBean">
        <id property="idTipoConcepto" column="idTipoConcepto"/>
        <result property="nombre" column="tipoConcepto"/>
    </resultMap>
    <!--idDocIngreso-->
    <resultMap id="docIngresoResultado" type="pe.marista.sigma.bean.DocIngresoBean">
        <id property="idDocIngreso" column="idDocIngresoDoc"/>
        <result property="fechaPago" column="fechaPago"/>
        <result property="serie" column="serie"/>
        <result property="nroDoc" column="nroDoc"/>
        <result property="serieNroDoc" column="serieNroDoc"/>
        <result property="nombreDiscente" column="nombreDiscente"/> 
        <result property="fechaImpresion" column="fechaImpresion"/> 
        <result property="montoEfectivoSol" column="montoEfectivoSol"/> 
        <result property="montoEfectivoDol" column="montoEfectivoDol"/> 
        <result property="montoPos1" column="montoPos1"/> 
        <result property="montoPos2" column="montoPos2"/> 
        <association property="idTipoLugarPago" column="idTipoLugarPago"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoLugarPagoCteResultado"/>
    </resultMap>
    <resultMap id="tipoLugarPagoCteResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoLugarPago"/>
        <result property="codigo" column="codTipoLugarPago"/>
    </resultMap>
    <!--cr-->
    <resultMap id="centroResponsabilidadResultado" type="pe.marista.sigma.bean.CentroResponsabilidadBean">
        <id property="cr" column="cr2"/>
        <result property="nombre" column="nombreCr"/>
    </resultMap>
    <!--cuenta-->
    <resultMap id="planContableDResultado" type="pe.marista.sigma.bean.PlanContableBean">
        <id property="cuenta" column="cuentaD"/>
        <result property="nombre" column="nombreCuentaD"/>
    </resultMap>
    <resultMap id="planContableHResultado" type="pe.marista.sigma.bean.PlanContableBean">
        <id property="cuenta" column="cuentaH"/>
        <result property="nombre" column="nombreCuentaH"/>
    </resultMap>
    <!--idTipoMoneda-->
    <resultMap id="tipoMonedaResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoMoneda"/>
        <result property="codigo" column="codigoMoneda"/>
    </resultMap>
    <!--idDscto-->
    <resultMap id="tipoDsctoResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoDscto"/>
        <result property="codigo" column="codigoTipoDscto"/>
    </resultMap>
    <!--idTipoMotivo-->
    <resultMap id="tipoMotivoResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoMotivoDscto"/>
        <result property="codigo" column="codigoTipoMotivoDscto"/>
    </resultMap>
    <!--idTipoBeca-->
    <resultMap id="tipoBecaResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoBeca"/>
        <result property="codigo" column="codigoTipoBeca"/>
    </resultMap>
    <!-- EstudianteBeca-->
    <resultMap id="estudianteBecaResultado" type="pe.marista.sigma.bean.EstudianteBecaBean">
        <id property="idEstudianteBeca" column="idEstudianteBeca"/>
        <association property="becaBean" column="idBeca"
                     javaType="pe.marista.sigma.bean.BecaBean"
                     resultMap="becaResultado"/>
        <association property="cronogramaPagoBean" column="mesInicio"
                     javaType="pe.marista.sigma.bean.CronogramaPagoBean"
                     resultMap="cronogramaPagoResultado"/>
        <association property="idTipoMotivoBeca" column="idTipMotivoBeca"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipMotivoBecaResultado"/>
    </resultMap>
    <!-- Beca -->
    <resultMap id="becaResultado" type="pe.marista.sigma.bean.BecaBean">
        <id property="idBeca" column="idBeca"/>
        <result property="nombre" column="nombreBeca"/>
        <result property="porcentaje" column="porcentaje"/>
        <association property="codigoBean" column="idTipBeca"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipBecaResultado"/>
    </resultMap>
    <resultMap id="tipBecaResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipBeca"/>
        <result property="codigo" column="codigoBeca"/>
    </resultMap>
    <!-- Cronograma -->
    <resultMap id="cronogramaPagoResultado" type="pe.marista.sigma.bean.CronogramaPagoBean">
        <id property="mes" column="mesInicio"/>
    </resultMap>
    
    <!--idTipoMotivoBeca-->
    <resultMap id="tipoMotivoBecaResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipMotivoBeca"/>
        <result property="codigo" column="codigoTipMotivoBeca"/>
    </resultMap>
    <!--idTipMotivoBeca-->
    <resultMap id="tipMotivoBecaResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoMotivoBeca"/>
        <result property="codigo" column="codigoMotivoBeca"/>
    </resultMap>
    
    <!--tipoMotivoCondonacionResultado-->
    
    <resultMap id="tipoMotivoCondonacionResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoMotivoCondonacion"/>
        <result property="codigo" column="codigoMotivoCondonacion"/>
    </resultMap>
    
    <!--idTipoStatusCtaCte-->
    <resultMap id="tipoStatusCtaCteResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoStatusCtaCte"/>
        <result property="codigo" column="codigoStatusCtaCte"/>
    </resultMap>
    <!--idProcesoEnvio -->
    <resultMap id="procesoEnvioResultado" type="pe.marista.sigma.bean.ProcesoEnvioBean">
        <id property="idProcesoEnvio" column="idProcesoEnvio"/>
        <result property="monto" column="montoEnvio"/>
    </resultMap>
    <!--idProcesoRecu -->
    <resultMap id="procesoRecuperacionResultado" type="pe.marista.sigma.bean.ProcesoRecuperacionBean">
        <id property="idProcesoRecup" column="idProcesoRecup"/>
        <result property="monto" column="montoRecup"/>
    </resultMap>
    <!--uniNeg-->
    <resultMap id="unidadNegocioResultado" type="pe.marista.sigma.bean.UnidadNegocioBean">
        <id property="uniNeg" column="uniNeg"/>
        <result property="nombreUniNeg" column="nombreUniNeg"/>
    </resultMap>
    <select id="obtenerCtaCtePorEstudiante" resultMap="ctasXCobrarResultado" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean">
        <include refid="consultaCtasXCobrar"/> 
        Where cta.idEstudiante = #{estudianteBean.idEstudiante} and cta.unineg=#{unidadNegocioBean.uniNeg} and cta.anio=#{anio} and mat.anio=#{anio}
        order by cta.idCtasXCobrar
    </select>
    <select id="obtenerCuentaPorMatAnio" resultMap="ctasXCobrarResultado" parameterType="map">
        <include refid="consultaCtasXCobrar"/> 
        Where cta.idEstudiante = #{idEstudiante} and cta.unineg = #{uniNeg} and  cta.anio=#{anio} and mat.anio=#{anio}  
        order by cta.mes
    </select>
    <select id="obtenerCuentaPorMatAnioDscBeca" resultMap="ctasXCobrarResultado" parameterType="map">
        <include refid="consultaCtasXCobrar"/> 
        Where cta.idEstudiante = #{idEstudiante} and cta.unineg = #{uniNeg} and  cta.anio=#{anio} and mat.anio=#{anio} 
        and cta.mes <![CDATA[ >=  ]]> #{mesInicio} and cta.mes  <![CDATA[ <=  ]]> #{mesFin}
        order by cta.mes
    </select>
    <select id="obtenerCuentaPorMat" resultMap="ctasXCobrarResultado" parameterType="map">
        <include refid="consultaCtasXCobrar"/> 
        Where cta.idEstudiante = #{idEstudiante} and cta.unineg = #{uniNeg} 
        order by cta.idCtasXCobrar
    </select>
    
    <select id="obtenerCuentaPorId" resultMap="ctasXCobrarResultado" parameterType="map">
        <include refid="consultaCtasXCobrar"/> Where cta.idCtasXCobrar = #{idCtasXCobrar} and cta.unineg=#{uniNeg}
    </select>
    <select id="obtenerCuentaPorIdBecaDespues" resultMap="ctasXCobrarResultado" parameterType="map">
        <include refid="consultaCtasXCobrar"/> Where cta.idEstudiante = #{idEstudiante} and cta.unineg = #{uniNeg} and mes=#{mes} and cta.anio=#{anio}
    </select>
    <select id="obtenerSqlExcel" resultMap="ctasXCobrarResultado" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean">
        Select*from MT_CtasxCobrar
        Where unineg=#{uniNeg}
    </select>
    <select id="obtenerCuentaPorIdDocIngreso" resultMap="ctasXCobrarResultado" parameterType="map">
        select idCtasXCobrar,uniNeg from MT_CtasxCobrar 
        where idctasxcobrar in(select idctasxcobrar from MT_CtasxCobrar where iddocingreso=#{idDocIngreso} and unineg=#{uniNeg}) and unineg=#{uniNeg}
    </select>
    
    <select id="obtenerDeudaEstudiante" parameterType="map" resultMap="ctasXCobrarResultado" >
        <include refid="consultaCtasXCobrar" /> 
        where cta.idestudiante = #{idEstudiante} and cta.idtipostatusctacte = 19401 
    </select>  
    <select id="obtenerDeudaEstudiantePorAnio" parameterType="map" resultMap="ctasXCobrarResultado" >
        SELECT 
        cta.idCtasXCobrar				as idCtasXCobrar
        ,cta.idEstudiante				as idEstudiante	
        ,cta.idMatricula                                as idMatricula
        ,stu.idGradoHabilitado                          as idGradoHabilitado 
        ,pro.idProgramacion                             as idProgramacion 
        ,cta.uniNeg					as uniNeg 
        ,cta.idConcepto					as idConcepto 
        ,cta.idDocIngreso				as idDocIngreso
        ,cta.fechaPago					as fechaPago
        ,cta.cr						as cr 
        ,cta.cuentad					as cuentaD 
        ,cta.cuentah					as cuentaH 
        ,cta.monto					as monto
        ,cta.montoPagado				as montoPagado	
        ,cta.deuda					as deuda
        ,cta.mora					as mora
        ,cta.tasainteres				as interes
        ,cta.idTipoMoneda				as idTipoMoneda 
        ,cta.fechaVenc					as fechaVenc
        ,cta.fechaPago					as fechaPago
        ,cta.dsctoBeca					as dsctoBeca
        ,cta.idEstudianteBeca				as idEstudianteBeca 
        ,cta.idtipobeca                                 as idTipoBeca	  
        ,cta.anio					as anio	
        ,cta.mes					as mes
        ,cta.idTipoStatusCtaCte                         as idTipoStatusCtaCte  
        ,cta.creaFecha					as creaFecha
        ,cta.creaDscto                                  as creaDscto
        ,cta.dsctoFecha                                 as dsctoFecha
        ,cta.obs                                        as obs 
        FROM MT_CtasxCobrar cta
        INNER JOIN MX_Estudiante stu on stu.idestudiante = cta.idestudiante and stu.unineg=cta.unineg
        INNER JOIN MX_Matricula mat on cta.idestudiante = mat.idestudiante and stu.unineg=mat.unineg
        INNER JOIN MX_Programacion pro on pro.idProgramacion = mat.idProgramacion and stu.unineg=pro.unineg and pro.anio=cta.anio
        LEFT JOIN MO_Codigo tipm ON cta.idtipostatusctacte = tipm.idcodigo  
        where cta.unineg=#{uniNeg} and cta.idestudiante = #{idEstudiante} and cta.idtipostatusctacte = 19401  and cta.anio=#{anio}
    </select>  
    <select id="obtenerIdDocIngreso" parameterType="map" resultType="Integer"  >
        SELECT 
        cta.idDocIngreso as idDocIngreso      
        FROM MT_CtasxCobrar cta 
        where cta.unineg=#{uniNeg} and cta.idestudiante = #{idEstudiante} and cta.anio=#{anio}
    </select>  
    <select id="obtenerRecibosGenerados" parameterType="map" resultType="Integer"  >
        SELECT 
        d.iddocingreso as idDocIngreso      
        FROM MT_CtasxCobrar cta 
        inner join MT_DocIngreso d on d.iddocingreso=cta.iddocingreso
        where cta.unineg=#{uniNeg} and cta.idestudiante = #{idEstudiante} and cta.anio=#{anio}
    </select>  
    
    <sql id="consultaEstudianteMat"> 
        Select  
        est.idEstudiante,
        est.idEstudiante as idPersona,
        per.nombre,
        per.apepat,
        per.apemat,
        per.sexo,
        per.nroDoc,
        per.correo,
        per.unineg,
        mat.anio,
        est.codigo,
        est.idTipoStatusEst,
        est.idTipoIngresoEst,
        est.idGradoIngreso,
        est.anioIngreso,
        est.fechaIngreso,
        est.foto,
        est.idDistritoNaci,
        proNac.idProvincia as idProvinciaNaci,
        depNac.idDepartamento as idDepartamentoNaci,
        est.refeLugarNaci,
        est.idTipoIdioma,
        est.idDistritoDomi,
        proDomi.idProvincia as idProvinciaDomi,
        depDomi.idDepartamento as idDepartamentoDomi,
        est.idTipoViaDomi,
        est.viaDomi,
        est.nroDomi,
        est.urbDomi,
        est.refeDomi,
        est.telefono1Domi,
        est.telefono2Domi,        
        est.factorSanguineo,
        est.grupoSanguineo,
        est.idFamiliarEmergencia,
        gra.nombre as nombreGradoHab,
        (CASE WHEN fechastatusest IS NULL THEN '-' ELSE 'FECHA RETIRO: '+(convert(varchar,fechastatusest,103)) END) as fechaStatusEstAyuda 
        From MX_Estudiante est
        Inner Join MX_Persona per On est.idEstudiante=per.idPersona and est.unineg=per.unineg
        Inner Join MX_Matricula mat On est.idEstudiante=mat.idEstudiante and est.unineg=mat.unineg
        Left Join MO_Distrito disNac On est.idDistritoNaci=disNac.idDistrito
        Left Join MO_Provincia proNac On disNac.idProvincia=proNac.idProvincia
        Left Join MO_Departamento depNac On proNac.idDepartamento=depNac.idDepartamento
        Left Join MO_Distrito disDomi On est.idDistritoDomi=disDomi.idDistrito
        Left Join MO_Provincia proDomi On disDomi.idProvincia=proDomi.idProvincia
        Left Join MO_Departamento depDomi On proDomi.idDepartamento=depDomi.idDepartamento
        left join MX_GradoAcademico gra on gra.idgradoacademico=mat.idgradoacademico
    </sql>
    
    <resultMap id="estudianteResultado" type="pe.marista.sigma.bean.EstudianteBean">
        <id property="idEstudiante" column="idEstudiante"/>
        <result property="codigo" column="codigo"/>
        <result property="anioIngreso" column="anioIngreso"/>
        <result property="fechaIngreso" column="fechaIngreso"/>
        <result property="foto" column="foto"/>
        <result property="refeLugarNaci" column="refeLugarNaci"/>
        <result property="viaDomi" column="viaDomi"/>
        <result property="seccion" column="seccionEst"/>
        <result property="nroDomi" column="nroDomi"/>
        <result property="urbDomi" column="urbDomi"/>
        <result property="refeDomi" column="refeDomi"/>
        <result property="telefono1Domi" column="telefono1Domi"/>
        <result property="telefono2Domi" column="telefono2Domi"/>        
        <result property="factorSanguineo" column="factorSanguineo"/>
        <result property="grupoSanguineo" column="grupoSanguineo"/>
        <result property="fechaStatusEstAyuda" column="fechaStatusEstAyuda"/>
        <association property="personaBean" column="idPersona"
                     javaType="pe.marista.sigma.bean.PersonaBean"
                     resultMap="personaResultado2"/>
        <association property="gradoAcademicoBean" column="idGradoIngreso"
                     javaType="pe.marista.sigma.bean.GradoAcademicoBean"
                     resultMap="gradoResultado2"/><!--Cambio-->
        <association property="gradoHabilitado" column="idGradoHabilitado"
                     javaType="pe.marista.sigma.bean.GradoAcademicoBean"
                     resultMap="gradoResultado3"/><!--Cambio-->
        <association property="tipoStatusEst" column="idTipoStatusEst"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoStatusEstResultado"/>
        <association property="tipoIngresoEst" column="idTipoIngresoEst"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoIngresoEstResultado"/>
        <association property="idDistritoNaci" column="idDistritoNaci"
                     javaType="pe.marista.sigma.bean.DistritoBean"
                     resultMap="distritoNaciResultado"/>
        <association property="tipoIdioma" column="idTipoIdioma"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoIdiomaResultado"/>
        <association property="idDistritoDomi" column="idDistritoDomi"
                     javaType="pe.marista.sigma.bean.DistritoBean"
                     resultMap="distritoDomiResultado"/>
        <association property="idTipoViaDomi" column="idTipoViaDomi"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="viaDomiResultado"/>
        <association property="familiarBean" column="idFamiliarEmergencia"
                     javaType="pe.marista.sigma.bean.FamiliarBean"
                     resultMap="famiPerResultado"/>
    </resultMap>
    <!--idEstudiante(Persona)-->
    <resultMap id="personaResultado2" type="pe.marista.sigma.bean.PersonaBean">
        <id property="idPersona" column="idPersona"/>
        <result property="nombre" column="nombre"/>
        <result property="apepat" column="apepat"/>
        <result property="apemat" column="apemat"/>
        <result property="sexo" column="sexo"/>
        <result property="nroDoc" column="nroDoc"/>
        <result property="fecNac" column="fecNac"/>
        <result property="correo" column="correo"/>        
        <association property="unidadNegocioBean" column="uniNeg"
                     javaType="pe.marista.sigma.bean.UnidadNegocioBean"
                     resultMap="unidadNegocioResultado"/>
    </resultMap> 
    <!--idGradoIngreso-->
    <resultMap id="gradoResultado2" type="pe.marista.sigma.bean.GradoAcademicoBean"><!--Posible error id Parecido-->
        <id property="idGradoAcademico" column="idGradoIngreso"/><!--Cambio-->
        <result property="codigo" column="codigo"/>
        <result property="nombre" column="nombre"/>
    </resultMap>
    <!--idGradoH-->
    <resultMap id="gradoResultado3" type="pe.marista.sigma.bean.GradoAcademicoBean"><!--Posible error id Parecido-->
        <id property="idGradoAcademico" column="idGradoHabilitado"/><!--Cambio--> 
        <result property="nombre" column="nombreGradoHab"/>
    </resultMap>
    <!--idTipoStatusEst-->
    <resultMap id="tipoStatusEstResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoStatusEst"/>
        <result property="codigo" column="codigo1"/>
        <result property="valor" column="valor1"/>
    </resultMap>    
    <!--idTipoIngresoEst-->
    <resultMap id="tipoIngresoEstResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoIngresoEst"/>
        <result property="codigo" column="codigo1"/>
        <result property="valor" column="valor1"/>
    </resultMap>
    <!--idDistritoNaci-->
    <resultMap id="distritoNaciResultado" type="pe.marista.sigma.bean.DistritoBean">
        <id property="idDistrito" column="idDistritoNaci"/>
        <result property="nombre" column="nombre"/>
        <association property="provinciaBean" column="idProvinciaNaci"
                     javaType="pe.marista.sigma.bean.ProvinciaBean"
                     resultMap="provinciaNaciResultado"/>
    </resultMap>
    <resultMap id="provinciaNaciResultado" type="pe.marista.sigma.bean.ProvinciaBean">
        <id property="idProvincia" column="idProvinciaNaci"/>
        <association property="departamentoBean" column="idDepartamentoNaci"
                     javaType="pe.marista.sigma.bean.DepartamentoBean"
                     resultMap="departamentoNaciResultado"/>
    </resultMap>
    <resultMap id="departamentoNaciResultado" type="pe.marista.sigma.bean.DepartamentoBean">
        <id property="idDepartamento" column="idDepartamentoNaci"/>
    </resultMap>
    <!--idTipoIdioma-->
    <resultMap id="tipoIdiomaResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoIdioma"/>
        <result property="codigo" column="codigo1"/>
        <result property="valor" column="valor1"/>
    </resultMap>
    <!--idDistritoDomi-->
    <resultMap id="distritoDomiResultado" type="pe.marista.sigma.bean.DistritoBean">
        <id property="idDistrito" column="idDistritoDomi"/>
        <result property="nombre" column="nombre"/>
        <association property="provinciaBean" column="idProvinciaDomi"
                     javaType="pe.marista.sigma.bean.ProvinciaBean"
                     resultMap="provinciaDomiResultado"/>
    </resultMap>
    <resultMap id="provinciaDomiResultado" type="pe.marista.sigma.bean.ProvinciaBean">
        <id property="idProvincia" column="idProvinciaDomi"/>
        <association property="departamentoBean" column="idDepartamentoDomi"
                     javaType="pe.marista.sigma.bean.DepartamentoBean"
                     resultMap="departamentoDomiResultado"/>
    </resultMap>
    <resultMap id="departamentoDomiResultado" type="pe.marista.sigma.bean.DepartamentoBean">
        <id property="idDepartamento" column="idDepartamentoDomi"/>
    </resultMap>
    <!--idTipoViaDomi-->
    <resultMap id="viaDomiResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoViaDomi"/>
        <result property="codigo" column="codigo1"/>
        <result property="valor" column="valor1"/>
    </resultMap>
    <!--idFamiliar(Persona)-->
    <resultMap id="famiPerResultado" type="pe.marista.sigma.bean.FamiliarBean">
        <id property="idFamiliar" column="idFamiliar"/>
        <association property="personaBean" column="idPersona"
                     javaType="pe.marista.sigma.bean.PersonaBean"
                     resultMap="personaFamiliaResultado"/>
    </resultMap> 
    <!--familairBean(Persona)-->
    <resultMap id="personaFamiliaResultado" type="pe.marista.sigma.bean.PersonaBean">
        <id property="idPersona" column="idPersona"/>
        <result property="nombre" column="nombre"/>
        <result property="apepat" column="apepat"/>
        <result property="apemat" column="apemat"/>
        <result property="sexo" column="sexo"/>
        <result property="nroDoc" column="nroDoc"/>
        <result property="fecNac" column="fecNac"/>
        <result property="correo" column="correo"/>
    </resultMap> 
    
    <select id="obtenerMatriculadosPorPeriodo" resultMap="estudianteResultado" parameterType="pe.marista.sigma.bean.MatriculaBean" >
        <include refid="consultaEstudianteMat" /> Where per.unineg = #{unidadNegocioBean.uniNeg} and mat.anio=#{anio}
    </select>
   
    <select id="obtenerFiltroEstudianteMatriculado" resultMap="estudianteResultado" parameterType="pe.marista.sigma.bean.MatriculaBean">
        <include refid="consultaEstudianteMat"/>
        <where>
            per.unineg = #{unidadNegocioBean.uniNeg} 
            <if test="estudianteBean.personaBean.idPersona != null and estudianteBean.personaBean.idPersona != ''">
                and  est.idEstudiante=#{estudianteBean.personaBean.idPersona} 
            </if>
            <if test="estudianteBean.codigo != null and estudianteBean.codigo != ''">
                and  est.codigo = #{estudianteBean.codigo} 
            </if>
            <if test="estudianteBean.personaBean.apepat != null and estudianteBean.personaBean.apepat != ''">
                and upper(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(per.apepat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')) 
                like concat('%',REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(#{estudianteBean.personaBean.apepat},'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),'%')
            </if> 
            <if test="estudianteBean.personaBean.apemat != null and estudianteBean.personaBean.apemat != ''">
                and upper(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(per.apemat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')) 
                like concat('%',REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(#{estudianteBean.personaBean.apemat},'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),'%')
            </if>
            <if test="estudianteBean.personaBean.nombre != null and estudianteBean.personaBean.nombre != ''">
                and upper(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(per.nombre,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')) 
                like concat('%',REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(#{estudianteBean.personaBean.nombre},'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),'%')
                <!--and upper(per.nombre) like concat('%',#{estudianteBean.personaBean.nombre},'%')-->
            </if>  
            <if test="anio != null and anio != 0">
                and mat.anio= #{anio}
            </if>
        </where>
        order by est.idgradohabilitado,per.apepat
    </select>
    
    <update id="modificarCuenta" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        UPDATE MT_CtasxCobrar
        SET 
        montopagado = #{montoPagado},
        <!--fechaPago = #{fechaPago},-->
        idProcesoRecup = #{procesoRecuperacionBean.idProcesoRecup},
        <!--mora = #{mora},-->
        modiPor = #{modiPor}
        where idCtasXCobrar = #{idCtasXCobrar} and idEstudiante = #{estudianteBean.idEstudiante} 
    </update>
    
    <update id="modificarCuentaPorEnvio" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        UPDATE MT_CtasxCobrar
        SET 
        idProcesoEnvio = #{procesoEnvioBean.idProcesoEnvio},
        modiPor = #{modiPor}
        where idCtasXCobrar = #{idCtasXCobrar} and idEstudiante = #{estudianteBean.idEstudiante} 
    </update> 
    <update id="asignarDscto" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        UPDATE MT_CtasxCobrar
        SET 
        dscto=#{dscto},
        idtipodscto=#{idTipoDscto.idCodigo},
        dsctoFecha=getdate(),
        creadscto = #{creaDscto},
        obs=#{obs}
        where idCtasXCobrar = #{idCtasXCobrar} and idEstudiante = #{estudianteBean.idEstudiante} and unineg=#{unidadNegocioBean.uniNeg} 
    </update> 
    <select id="obtenerCtaCtePorEstudiantePorAnio" resultMap="ctasXCobrarResultado" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean">
        SELECT 
        <if test="flgDistinct==true">
            distinct 
        </if>
        cta.uniNeg 
        ,cta.idEstudiante as idEstudiante
        ,per.idPersona
        ,per.apePat
        ,per.apeMat
        ,per.nombre
        ,cta.anio
        ,mat.seccion
        ,gra.idGradoAcademico
        ,gra.nombre as nombreGrado
        ,na.idnivelacademico
        ,na.nombre as nomNA
        ,est.codigo 
        ,co.codigo as codigoStatusCtaCte
        ,(case   
        when cta.mes=2 then 'MATRÍCULA'
        when cta.mes=3 then 'MARZO'
        when cta.mes=4 then 'ABRIL'
        when cta.mes=5 then 'MAYO'
        when cta.mes=6 then 'JUNIO'
        when cta.mes=7 then 'JULIO'
        when cta.mes=8 then 'AGOSTO'
        when cta.mes=9 then 'SEPTIEMBRE'
        when cta.mes=10 then 'OCTUBRE'
        when cta.mes=11 then 'NOVIEMBRE'
        when cta.mes=12 then 'DICIEMBRE'
        ELSE '' end) as meses 
        FROM MT_CtasxCobrar cta
        INNER JOIN MX_Estudiante est on est.idEstudiante= cta.idEstudiante and est.unineg=cta.unineg
        INNER JOIN MX_Persona per on est.idEstudiante=per.idPersona and est.unineg=per.unineg
        INNER JOIN MX_Matricula mat on mat.idEstudiante=cta.idEstudiante and est.unineg=mat.unineg
        INNER JOIN MX_GradoAcademico gra on gra.idGradoAcademico = mat.idGradoAcademico
        inner join MX_NivelAcademico na on gra.idnivelacademico=na.idnivelacademico
        inner join mo_codigo co on cta.idtipostatusctacte = co.idcodigo
        where cta.unineg=#{unidadNegocioBean.uniNeg} and mat.anio=#{anio} and cta.anio=#{anio} 
        <if test="estudianteBean.personaBean.idPersona != null and estudianteBean.personaBean.idPersona != ''">
            and mat.idEstudiante = #{estudianteBean.personaBean.idPersona} 
        </if>
        <if test="estudianteBean.personaBean.apepat != null and estudianteBean.personaBean.apepat != ''">
            and upper(per.apepat) like concat('%',#{estudianteBean.personaBean.apepat},'%')
        </if>
        <if test="estudianteBean.personaBean.apemat != null and estudianteBean.personaBean.apemat != ''">
            and upper(per.apemat) like concat('%',#{estudianteBean.personaBean.apemat},'%')
        </if>
        <if test="estudianteBean.personaBean.nombre != null and estudianteBean.personaBean.nombre != ''">
            and upper(per.nombre) like concat('%',#{estudianteBean.personaBean.nombre},'%')
        </if> 
        <if test="matriculaBean.gradoAcademicoBean.nivelAcademicoBean.idNivelAcademico != null and matriculaBean.gradoAcademicoBean.nivelAcademicoBean.idNivelAcademico != 0">
            and na.idNivelAcademico = #{matriculaBean.gradoAcademicoBean.nivelAcademicoBean.idNivelAcademico}
        </if> 
        <if test="matriculaBean.gradoAcademicoBean.idGradoAcademico != null and matriculaBean.gradoAcademicoBean.idGradoAcademico != 0">
            and  mat.idGradoAcademico = #{matriculaBean.gradoAcademicoBean.idGradoAcademico}
        </if> 
        order by na.idNivelAcademico desc,gra.idGradoAcademico,mat.seccion,per.apepat,per.apemat
    </select>
    
    <select id="obtenerUltimoMesPago" parameterType="map" resultType="Integer" >
        select isnull(max(mes) ,0) from MT_CtasxCobrar
        where idestudiante=#{idEstudiante} and unineg=#{uniNeg} and anio= #{anio} and fechapago is not null 
    </select> 
    <select id="obtenerSgteMesPagoAft" parameterType="map" resultType="Integer" >        
        select isnull(min(mes) ,2) from MT_CtasxCobrar
        where idestudiante=#{idEstudiante} and unineg=#{uniNeg} and anio= #{anio} and fechapago is  null 
        <if test="mes != null and mes != 0">
            and mes<![CDATA[ >= ]]>#{mes}
        </if>     
        and isnull(idtipostatusctacte,19401)=19401
    </select> 
    <select id="obtenerSgteMesPagoBef" parameterType="map" resultType="Integer" >        
        select isnull(min(mes) ,2) from MT_CtasxCobrar
        where idestudiante=#{idEstudiante} and unineg=#{uniNeg} and anio= #{anio} and fechapago is  null 
        <if test="mes != null and mes != 0">
            and mes<![CDATA[ > ]]>#{mes}
        </if>        
        and isnull(idtipostatusctacte,19401)=19401
    </select> 
    <select id="obtenerSgteMesPagoAnterior" parameterType="map" resultType="Integer" >        
        select isnull(max(mes) ,2) from MT_CtasxCobrar
        where idestudiante=#{idEstudiante} and unineg=#{uniNeg} and anio= #{anio} and fechapago is  null 
        <if test="mes != null and mes != 0">
            and mes<![CDATA[ <= ]]>#{mes}
        </if>        
        and isnull(idtipostatusctacte,19401)=19401
    </select> 
    <select id="obtenerAnioDeuda" parameterType="map" resultType="Integer" >      
        select distinct isnull(min(anio),year(getdate())) 
        from MT_CtasxCobrar 
        where idestudiante=#{idEstudiante} and isnull(idtipostatusctacte,19401)=19401  and unineg=#{uniNeg}
    </select> 
    
    <update id="cambiarEstadoCtaPorCobrar" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        UPDATE MT_CtasxCobrar
        SET 
        idTipoStatusCtaCte = (Select idCodigo from MO_Codigo Where codigo = #{idTipoStatusCtaCte.codigo} and idTipoCodigo=#{idTipoStatusCtaCte.tipoCodigoBean.descripcion}),
        montopagado = #{montoPagado},
        modiPor = #{modiPor},
        <!--iddocingreso=null,-->
        fechapago=#{fechaPago},
        obs=#{obs}
        where idCtasXCobrar = #{idCtasXCobrar} and unineg=#{unidadNegocioBean.uniNeg} 
    </update> 
    <update id="cambiarEstadoCtaPorCobrarModificaciones" parameterType="map" >
        declare @mesInicio integer=#{mesInicio},
        @mesFin integer=#{mesFin} ,
        @uniNeg varchar(6)=#{uniNeg},
        @anio int =#{anio},
        @idEstudiante varchar(15)=#{idEstudiante},
        @idTipoStatusCtaCte integer=#{idTipoStatusCtaCte} 
        UPDATE MT_CtasxCobrar
        SET  
        idTipoStatusCtaCte = @idTipoStatusCtaCte,
        monto=#{monto},mora=0,dscto=0,dsctoBeca=0,deuda=0
        where idEstudiante = @idEstudiante and unineg=@uniNeg
        and  mes<![CDATA[ >= ]]>@mesInicio and mes<![CDATA[ <= ]]>@mesFin
        and anio=@anio and idTipoStatusCtaCte!=19404
    </update> 
    <update id="cambiarEstadoCtaPorCobrarModificacionesActivosCambGr" parameterType="map" >
        declare @mesInicio integer=#{mesInicio},
        @mesFin integer=#{mesFin} ,
        @uniNeg varchar(6)=#{uniNeg},
        @anio int =#{anio},
        @idEstudiante varchar(15)=#{idEstudiante},
        @idTipoStatusCtaCte integer=#{idTipoStatusCtaCte} 
        UPDATE MT_CtasxCobrar
        SET  
        idTipoStatusCtaCte = @idTipoStatusCtaCte,
        monto=#{monto} 
        where idEstudiante = @idEstudiante and unineg=@uniNeg
        and  mes<![CDATA[ >= ]]>@mesInicio and mes<![CDATA[ <= ]]>@mesFin
        and anio=@anio and idTipoStatusCtaCte!=19404
    </update> 
    
    <select id="obtenerCtasXCobrarModificaciones" resultType="Integer" parameterType="map">
        declare @mesInicio integer=#{mesInicio},
        @mesFin integer=#{mesFin} ,
        @uniNeg varchar(6)=#{uniNeg},
        @anio int =#{anio},
        @idEstudiante varchar(15)=#{idEstudiante}
        SELECT idTipoStatusCtaCte FROM MT_CtasxCobrar 
        Where unineg =@uniNeg  and anio = @anio and idEstudiante =  @idEstudiante
        and  mes<![CDATA[ >= ]]>@mesInicio and mes<![CDATA[ <= ]]>@mesFin
    </select>
    
    <select id="validarMonto" parameterType="map"  resultType="Double">
        select 
        distinct cu.importe
        from MT_CtasxCobrar c
        inner join MT_Concepto co on co.idconcepto=c.idconcepto
        inner join MT_ConceptoUniNeg cu on cu.idconcepto=co.idconcepto 
        where c.anio=#{anio} and c.idestudiante=#{idEstudiante} and c.unineg=#{uniNeg}   
    </select> 
    <select id="validarDocIngresoEnCtaCte" parameterType="map"  resultMap="ctasXCobrarResultado">
        SELECT 
        cta.idCtasXCobrar				as idCtasXCobrar
        ,cta.idEstudiante				as idEstudiante	 
        ,cta.uniNeg					as uniNeg 
        ,cta.idDocIngreso				as idDocIngreso
        ,cta.fechaPago					as fechaPago 
        ,cta.monto					as monto
        ,cta.montoPagado				as montoPagado	
        ,cta.deuda					as deuda
        ,cta.mora					as mora   
        FROM MT_CtasxCobrar cta
        where idDocIngreso=#{idDocIngreso} and unineg=#{uniNeg}  
    </select>  
    <select id="obtenerCtasXCobrarbSegunMeses" resultMap="ctasXCobrarResultado" parameterType="map">
        SELECT * FROM MT_CtasxCobrar 
        Where unineg = #{uniNeg} and anio = #{anio} and idEstudiante = #{idEstudiante} 
        and  mes in
        <foreach item="item" index="index" collection="listaMes" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select> 
    <select id="obtenerCtasXCobrarXMesesNoGenerado" resultMap="ctasXCobrarResultado" parameterType="map"> 
        select 
        consulta.nivel,
        consulta.apePat,
        consulta.apeMat,
        consulta.nombreAl,
        consulta.idEstudiante,
        consulta.idGradoHabilitado,
        consulta.mes,
        consulta.seccion,
        consulta.idEstudianteBeca,
        consulta.idConcepto,
        consulta.idRespPago,
        consulta.monto,
        consulta.dscto,
        consulta.dsctoBeca,
        consulta.idTipoDscto,
        consulta.idTipoMotivoDscto,
        consulta.cuentaD,
        consulta.cuentaH,
        consulta.cr,
        consulta.idCtasXCobrar,
        consulta.condicion,
        consulta.anio,
        consulta.nombreConcepto
        from 
        (
        SELECT 
        p.apepat as apePat,
        p.apemat as apeMat,
        p.nombre as nombreAl,
        cta.idEstudiante,
        stu.idGradoHabilitado as idGradoHabilitado,
        n.idnivelacademico as nivel,
        cta.mes,
        cta.anio,
        stu.seccion,
        cta.idestudianteBeca,
        cta.idConcepto as idConcepto,
        stu.idRespPago,
        cta.monto,
        cta.dscto,
        cta.dsctoBeca,
        cta.idTipoDscto,
        cta.idTipoMotivoDscto,
        cta.cuentaD,
        cta.cuentaH,
        cta.cr,
        cta.idCtasXCobrar,
        con.nombre as nombreConcepto,
        case
        when (
        select distinct
        cta1.iddocingreso
        from MT_DocIngreso doc
        Inner Join MT_DetDocIngreso det On doc.iddocingreso=det.iddocingreso and doc.unineg=det.unineg
        Inner Join MT_CtasxCobrar cta1 ON det.idctasxcobrar=cta1.idctasxcobrar and det.unineg=cta1.unineg
        Where doc.unineg = #{uniNeg} and doc.iddiscente = #{idEstudiante} and doc.anio = #{anio} and cta1.mes=cta.mes
        )is not null then 'si' else 'no' end as condicion
        FROM MT_CtasxCobrar cta
        INNER JOIN MX_Estudiante stu on stu.idestudiante = cta.idestudiante and stu.unineg=cta.unineg
        inner join MX_Persona p on p.idpersona=stu.idestudiante
        INNER JOIN MX_GradoAcademico gra on gra.idGradoAcademico = stu.idGradoHabilitado
        inner join MX_NivelAcademico n on gra.idnivelacademico=n.idnivelacademico
        inner join MT_Concepto con on cta.idconcepto = con.idconcepto
        Where cta.unineg = #{uniNeg} and cta.anio = #{anio} and cta.idEstudiante = #{idEstudiante}
        and  mes in 
        <foreach item="item" index="index" collection="listaMes" open="(" separator="," close=")">
            #{item}
        </foreach>
        ) consulta
        where consulta.condicion='no'
        order by consulta.mes,consulta.nivel desc,consulta.idGradoHabilitado,consulta.apePat,consulta.apeMat,consulta.nombreAl
    </select> 
    <select  id="obtenerEstadoCtaPorAnio" parameterType="map" resultType="pe.marista.sigma.bean.reporte.CuentasPorCobrarRepBean">
        declare 
        @totMora money=(select sum(isnull(mora,0)) from MT_CtasxCobrar cta  
        where cta.unineg=#{uniNeg} and cta.idestudiante=#{idEstudiante} and cta.anio=#{anio} and iddocingreso is not null),
        @totDesc money=(select sum(isnull(cta.dscto,0)) from MT_CtasxCobrar cta  
        where cta.unineg=#{uniNeg} and cta.idestudiante=#{idEstudiante} and cta.anio=#{anio} and iddocingreso is not null),
        @totDeuda money=(select sum(isnull(deuda,0)) from MT_CtasxCobrar cta 
        where cta.unineg=#{uniNeg} and cta.idestudiante=#{idEstudiante} and cta.anio=#{anio} and iddocingreso is not null),
        @totPag money=(select sum(isnull(montopagado,0)) from MT_CtasxCobrar cta 
        where cta.unineg=#{uniNeg} and cta.idestudiante=#{idEstudiante} and cta.anio=#{anio} and iddocingreso is not null AND idtipostatusctacte=19404),
        @totMoroso money=( SELECT isnull(sum(isnull(ISNULL(monto,0)-ISNULL(dscto,0)-ISNULL(dsctobeca,0)+ISNULL(mora,0),0)),0)  FROM MT_CtasxCobrar cta
        where cta.unineg=#{uniNeg} and cta.idestudiante=#{idEstudiante} and cta.anio=#{anio} and fechavenc <![CDATA[ <  ]]>GETDATE() AND idtipostatusctacte=19401  and iddocingreso is not null),
        @totProg money=( SELECT isnull(sum(isnull(ISNULL(monto,0)-ISNULL(dscto,0)-ISNULL(dsctobeca,0)+ISNULL(mora,0),0)),0)  FROM MT_CtasxCobrar cta
        where cta.unineg=#{uniNeg} and cta.idestudiante=#{idEstudiante} and cta.anio=#{anio} and fechavenc<![CDATA[ >  ]]>GETDATE() AND idtipostatusctacte=19401  and iddocingreso is not null)
        
        select distinct
        upper(ent.nombre) as nombreUniNeg,
        'R.U.C.: '+ent.ruc as ruc,
        'AÑO: '+CONVERT(VARCHAR(4),cta.anio) AS anio,
        ltrim(upper(concat(perEst.apepat,' ',perEst.apemat,', ',perEst.nombre))) as nombreEstudiante,
        est.idestudiante as idEstudiante,
        est.codigo as codigoCole,
        isnull(mat.seccion,'') as seccion,
        gra.nombre as nombreGradoAca,
        ltrim(upper(concat(cod.codigo,': ', perResp.apepat,' ',rtrim(perResp.apemat),', ',perResp.nombre))) as nombreRespPago,
        (CASE WHEN doc.resppago =' ' THEN '-' ELSE 
        ISNULL(ltrim(upper(doc.resppago)),'SIN RECIBO') END) as nombreRespPagoPme,
        (case when cta.iddocingreso is not null then concat(doc.serie,'-',right(replicate('0', 7) + rtrim(doc.nrodoc), 7)) else 'SIN RECIBO' end ) as nrodocPme,
        (case when cta.iddocingreso is not null then concat(doc.serie,'-',right(replicate('0', 7) + rtrim(doc.nrodoc), 7)) else ' ' end ) as nrodoc,
        isnull(beca.nombre,'0/6') as beca,
        (case 
        when cta.mes=2 then 'MATRÍCULA'
        when cta.mes=3 then 'MARZO'
        when cta.mes=4 then 'ABRIL'
        when cta.mes=5 then 'MAYO'
        when cta.mes=6 then 'JUNIO'
        when cta.mes=7 then 'JULIO'
        when cta.mes=8 then 'AGOSTO'
        when cta.mes=9 then 'SEPTIEMBRE'
        when cta.mes=10 then 'OCTUBRE'
        when cta.mes=11 then 'NOVIEMBRE'
        when cta.mes=12 then 'DICIEMBRE'
        ELSE (con.nombre)
        END ) as concepto,
        (case when cta.iddocingreso is not null then CONVERT(varchar, CAST(isnull(cta.monto,0) AS money), 1) else '0.0' end ) as importe,
 
        (case when cta.iddocingreso is not null then  CONVERT(varchar, CAST(isnull(cta.dscto,0) AS money), 1) else '0.0' end ) as dscto,
        (case when cta.iddocingreso is not null then  CONVERT(varchar, CAST(isnull(cta.dsctoBeca,0) AS money), 1) else '0.0' end ) as dsctoBeca, 
        (case when cta.iddocingreso is not null then  (case when cta.fechapago is null then ' /  / ' else (SELECT CONVERT(VARCHAR(10), cta.fechapago , 103))  end) else ' /  / ' end ) as fechaPago, 
        (case when cta.iddocingreso is not null then  (case when cta.fechavenc is null then ' /  / ' else (SELECT CONVERT(VARCHAR(10), cta.fechavenc , 103))  end) else ' /  / ' end ) as fechaVenc, 
        (case when cta.iddocingreso is not null then
        (CASE 
        WHEN LUG.codigo='Banco' THEN 'BCO' 
        WHEN LUG.codigo='Colegio' THEN 'COL' else ''  END)
        else '' end )  as lugar,
        (case when cta.iddocingreso is not null then  CONVERT(varchar, CAST(isnull(isnull(cta.monto,0)-isnull(cta.dsctobeca,0),0) AS money), 1) else '0.0' end ) as importeConDsctoBeca,   
        (case when cta.iddocingreso is not null then  CONVERT(varchar, CAST(isnull(cta.mora,0) AS money), 1) else '0.0' end ) as mora, 
        (case when cta.iddocingreso is not null then  CONVERT(varchar, CAST(isnull(cta.deuda,0) AS money), 1) else '0.0' end ) as adeuda, 
        (case when cta.iddocingreso is not null then  CONVERT(varchar, CAST(isnull(cta.montopagado,0) AS money), 1) else '0.0' end ) as montoPagado, 
        CONVERT(varchar, CAST(isnull(@totMora,0) AS money), 1)  as totMora,
        CONVERT(varchar, CAST(isnull(@totDeuda,0) AS money), 1)  as totAdeuda,
        CONVERT(varchar, CAST(isnull(@totPag,0) AS money), 1)  as totPag, 
        CONVERT(varchar, CAST(isnull(@totMoroso,0) AS money), 1)  as totMoroso, 
        CONVERT(varchar, CAST(isnull(@totProg,0) AS money), 1)  as totProg, 
        CONVERT(varchar, CAST(isnull(@totDesc,0) AS money), 1)  as totDesc,
        cta.mes,
        cta.idCtasxCobrar as idCtasxCobrar,
        cta.idDocIngreso as idDocIngreso,
        (case
        when cta.fechapago is not null then '/resources/images/verde.png'
        when cta.fechapago is null then (case 
        when cta.fechavenc <![CDATA[ <  ]]> GETDATE() then '/resources/images/rojo.png' 
        when cta.fechavenc <![CDATA[ >  ]]> GETDATE() then '/resources/images/amarillo.png'
        else '' end )         
        end) as alerta,
        (CASE WHEN fechastatusest IS NULL THEN '-' ELSE 'FECHA RETIRO: '+(convert(varchar,fechastatusest,103)) END) as fechaStatusEstAyuda,
        sta.codigo as tipoStatusEst,
        tipocta.codigo as tipoStatusCtaCte,
        tipocta.idcodigo as idTipoStatusCtaCte
        from MT_CtasxCobrar  cta
        left join MO_Codigo tipocta on tipocta.idcodigo=cta.idtipostatusctacte
        left join  MX_Estudiante est on est.idestudiante=cta.idestudiante and cta.unineg=est.unineg
        inner join MO_UnidadNegocio uni on uni.unineg=cta.unineg
        left join MO_Entidad ent on ent.ruc=uni.RUC and uni.unineg=ent.unineg
        left join MX_Persona perEst on est.idestudiante=perEst.idpersona and cta.unineg=perest.unineg
        left join MX_Persona perResp on perResp.idpersona=est.idresppago and cta.unineg=perResp.unineg
        inner join MX_Matricula mat on mat.idestudiante=est.idestudiante and est.unineg=mat.unineg and mat.anio=#{anio}
        inner join MX_GradoAcademico gra on gra.idgradoacademico = mat.idgradoacademico
        left join MO_Codigo cod on cod.idcodigo=est.idtiporesppago
        <!--left join MX_EstudianteBeca eb on eb.idestudiante=est.idestudiante and est.unineg=eb.unineg-->
        left join MX_EstudianteBeca eb on eb.idestudiantebeca=cta.idestudiantebeca and est.unineg=eb.unineg and eb.anio=cta.anio
        left join MT_Beca beca on eb.idbeca=beca.idbeca
        LEFT JOIN MT_Concepto con on con.idconcepto=cta.idconcepto
        left join MT_DetDocIngreso det on det.idctasxcobrar=cta.idctasxcobrar and cta.unineg=det.unineg and det.iddocingreso = cta.iddocingreso 
        LEFT JOIN MT_DocIngreso DOC ON det.iddocingreso=doc.iddocingreso AND det.unineg=DOC.unineg and cta.iddocingreso = doc.iddocingreso and cta.unineg = doc.unineg
        LEFT JOIN MO_Codigo lug on lug.idcodigo=doc.idtipolugarpago
        left join MO_Codigo sta on sta.idcodigo=est.idtipostatusest 
        where cta.unineg=#{uniNeg} and cta.idestudiante=#{idEstudiante} and cta.anio=#{anio}
        order by cta.mes  
    </select>
    <select  id="ObtenerInformeEstadoCtaGenPorMes" parameterType="map" resultType="pe.marista.sigma.bean.reporte.DetEstadoCtaRepBean">
        declare 
        @mes int =#{mes},
        @anio int =#{anio},
        @unineg varchar(6)=#{uniNeg}
        declare
        @facturado money = (select isnull(sum(isnull(monto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio  
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)),
        
        @importe   money = (select isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)),
        
        @deuda     money = (select isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0) from MT_CtasxCobrar where anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and unineg=@unineg and idtipostatusctacte=19401 and fechavenc<![CDATA[  < ]]>GETDATE()),

        @mora          money = (select isnull(sum(isnull(mora,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)),
        
        @canceladoConM money = (select isnull(sum(isnull(montopagado,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404)),
        
        @canceladoSinM money = (select isnull(sum(isnull(montopagado,0)-isnull(mora,0)+isnull(dscto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and idtipostatusctacte=19404),

        @dsctobeca money = (select isnull(sum(isnull(dsctobeca,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)),
        
        @dscto     money = (select isnull(sum(isnull(dscto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401))
       
        select 
        (case   
        when @mes=2 then 'MATRÍCULA'
        when @mes=3 then 'MARZO'
        when @mes=4 then 'ABRIL'
        when @mes=5 then 'MAYO'
        when @mes=6 then 'JUNIO'
        when @mes=7 then 'JULIO'
        when @mes=8 then 'AGOSTO'
        when @mes =9 then 'SEPTIEMBRE'
        when @mes=10 then 'OCTUBRE'
        when @mes=11 then 'NOVIEMBRE'
        when @mes=12 then 'DICIEMBRE'
        ELSE '' end) as mes 
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@facturado,0) AS money), 1) ELSE '0.0' END) as facturado   
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@dsctobeca,0) AS money), 1) ELSE '0.0' END) as dsctobeca 
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@importe,0) AS money), 1) ELSE '0.0' END) as importe 
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@mora,0) AS money), 1) ELSE '0.0' END) as mora  
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@dscto,0) AS money), 1) ELSE '0.0' END) as dscto     
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@canceladoSinM,0) AS money), 1) ELSE '0.0' END) as  canceladoSinMora 
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@canceladoConM,0) AS money), 1) ELSE '0.0' END) as  canceladoConM 

        ,(case when @mes!=0 THEN (CASE WHEN @importe>0 THEN CONVERT(varchar, CAST(isnull(ROUND(convert(varchar,isnull((((@canceladoSinM)*100)/(@importe)),0)), 2),0) AS money), 1)ELSE '0.0' END) ELSE '0.0' END) as  porcentajeImp
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@importe-@canceladoSinM,0) AS money), 1) ELSE '0.0' END) as saldo  
        ,(case when @mes!=0 THEN (CASE WHEN @importe>0 THEN CONVERT(varchar, (convert(money,CONVERT(varchar, CAST(isnull(ROUND(convert(varchar,isnull((((@importe-@canceladoSinM)*100)/(@importe)),0)), 2),0) AS money), 1)) )) ELSE '0.0' END)ELSE '0.0' END) as  porcentajeSaldo 

    </select>
    <select  id="ObtenerInformeEstadoCtaGenPorMesRangoFecha" parameterType="map" resultType="pe.marista.sigma.bean.reporte.DetEstadoCtaRepBean">
        declare 
        @mes int =#{mes},
        @anio int =#{anio},
        @unineg varchar(6)=#{uniNeg},
        @fechaIni date='01-01-2018',
        @fechaFin date =#{fechaFin}
        declare
        @facturado money = (select isnull(sum(isnull(monto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio  
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)
        and  m.fechamatricula<![CDATA[ >= ]]>@fechaIni and  m.fechamatricula<![CDATA[ <= ]]>@fechaFin),
        
        @importe   money = (select isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)
        and  m.fechamatricula<![CDATA[ >= ]]>@fechaIni and  m.fechamatricula<![CDATA[ <= ]]>@fechaFin),
        
        @deuda     money = (select isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0) from MT_CtasxCobrar where anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and unineg=@unineg and idtipostatusctacte=19401 and fechavenc<![CDATA[  < ]]>GETDATE()),

        @mora          money = (select isnull(sum(isnull(mora,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)
        and  c.fechapago<![CDATA[ >= ]]>@fechaIni and  c.fechapago<![CDATA[ <= ]]>@fechaFin),
        
        @canceladoConM money = (select isnull(sum(isnull(montopagado,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404)
        and  c.fechapago<![CDATA[ >= ]]>@fechaIni and  c.fechapago<![CDATA[ <= ]]>@fechaFin),
        
        @canceladoSinM money = (select isnull(sum(isnull(montopagado,0)-isnull(mora,0)+isnull(dscto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and idtipostatusctacte=19404
        and  c.fechapago<![CDATA[ >= ]]>@fechaIni and  c.fechapago<![CDATA[ <= ]]>@fechaFin),

        @dsctobeca money = (select isnull(sum(isnull(dsctobeca,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)
        and  m.fechamatricula<![CDATA[ >= ]]>@fechaIni and  m.fechamatricula<![CDATA[ <= ]]>@fechaFin),
        
        @dscto     money = (select isnull(sum(isnull(dscto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)
        and  c.fechapago<![CDATA[ >= ]]>@fechaIni and  c.fechapago<![CDATA[ <= ]]>@fechaFin)
       
        select 
        (case   
        when @mes=2 then 'MATRÍCULA'
        when @mes=3 then 'MARZO'
        when @mes=4 then 'ABRIL'
        when @mes=5 then 'MAYO'
        when @mes=6 then 'JUNIO'
        when @mes=7 then 'JULIO'
        when @mes=8 then 'AGOSTO'
        when @mes =9 then 'SEPTIEMBRE'
        when @mes=10 then 'OCTUBRE'
        when @mes=11 then 'NOVIEMBRE'
        when @mes=12 then 'DICIEMBRE'
        ELSE '' end) as mes 
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@facturado,0) AS money), 1) ELSE '0.0' END) as facturado   
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@dsctobeca,0) AS money), 1) ELSE '0.0' END) as dsctobeca 
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@importe,0) AS money), 1) ELSE '0.0' END) as importe 
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@mora,0) AS money), 1) ELSE '0.0' END) as mora  
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@dscto,0) AS money), 1) ELSE '0.0' END) as dscto     
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@canceladoSinM,0) AS money), 1) ELSE '0.0' END) as  canceladoSinMora 
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@canceladoConM,0) AS money), 1) ELSE '0.0' END) as  canceladoConM 

        ,(case when @mes!=0 THEN (CASE WHEN @importe>0 THEN CONVERT(varchar, CAST(isnull(ROUND(convert(varchar,isnull((((@canceladoSinM)*100)/(@importe)),0)), 2),0) AS money), 1)ELSE '0.0' END) ELSE '0.0' END) as  porcentajeImp
        ,(case when @mes!=0 THEN CONVERT(varchar, CAST(isnull(@importe-@canceladoSinM,0) AS money), 1) ELSE '0.0' END) as saldo  
        ,(case when @mes!=0 THEN (CASE WHEN @importe>0 THEN CONVERT(varchar, (convert(money,CONVERT(varchar, CAST(isnull(ROUND(convert(varchar,isnull((((@importe-@canceladoSinM)*100)/(@importe)),0)), 2),0) AS money), 1)) )) ELSE '0.0' END)ELSE '0.0' END) as  porcentajeSaldo 

    </select>
    <select  id="ObtenerInformeEstadoCtaGen" parameterType="map" resultType="pe.marista.sigma.bean.reporte.EstadoCtaRepBean">
        declare 
        @mes int =#{mes},
        @anio int =#{anio},
        @unineg varchar(6)=#{uniNeg}
        declare
        @facturado money = (select isnull(sum(isnull(monto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio= @anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)),
        @importe   money = (select isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)),
        @deuda     money = (select isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0) from MT_CtasxCobrar where anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and unineg=@unineg and idtipostatusctacte=19401 and fechavenc<![CDATA[  < ]]>GETDATE()),

        @mora          money = (select isnull(sum(isnull(mora,0)),0) from MT_CtasxCobrar  c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)),
        
        @canceladoConM money = (select isnull(sum(isnull(montopagado,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404)),
        
        @canceladoSinM money = (select isnull(sum(isnull(montopagado,0)-isnull(mora,0)+isnull(dscto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio= @anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and idtipostatusctacte=19404),

        @dsctobeca money = (select isnull(sum(isnull(dsctobeca,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)),
        
        @dscto     money = (select isnull(sum(isnull(dscto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)),
        
        @nombreUniNeg varchar(200)= (select ent.nombre from MO_UnidadNegocio un inner join MO_Entidad ent on ent.ruc=un.RUC and ent.unineg=un.unineg where un.unineg=@unineg),
        @rucUniNeg varchar(11)= (select RUC from MO_UnidadNegocio where unineg=@unineg)

        select 
        upper(@nombreUniNeg) as nombreUniNeg
        ,'R.U.C.: '+@rucUniNeg as rucUniNeg
        ,@anio as anio
        ,(case   
        when @mes=2 then 'MATRÍCULA'
        when @mes=3 then 'MARZO'
        when @mes=4 then 'ABRIL'
        when @mes=5 then 'MAYO'
        when @mes=6 then 'JUNIO'
        when @mes=7 then 'JULIO'
        when @mes=8 then 'AGOSTO'
        when @mes =9 then 'SEPTIEMBRE'
        when @mes=10 then 'OCTUBRE'
        when @mes=11 then 'NOVIEMBRE'
        when @mes=12 then 'DICIEMBRE'
        ELSE '' end) as mes 
        ,CONVERT(varchar, CAST(isnull(@facturado,0) AS money), 1)  as facturado   
        ,CONVERT(varchar, CAST(isnull(@dsctobeca,0) AS money), 1)  as dsctobeca 
        ,CONVERT(varchar, CAST(isnull(@importe,0) AS money), 1) as importe 
        ,CONVERT(varchar, CAST(isnull(@mora,0) AS money), 1)  as mora  
        ,CONVERT(varchar, CAST(isnull(@dscto,0) AS money), 1)  as dscto     
        ,CONVERT(varchar, CAST(isnull(@canceladoSinM,0) AS money), 1)  as  canceladoSinMora 
        ,CONVERT(varchar, CAST(isnull(@canceladoConM,0) AS money), 1)  as  canceladoConM 

        ,((CASE WHEN @importe>0 THEN CONVERT(varchar, 
        CAST(isnull(ROUND(convert(varchar,isnull((((@canceladoSinM)*100)/(@importe)),0)), 2),0) AS money), 1)ELSE '0.0' END)) as porcentajeImp 
        ,(CONVERT(varchar, CAST(isnull(@importe,0)-isnull(@canceladoSinM,0) AS money), 1) ) as saldo 
        ,((CASE WHEN @importe>0 THEN CONVERT(varchar, 
        (convert(money,CONVERT(varchar, CAST(isnull(ROUND(convert(varchar,isnull((((@importe-@canceladoSinM)*100)/(@importe)),0)), 2),0) AS money), 1)) )) ELSE '0.0' END)) as porcentajeSaldo
    </select>
    <select  id="ObtenerInformeEstadoCtaGenRangoFecha" parameterType="map" resultType="pe.marista.sigma.bean.reporte.EstadoCtaRepBean">
        declare 
        @mes int =#{mes},
        @anio int =#{anio},
        @unineg varchar(6)=#{uniNeg},
        @fechaIni date=(select convert(date,(select '01-01-'+convert(varchar(4),YEAR(getdate()))))),
        @fechaFin date =#{fechaFin}
        declare
        @facturado money = (select isnull(sum(isnull(monto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio= @anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)
        and  m.fechamatricula<![CDATA[ >= ]]>@fechaIni and  m.fechamatricula<![CDATA[ <= ]]>@fechaFin),
        
        @importe   money = (select isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)
        and  m.fechamatricula<![CDATA[ >= ]]>@fechaIni and  m.fechamatricula<![CDATA[ <= ]]>@fechaFin),
        
        @deuda     money = (select isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0) from MT_CtasxCobrar where anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and unineg=@unineg and idtipostatusctacte=19401 and fechavenc<![CDATA[  < ]]>GETDATE()),

        @mora          money = (select isnull(sum(isnull(mora,0)),0) from MT_CtasxCobrar  c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio 
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)
        and  c.fechapago<![CDATA[ >= ]]>@fechaIni and  c.fechapago<![CDATA[ <= ]]>@fechaFin),
        
        @canceladoConM money = (select isnull(sum(isnull(montopagado,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404)
        and  c.fechapago<![CDATA[ >= ]]>@fechaIni and  c.fechapago<![CDATA[ <= ]]>@fechaFin),
        
        @canceladoSinM money = (select isnull(sum(isnull(montopagado,0)-isnull(mora,0)+isnull(dscto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio= @anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and idtipostatusctacte=19404
        and  c.fechapago<![CDATA[ >= ]]>@fechaIni and  c.fechapago<![CDATA[ <= ]]>@fechaFin),

        @dsctobeca money = (select isnull(sum(isnull(dsctobeca,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)
        and  m.fechamatricula<![CDATA[ >= ]]>@fechaIni and  m.fechamatricula<![CDATA[ <= ]]>@fechaFin),
        
        @dscto     money = (select isnull(sum(isnull(dscto,0)),0) from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio where c.anio=@anio
        <if test="mes != null" > and mes=@mes </if> and c.unineg=@unineg and flgmatricula=1 and c.idtipostatusctacte in(19404,19401)
        and  c.fechapago<![CDATA[ >= ]]>@fechaIni and  c.fechapago<![CDATA[ <= ]]>@fechaFin),
        
        @nombreUniNeg varchar(200)= (select ent.nombre from MO_UnidadNegocio un inner join MO_Entidad ent on ent.ruc=un.RUC and ent.unineg=un.unineg where un.unineg=@unineg),
        @rucUniNeg varchar(11)= (select RUC from MO_UnidadNegocio where unineg=@unineg)

        select 
        'AL '+ CONVERT(VARCHAR,@fechaFin,103) AS rangoFecha,
        upper(@nombreUniNeg) as nombreUniNeg
        ,'R.U.C.: '+@rucUniNeg as rucUniNeg
        ,@anio as anio
        ,(case   
        when @mes=2 then 'MATRÍCULA'
        when @mes=3 then 'MARZO'
        when @mes=4 then 'ABRIL'
        when @mes=5 then 'MAYO'
        when @mes=6 then 'JUNIO'
        when @mes=7 then 'JULIO'
        when @mes=8 then 'AGOSTO'
        when @mes =9 then 'SEPTIEMBRE'
        when @mes=10 then 'OCTUBRE'
        when @mes=11 then 'NOVIEMBRE'
        when @mes=12 then 'DICIEMBRE'
        ELSE '' end) as mes 
        ,CONVERT(varchar, CAST(isnull(@facturado,0) AS money), 1)  as facturado   
        ,CONVERT(varchar, CAST(isnull(@dsctobeca,0) AS money), 1)  as dsctobeca 
        ,CONVERT(varchar, CAST(isnull(@importe,0) AS money), 1) as importe 
        ,CONVERT(varchar, CAST(isnull(@mora,0) AS money), 1)  as mora  
        ,CONVERT(varchar, CAST(isnull(@dscto,0) AS money), 1)  as dscto     
        ,CONVERT(varchar, CAST(isnull(@canceladoSinM,0) AS money), 1)  as  canceladoSinMora 
        ,CONVERT(varchar, CAST(isnull(@canceladoConM,0) AS money), 1)  as  canceladoConM 

        ,((CASE WHEN @importe>0 THEN CONVERT(varchar, 
        CAST(isnull(ROUND(convert(varchar,isnull((((@canceladoSinM)*100)/(@importe)),0)), 2),0) AS money), 1)ELSE '0.0' END)) as porcentajeImp 
        ,(CONVERT(varchar, CAST(isnull(@importe,0)-isnull(@canceladoSinM,0) AS money), 1) ) as saldo 
        ,((CASE WHEN @importe>0 THEN CONVERT(varchar, 
        (convert(money,CONVERT(varchar, CAST(isnull(ROUND(convert(varchar,isnull((((@importe-@canceladoSinM)*100)/(@importe)),0)), 2),0) AS money), 1)) )) ELSE '0.0' END)) as porcentajeSaldo
    </select>

    <update id="actualizarCuentaBanco" parameterType="map" >
        declare @uniNeg varchar(6) = #{uniNeg}
        declare @idProcesoBanco Integer = #{idProcesoBanco}
        update MT_CtasxCobrar set montopagado = null,fechapago = null, idtipostatusctacte = 19401 
        where unineg = @uniNeg and idprocesobanco = @idProcesoBanco
    </update>
    
    <update id="modificarCuentaDocIngreso" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        UPDATE MT_CtasxCobrar 
        set 
        iddocingreso = #{docIngresoBean.idDocIngreso}  
        where unineg = #{unidadNegocioBean.uniNeg} and idctasxcobrar = #{idCtasXCobrar}
    </update>
    <update id="modificarConceptoCambioDeGrado" parameterType="map" >
        DECLARE @idGrado INTEGER,@uniNeg varchar(6) ,@anio Integer ,@id varchar(15)
        SET @idGrado=#{idGradoAcademico}
        set @uniNeg=#{uniNeg}
        set @anio=#{anio}
        set @id =#{idEstudiante}  
        
        UPDATE c
        set 
        idconcepto = (case when @IDGRADO=23 and mes=2 then 10001 
        when @IDGRADO=24 and mes=2 then 10002
        when @IDGRADO=25 and mes=2 then 10003
        when @IDGRADO=1 and mes=2 then 10004
        when @IDGRADO=2 and mes=2 then 10005
        when @IDGRADO=3 and mes=2 then 10006
        when @IDGRADO=4 and mes=2 then 10007
        when @IDGRADO=5 and mes=2 then 10008
        when @IDGRADO=6 and mes=2 then 10009
        when @IDGRADO=7 and mes=2 then 10010
        when @IDGRADO=8 and mes=2 then 10011
        when @IDGRADO=9 and mes=2 then 10012
        when @IDGRADO=10 and mes=2 then 10013
        when @IDGRADO=11 and mes=2 then 10015
        when @IDGRADO=12 and mes=2 then 10014
        when @IDGRADO=13 and mes=2 then 10016
        
        when @IDGRADO=23 and mes!=2 then 10101 
        when @IDGRADO=24 and mes!=2 then 10102
        when @IDGRADO=25 and mes!=2 then 10103
        when @IDGRADO=1 and mes!=2 then 10104
        when @IDGRADO=2 and mes!=2 then 10105
        when @IDGRADO=3 and mes!=2 then 10106
        when @IDGRADO=4 and mes!=2 then 10107
        when @IDGRADO=5 and mes!=2 then 10108
        when @IDGRADO=6 and mes!=2 then 10109
        when @IDGRADO=7 and mes!=2 then 10110
        when @IDGRADO=8 and mes!=2 then 10111
        when @IDGRADO=9 and mes!=2 then 10112
        when @IDGRADO=10 and mes!=2 then 10113
        when @IDGRADO=11 and mes!=2 then 10115
        when @IDGRADO=12 and mes!=2 then 10114
        when @IDGRADO=13 and mes!=2 then 10116
        end) 
        from MT_CtasxCobrar c
        where unineg = @uniNeg and anio =@anio and idestudiante=@id 
    </update>
    
    <select  id="obtenerResumenIngPorAnio" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ResumenIngRepBean">
        declare @mes int,@anio int,@uniNeg varchar(6),@idtipolugarpago int
       
        set @mes=#{mes}
        set @anio=#{anio}
        set @uniNeg=#{uniNeg}
        set @idtipolugarpago=#{idTipoLugarPago}

        declare
        @mesMat money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=2  <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @mesMar money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=3 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @mesAbr money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=4 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @mesMay money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=5 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg  and cta.idtipostatusctacte=19404),
        @mesJun money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=6 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @mesJul money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=7 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @mesAgo money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=8 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @mesSep money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=9 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @mesOct money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=10 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404 ),
        @mesNov money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=11 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @mesDic money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio and cta.mes=12 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @mesMora money =(select isnull(sum(isnull(cta.mora,0)-isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio in (@anio,@anio-1,@anio-2) and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio  and cta.unineg=@uniNeg <if test="idTipoLugarPago != null">AND  doc.idtipolugarpago=@idtipolugarpago </if>  and cta.idtipostatusctacte=19404),
        
        @mesAbonado money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio in (@anio,@anio-1,@anio-2) and year(cta.fechapago)=@anio and month(cta.fechapago)=@mes  <if test="idTipoLugarPago != null">and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        
        @mesAnioAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and year(cta.fechapago)=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @mesAnioAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and year(cta.fechapago)=@anio and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and cta.idtipostatusctacte=19404),
        @nombreCole varchar(60) = (select nombreUniNeg from MO_UnidadNegocio where unineg=@uniNeg),
        @nomMes varchar(30) = (select datename(month,'01/'+convert(varchar,@mes)+'/'+convert(varchar(4),@anio))),
        @cuentaBanco varchar(80) = (select top 1 CONCAT(descripcion,' '+ numcuenta) from MT_CuentaBanco 
        where  flgCtaCongre=0 and idtipomoneda=14901 and status=1 and unineg=@uniNeg)
        select
        CONVERT(varchar, CAST(isnull(@mesMat,0) AS money), 1)  as matricula,
        CONVERT(varchar, CAST(isnull(@mesMar,0) AS money), 1)   as marzo,
        CONVERT(varchar, CAST(isnull(@mesAbr,0) AS money), 1)   as abril,
        CONVERT(varchar, CAST(isnull(@mesMay,0) AS money), 1)   as mayo,
        CONVERT(varchar, CAST(isnull(@mesJun,0) AS money), 1)   as junio,
        CONVERT(varchar, CAST(isnull(@mesJul,0) AS money), 1)  as julio,
        CONVERT(varchar, CAST(isnull(@mesAgo,0) AS money), 1)   as agosto,
        CONVERT(varchar, CAST(isnull(@mesSep,0) AS money), 1)   as septiembre,
        CONVERT(varchar, CAST(isnull(@mesOct,0) AS money), 1)   as octubre,
        CONVERT(varchar, CAST(isnull(@mesNov,0) AS money), 1)   as noviembre,
        CONVERT(varchar, CAST(isnull(@mesDic,0) AS money), 1)   as diciembre,
        CONVERT(varchar, CAST(isnull(@mesAnioAnt,0) AS money), 1) as anioAnt,
        CONVERT(varchar, CAST(isnull(@mesAnioAntAnt,0) AS money), 1) as anioAntAnt,
        CONVERT(varchar, CAST(isnull(@mesMora,0) AS money), 1) as mora, 
        CONVERT(varchar, CAST(isnull(@mesAbonado,0)+isnull(@mesMora,0) AS money), 1) as abonado,
        @nombreCole as nombreUniNeg,
        upper(@nomMes) as mes,
        @anio as anio,
        (case 
        when @idtipolugarpago =19301 then 'RESUMEN DE INGRESOS POR '+ 'TESORERÍA'
        when @idtipolugarpago =19302 then 'RESUMEN DE INGRESOS POR '+(SELECT TOP 1 UPPER(codigo) FROM MO_Codigo WHERE idcodigo=@idtipolugarpago)+' '+@cuentaBanco  
        when @idtipolugarpago IS NULL THEN 'RESUMEN DE INGRESOS POR BANCO '+@cuentaBanco+' Y TESORERÍA'  
        else 'RESUMEN DE INGRESOS POR BANCO '+@cuentaBanco+' Y TESORERÍA'  
        end) as cuentaBanco 

    </select>
    <select  id="obtenerResumenIngPorAnioPorDia" parameterType="map" resultType="pe.marista.sigma.bean.reporte.DetResumenIngRepBean">
        declare   @dia int,@mes int,@anio int,@uniNeg varchar(6),@idtipolugarpago int          
        set @dia=#{dia}
        set @mes=#{mes}
        set @anio=#{anio}
        set @uniNeg=#{uniNeg}
        set @idtipolugarpago=#{idTipoLugarPago}

        declare
        @mesMat money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=2  <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesMar money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=3 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAbr money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=4 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesMay money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=5 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio and cta.idtipostatusctacte=19404),
        @mesJun money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=6 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesJul money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=7 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAgo money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=8 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesSep money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=9 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesOct money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=10 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesNov money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=11 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesDic money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=12 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesMora money =(select isnull(sum(isnull(cta.mora,0)-isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio in (@anio,@anio-1,@anio-2) and month(cta.fechapago)=@mes   and cta.unineg=@uniNeg <if test="idTipoLugarPago != null">AND  doc.idtipolugarpago=@idtipolugarpago </if> and day(cta.fechapago)=@dia   and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAbonado money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio in (@anio,@anio-1,@anio-2)  and month(cta.fechapago)=@mes  <if test="idTipoLugarPago != null">and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAnioAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAnioAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404)
        select
        @dia as dia,
        CONVERT(varchar, CAST(isnull(@mesMat,0) AS money), 1)  as matricula,
        CONVERT(varchar, CAST(isnull(@mesMar,0) AS money), 1)   as marzo,
        CONVERT(varchar, CAST(isnull(@mesAbr,0) AS money), 1)   as abril,
        CONVERT(varchar, CAST(isnull(@mesMay,0) AS money), 1)   as mayo,
        CONVERT(varchar, CAST(isnull(@mesJun,0) AS money), 1)   as junio,
        CONVERT(varchar, CAST(isnull(@mesJul,0) AS money), 1)   as julio,
        CONVERT(varchar, CAST(isnull(@mesAgo,0) AS money), 1)   as agosto,
        CONVERT(varchar, CAST(isnull(@mesSep,0) AS money), 1)   as septiembre,
        CONVERT(varchar, CAST(isnull(@mesOct,0) AS money), 1)   as octubre,
        CONVERT(varchar, CAST(isnull(@mesNov,0) AS money), 1)   as noviembre,
        CONVERT(varchar, CAST(isnull(@mesDic,0) AS money), 1)   as diciembre,
        CONVERT(varchar, CAST(isnull(@mesAnioAnt,0) AS money), 1) as anioAnt,
        CONVERT(varchar, CAST(isnull(@mesAnioAntAnt,0) AS money), 1) as anioAntAnt,
        CONVERT(varchar, CAST(isnull(@mesMora,0) AS money), 1) as mora,
        CONVERT(varchar, CAST(isnull(@mesAbonado,0)+isnull(@mesMora,0) AS money), 1) as abonado,
        @anio-1 AS anioAnterior,
        @anio-2 AS anioAnteriorAnt
    </select>
    <!-- -->
    <select  id="obtenerResumenIngPorAnioPorDiaExcel" parameterType="map" resultType="pe.marista.sigma.bean.reporte.DetResumenIngRepBean">
        declare   @dia int,@mes int,@anio int,@uniNeg varchar(6),@idtipolugarpago int          
        set @dia=#{dia}
        set @mes=#{mes}
        set @anio=#{anio}
        set @uniNeg=#{uniNeg}
        set @idtipolugarpago=#{idTipoLugarPago}

        declare
        @mesMat money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=2  <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesMar money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=3 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAbr money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=4 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesMay money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=5 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio and cta.idtipostatusctacte=19404),
        @mesJun money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=6 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesJul money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=7 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAgo money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=8 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesSep money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=9 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesOct money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=10 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesNov money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=11 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesDic money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio and month(cta.fechapago)=@mes  and cta.mes=12 <if test="idTipoLugarPago != null"> and doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesMora money =(select isnull(sum(isnull(cta.mora,0)-isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio in (@anio) and month(cta.fechapago)=@mes   and cta.unineg=@uniNeg <if test="idTipoLugarPago != null">AND  doc.idtipolugarpago=@idtipolugarpago </if> and day(cta.fechapago)=@dia   and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAbonado money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio in (@anio,@anio-1,@anio-2)  and month(cta.fechapago)=@mes  <if test="idTipoLugarPago != null">and doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAnioAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAnioAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes and year(cta.fechapago)=@anio  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        <!-- -->
        @mesMarAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes  and cta.mes=3  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAbrAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes  and cta.mes=4 <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>   and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesMayAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes  and cta.mes=5  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>   and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio and cta.idtipostatusctacte=19404),
        @mesJunAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes  and cta.mes=6   <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesJulAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes  and cta.mes=7   <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAgoAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes  and cta.mes=8  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>   and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesSepAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes  and cta.mes=9   <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesOctAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes  and cta.mes=10   <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>    and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesNovAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes  and cta.mes=11   <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesDicAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-1 and month(cta.fechapago)=@mes  and cta.mes=12  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesMoraAnt money =(select isnull(sum(isnull(cta.mora,0)-isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio in (@anio-1) and month(cta.fechapago)=@mes   and cta.unineg=@uniNeg <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and day(cta.fechapago)=@dia   and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        <!-- -->
        @mesMarAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes  and cta.mes=3  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>   and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAbrAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes  and cta.mes=4 <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>   and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesMayAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes  and cta.mes=5  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio and cta.idtipostatusctacte=19404),
        @mesJunAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes  and cta.mes=6  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesJulAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes  and cta.mes=7  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesAgoAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes  and cta.mes=8 <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>   and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesSepAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes  and cta.mes=9 <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesOctAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes  and cta.mes=10 <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>   and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesNovAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes  and cta.mes=11 <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesDicAntAnt money =(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio=@anio-2 and month(cta.fechapago)=@mes  and cta.mes=12  <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if>  and cta.unineg=@uniNeg and day(cta.fechapago)=@dia  and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404),
        @mesMoraAntAnt money =(select isnull(sum(isnull(cta.mora,0)-isnull(cta.dscto,0)),0) from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso and cta.unineg=doc.unineg
        where cta.anio in (@anio-2) and month(cta.fechapago)=@mes   and cta.unineg=@uniNeg <if test="idTipoLugarPago != null"> and  doc.idtipolugarpago=@idtipolugarpago </if> and day(cta.fechapago)=@dia   and year(cta.fechapago)=@anio  and cta.idtipostatusctacte=19404)
        
        select
        @dia as dia,
        CONVERT(varchar, CAST(isnull(@mesMat,0) AS money), 1)  as matricula,
        CONVERT(varchar, CAST(isnull(@mesMar,0) AS money), 1)   as marzo,
        CONVERT(varchar, CAST(isnull(@mesAbr,0) AS money), 1)   as abril,
        CONVERT(varchar, CAST(isnull(@mesMay,0) AS money), 1)   as mayo,
        CONVERT(varchar, CAST(isnull(@mesJun,0) AS money), 1)   as junio,
        CONVERT(varchar, CAST(isnull(@mesJul,0) AS money), 1)   as julio,
        CONVERT(varchar, CAST(isnull(@mesAgo,0) AS money), 1)   as agosto,
        CONVERT(varchar, CAST(isnull(@mesSep,0) AS money), 1)   as septiembre,
        CONVERT(varchar, CAST(isnull(@mesOct,0) AS money), 1)   as octubre,
        CONVERT(varchar, CAST(isnull(@mesNov,0) AS money), 1)   as noviembre,
        CONVERT(varchar, CAST(isnull(@mesDic,0) AS money), 1)   as diciembre,
        CONVERT(varchar, CAST(isnull(@mesAnioAnt,0) AS money), 1) as anioAnt,
        CONVERT(varchar, CAST(isnull(@mesAnioAntAnt,0) AS money), 1) as anioAntAnt,
        CONVERT(varchar, CAST(isnull(@mesMora,0) AS money), 1) as mora,
        <!-- -->
        CONVERT(varchar, CAST(isnull(@mesMarAnt,0) AS money), 1)   as marzoAnt,
        CONVERT(varchar, CAST(isnull(@mesAbrAnt,0) AS money), 1)   as abrilAnt,
        CONVERT(varchar, CAST(isnull(@mesMayAnt,0) AS money), 1)   as mayoAnt,
        CONVERT(varchar, CAST(isnull(@mesJunAnt,0) AS money), 1)   as junioAnt,
        CONVERT(varchar, CAST(isnull(@mesJulAnt,0) AS money), 1)   as julioAnt,
        CONVERT(varchar, CAST(isnull(@mesAgoAnt,0) AS money), 1)   as agostoAnt,
        CONVERT(varchar, CAST(isnull(@mesSepAnt,0) AS money), 1)   as septiembreAnt,
        CONVERT(varchar, CAST(isnull(@mesOctAnt,0) AS money), 1)   as octubreAnt,
        CONVERT(varchar, CAST(isnull(@mesNovAnt,0) AS money), 1)   as noviembreAnt,
        CONVERT(varchar, CAST(isnull(@mesDicAnt,0) AS money), 1)   as diciembreAnt, 
        CONVERT(varchar, CAST(isnull(@mesMoraAnt,0) AS money), 1) as moraAnt,
        <!-- -->
        CONVERT(varchar, CAST(isnull(@mesMarAntAnt,0) AS money), 1)   as marzoAntAnt,
        CONVERT(varchar, CAST(isnull(@mesAbrAntAnt,0) AS money), 1)   as abrilAntAnt,
        CONVERT(varchar, CAST(isnull(@mesMayAntAnt,0) AS money), 1)   as mayoAntAnt,
        CONVERT(varchar, CAST(isnull(@mesJunAntAnt,0) AS money), 1)   as junioAntAnt,
        CONVERT(varchar, CAST(isnull(@mesJulAntAnt,0) AS money), 1)   as julioAntAnt,
        CONVERT(varchar, CAST(isnull(@mesAgoAntAnt,0) AS money), 1)   as agostoAntAnt,
        CONVERT(varchar, CAST(isnull(@mesSepAntAnt,0) AS money), 1)   as septiembreAntAnt,
        CONVERT(varchar, CAST(isnull(@mesOctAntAnt,0) AS money), 1)   as octubreAntAnt,
        CONVERT(varchar, CAST(isnull(@mesNovAntAnt,0) AS money), 1)   as noviembreAntAnt,
        CONVERT(varchar, CAST(isnull(@mesDicAntAnt,0) AS money), 1)   as diciembreAntAnt, 
        CONVERT(varchar, CAST(isnull(@mesMoraAntAnt,0) AS money), 1) as moraAntAnt,
        
        CONVERT(varchar, CAST(isnull(@mesAbonado,0)+isnull(@mesMora,0)+isnull(@mesMoraAnt,0)+isnull(@mesMoraAntAnt,0) AS money), 1) as abonado,
        @anio-1 AS anioAnterior,
        @anio-2 AS anioAnteriorAnt
    </select>
    <!-- -->
    
    <select  id="obtenerSaldoPenionesPorFechaPivot" parameterType="map" resultType="pe.marista.sigma.bean.reporte.EstudianteSaldoPivotRepBean">        
        declare <!-- @idestudiante varchar(15),-->
        @fecha date,@anio int,@idtipostatusctacte int,@flg int ,@mesfin int,@unineg varchar(6) 
        set @flg=#{flg}  <!--0=colegio , 1=estudiante-->
        set @mesfin=#{mes}
        set @unineg=#{uniNeg}
        set @anio=#{anio}
        set @idtipostatusctacte=19406<!--SIN SERV-->
        <!--  set @idestudiante=#{idEstudiante}-->
        set @fecha=convert(date,#{fecha})
        <!--declare @nro varchar(6) =#{nro}-->
        declare @fechavenmesfinmas1 date = (select convert(date,fechavenc) from MT_CronogramaPago where mes= (case when @mesfin=1 then 2 else @mesfin end)  and anio=@anio) 
        set @fechavenmesfinmas1= convert(date, DATEADD(day, +1, @fechavenmesfinmas1) ) 
        <if test="list != null " >
            declare @listaEstudiante as table(idestudiante char(15))
            insert into @listaEstudiante(idestudiante) 
            select idestudiante from MX_Estudiante
            where idestudiante in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ;WITH Clases2(seccion,idnivelacademico,idgradoacademico,titulo,identificador,nombre,idestudiante,codigoEstudiante,nombreRespago,correoResp,direccionResp,telefonoResp, mes, monto) 
        AS
        (
        SELECT (case 
        when @flg=0 then ''
        when @flg=1 then m.seccion end)  as seccion, 
        (case 
        when @flg=0 then ''
        when @flg=1 then niv.idnivelacademico end)  as idnivelacademico,
        (case 
        when @flg=0 then ''
        when @flg=1 then gra.idgradoacademico end)  as idgradoacademico,
        (case 
        when @flg=1 then ''
        when @flg=0 then 'REPORTE DE SALDOS DE PENSIONES '+ CONVERT(VARCHAR(4),@anio)+' AL ' + CONVERT(VARCHAR(15),@fecha,103)
        end) as titulo,
        <!--  convert(varchar(5),isnull(@nro,0)) as nro,-->
        (case 
        when @flg=0 then 
        (select 'R.U.C. '+RUC from MO_UnidadNegocio where   unineg=@uniNeg)
        when @flg=1 then 
        (select top 1 (case 
        when GRA.codigo= 'PRE-INICIAL(3)' then 'P3'
        when GRA.codigo= 'PRE-INICIAL(4)' then 'P4' 
        when GRA.codigo= 'INICIAL(5)'	  then '00'
        when GRA.codigo= 'PRIMERO'		  then '01'
        when GRA.codigo= 'SEGUNDO'		  then '02'
        when GRA.codigo= 'TERCERO'		  then '03'
        when GRA.codigo= 'CUARTO'         then '04'
        when GRA.codigo= 'QUINTO'         then '05'
        when GRA.codigo= 'SEXTO'          then '06'
        when GRA.codigo= 'SETIMO'         then '07'
        when GRA.codigo= 'OCTAVO'         then '08'
        when GRA.codigo= 'NOVENO'         then '09'
        when GRA.codigo= 'DECIMO'         then '10'
        when GRA.codigo= 'DECIMO-BACH'    then '10'
        when GRA.codigo= 'UNDECIMO'       then '11'		
        when GRA.codigo= 'UNDECIMO-BACH'  then '11'
        END )+ isnull(m.seccion,''))end) as identificador,
        (case 
        when @flg=0 then 
        (select nombreUniNeg from MO_UnidadNegocio where   unineg=@uniNeg)
        when @flg=1 then concat(p.apepat,' '+p.apemat,', '+p.nombre)end) as nombre,(case 
        when @flg=0 then '' when @flg=1 then e.idestudiante end)as idestudiante,
        (case 
        when @flg=0 then '' when @flg=1 then isnull(e.codigo,'-') end)as codigoEstudiante,
        (case 
        when @flg=0 then '' when @flg=1 then concat(resp.apepat,' '+resp.apemat,', '+resp.nombre )end)as nombreRespago,
        (case 
        when @flg=0 then '' when @flg=1 then resp.correo end)as correoResp,
        (case 
        when @flg=0 then '' when @flg=1 then f.direccion end)as direccionResp,
        (case 
        when @flg=0 then '' when @flg=1 then f.telefonocelular end)as telefonoResp , 
        cta.mes, isnull(sum(isnull(cta.monto,0)-isnull(dsctobeca,0)),0)  as monto
        FROM MT_CtasxCobrar cta
        inner join MX_Estudiante e on e.idestudiante=cta.idestudiante and e.unineg=@unineg
        left join MX_Persona resp on resp.idpersona=e.idresppago and resp.unineg=@unineg
        left join MX_Familiar f on f.idfamiliar=resp.idpersona and f.unineg=@unineg
        inner join MX_Persona p on p.idpersona=e.idestudiante and p.unineg=@unineg
        inner join MX_Matricula m on m.idestudiante=e.idestudiante and m.anio=@anio and m.unineg=@unineg
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico  
        where cta.anio=@anio
        and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0)  
        <if test="list != null " >
            and e.idestudiante in(select idestudiante from @listaEstudiante)
        </if>
        and fechavenc <![CDATA[ <  ]]>  (case when mes=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and cta.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago) <![CDATA[ >  ]]>  @fecha then 0 else 1 end) else 0 end)=0
        and cta.unineg=@unineg
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>    
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>        
        group by cta.monto,e.idestudiante,cta.mes,gra.codigo,m.seccion,resp.apepat,resp.apemat,resp.nombre,p.apepat,p.apemat,p.nombre,e.codigo,resp.correo
        ,f.direccion,f.telefonocelular,gra.idgradoacademico,niv.idnivelacademico)
        SELECT  seccion,idnivelacademico,idgradoacademico,titulo,identificador,nombre,ISNULL(idestudiante,'-') as idestudiante, codigoEstudiante,nombreRespago,correoResp,direccionResp,telefonoResp,
        CONVERT(varchar, CAST(isnull([2],0) AS money), 1) as matricula, CONVERT(varchar, CAST(isnull([3],0) AS money), 1) as marzo, 
        CONVERT(varchar, CAST(isnull([4],0) AS money), 1) as abril, CONVERT(varchar, CAST(isnull([5],0) AS money), 1) as mayo, 
        CONVERT(varchar, CAST(isnull([6],0) AS money), 1) as junio, CONVERT(varchar, CAST(isnull([7],0) AS money), 1) as julio, 
        CONVERT(varchar, CAST(isnull([8],0) AS money), 1) as agosto, CONVERT(varchar, CAST(isnull([9],0) AS money), 1) as septiembre, 
        CONVERT(varchar, CAST(isnull([10],0) AS money), 1) as octubre, CONVERT(varchar, CAST(isnull([11],0) AS money), 1) as noviembre, 
        CONVERT(varchar, CAST(isnull([12],0) AS money), 1) as diciembre ,
        CONVERT(varchar, CAST(isnull(isnull([2],0)+ isnull([3],0)+ isnull([4],0)+ isnull([5],0)+ isnull([6],0)+ isnull([7],0)+ isnull([8],0)+ 
        isnull([9],0)+ isnull([10],0)+ isnull([11],0)+isnull([12],0),0)AS money), 1)  deuda
        FROM Clases2
        PIVOT (sum(monto) FOR mes IN([2], [3], [4], [5], [6], [7], [8], [9], [10], [11] , [12] )) PVT 
        order by idnivelacademico desc,idgradoacademico,seccion,nombre
    </select>
    
    <select  id="obtenerSaldoPenionesPorFechaPivotLetra" parameterType="map" resultType="pe.marista.sigma.bean.reporte.EstudianteSaldoPivotRepBean">        
        declare <!-- @idestudiante varchar(15),-->
        @fecha date,@anio int,@idtipostatusctacte int,@flg int ,@mesfin int,@unineg varchar(6) 
        set @flg=#{flg}  <!--0=colegio , 1=estudiante-->
        set @mesfin=#{mes}
        set @unineg=#{uniNeg}
        set @anio=#{anio}
        set @idtipostatusctacte=19406<!--SIN SERV-->
        <!--  set @idestudiante=#{idEstudiante}-->
        set @fecha=convert(date,#{fecha})
        <!--declare @nro varchar(6) =#{nro}-->
        declare @fechavenmesfinmas1 date = (select convert(date,fechavenc) from MT_CronogramaPago where mes= (case when @mesfin=1 then 2 else @mesfin end)  and anio=@anio) 
        set @fechavenmesfinmas1= convert(date, DATEADD(day, +1, @fechavenmesfinmas1) ) 
        <if test="list != null " >
            declare @listaEstudiante as table(idestudiante char(15))
            insert into @listaEstudiante(idestudiante) 
            select idestudiante from MX_Estudiante
            where idestudiante in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ;WITH Clases2(seccion,idnivelacademico,idgradoacademico,titulo,identificador,nombre,idEstudiante,codigoEstudiante,nombreRespago,correoResp,direccionResp,telefonoResp, mes, monto) 
        AS
        (
        SELECT (case 
        when @flg=0 then ''
        when @flg=1 then m.seccion end)  as seccion, 
        (case 
        when @flg=0 then ''
        when @flg=1 then niv.idnivelacademico end)  as idnivelacademico,
        (case 
        when @flg=0 then ''
        when @flg=1 then gra.idgradoacademico end)  as idgradoacademico,
        (case 
        when @flg=1 then ''
        when @flg=0 then 'REPORTE DE SALDOS DE PENSIONES '+ CONVERT(VARCHAR(4),@anio)+' AL ' + CONVERT(VARCHAR(15),@fecha,103)
        end) as titulo,
        <!--  convert(varchar(5),isnull(@nro,0)) as nro,-->
        (case 
        when @flg=0 then 
        (select 'R.U.C. '+RUC from MO_UnidadNegocio where   unineg=@uniNeg)
        when @flg=1 then 
        (select top 1 (case 
        when GRA.codigo= 'PRE-INICIAL(3)' then 'P3'
        when GRA.codigo= 'PRE-INICIAL(4)' then 'P4' 
        when GRA.codigo= 'INICIAL(5)'	  then '00'
        when GRA.codigo= 'PRIMERO'		  then '01'
        when GRA.codigo= 'SEGUNDO'		  then '02'
        when GRA.codigo= 'TERCERO'		  then '03'
        when GRA.codigo= 'CUARTO'         then '04'
        when GRA.codigo= 'QUINTO'         then '05'
        when GRA.codigo= 'SEXTO'          then '06'
        when GRA.codigo= 'SETIMO'         then '07'
        when GRA.codigo= 'OCTAVO'         then '08'
        when GRA.codigo= 'NOVENO'         then '09'
        when GRA.codigo= 'DECIMO'         then '10'
        when GRA.codigo= 'DECIMO-BACH'    then '10'
        when GRA.codigo= 'UNDECIMO'       then '11'		
        when GRA.codigo= 'UNDECIMO-BACH'  then '11'
        END )+ isnull(m.seccion,''))end) as identificador,
        (case 
        when @flg=0 then 
        (select nombreUniNeg from MO_UnidadNegocio where   unineg=@uniNeg)
        when @flg=1 then concat(p.apepat,' '+p.apemat,', '+p.nombre)end) as nombre,(case 
        when @flg=0 then '' when @flg=1 then e.idestudiante end)as idEstudiante,
        (case 
        when @flg=0 then '' when @flg=1 then isnull(e.codigo,'-') end)as codigoEstudiante,
        (case 
        when @flg=0 then '' when @flg=1 then concat(resp.apepat,' '+resp.apemat,', '+resp.nombre )end)as nombreRespago,
        (case 
        when @flg=0 then '' when @flg=1 then resp.correo end)as correoResp,
        (case 
        when @flg=0 then '' when @flg=1 then f.direccion end)as direccionResp,
        (case 
        when @flg=0 then '' when @flg=1 then f.telefonocelular end)as telefonoResp , 
        cta.mes, isnull(sum(isnull(cta.monto,0)-isnull(dsctobeca,0)),0) as monto
        FROM MT_CtasxCobrar cta
        inner join MX_Estudiante e on e.idestudiante=cta.idestudiante and e.unineg=@unineg
        LEFT join MX_Persona resp on resp.idpersona=e.idresppago and resp.unineg=@unineg
        LEFT join MX_Familiar f on f.idfamiliar=resp.idpersona and f.unineg=@unineg
        inner join MX_Persona p on p.idpersona=e.idestudiante and p.unineg=@unineg
        inner join MX_Matricula m on m.idestudiante=e.idestudiante and m.anio=@anio and m.unineg=@unineg
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico  
        where cta.anio=@anio
        and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0)  
        <if test="list != null " >
            and e.idestudiante in(select idestudiante from @listaEstudiante)
        </if>
        and fechavenc <![CDATA[ <  ]]>  (case when mes=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and cta.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago) <![CDATA[ >  ]]>  @fecha then 0 else 1 end) else 0 end)=0
        and cta.unineg=@unineg
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>    
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>        
        group by cta.monto,e.idestudiante,cta.mes,gra.codigo,m.seccion,resp.apepat,resp.apemat,resp.nombre,p.apepat,p.apemat,p.nombre,e.codigo,resp.correo
        ,f.direccion,f.telefonocelular,gra.idgradoacademico,niv.idnivelacademico)
        SELECT  seccion,idnivelacademico,idgradoacademico,titulo,identificador,nombre,ISNULL(idestudiante,'-') idestudiante, codigoEstudiante,nombreRespago,correoResp,direccionResp,telefonoResp,
        [2] as matricula, [3] as marzo, [4] as abril, [5] as mayo, [6] as junio, [7] as julio, [8] as agosto, [9] as septiembre, 
        [10] as octubre, [11] as noviembre, [12] as diciembre ,
        CONVERT(varchar, CAST(isnull(isnull([2],0)+ isnull([3],0)+ isnull([4],0)+ isnull([5],0)+ isnull([6],0)+ isnull([7],0)+ isnull([8],0)+ 
        isnull([9],0)+ isnull([10],0)+ isnull([11],0)+isnull([12],0),0)AS money), 1)  deuda
        FROM Clases2
        PIVOT (sum(monto) FOR mes IN([2], [3], [4], [5], [6], [7], [8], [9], [10], [11] , [12] )) PVT 
        order by idnivelacademico desc,idgradoacademico,seccion,nombre
    </select>
        
    <select  id="obtenerSaldoPenionesPorFecha" parameterType="map" resultType="pe.marista.sigma.bean.reporte.SaldoPensionesRepBean">        
        declare  @idestudiante varchar(15),@fecha date,@anio int,@idtipostatusctacte int,@flg int ,@mesfin int,@unineg varchar(6) 
        set @flg=#{flg}  <!--0=colegio , 1=estudiante-->
        set @mesfin=#{mes}
        set @unineg=#{uniNeg}
        set @anio=#{anio}
        set @idtipostatusctacte=19406<!--SIN SERV-->
        set @idestudiante=#{idEstudiante}
        set @fecha=convert(date,#{fecha})
        declare @nro varchar(6) =#{nro}
        declare @fechavenmesfinmas1 date = (select convert(date,fechavenc) from MT_CronogramaPago where mes= (case when @mesfin=1 then 2 else @mesfin end)  and anio=@anio) 
        set @fechavenmesfinmas1= convert(date, DATEADD(day, +1, @fechavenmesfinmas1) ) 

        declare
        @nombre varchar(100) =
        (case 
        when @flg=0 then 
        (select nombreUniNeg from MO_UnidadNegocio where   unineg=@uniNeg)
        when @flg=1 then 
        (select concat(apepat,' '+apemat,', '+nombre) from MX_Persona where idpersona=@idestudiante and unineg=@uniNeg)
        end), 
       
        @id varchar(100) =
        (case 
        when @flg=0 then 
        (select 'R.U.C. '+RUC from MO_UnidadNegocio where   unineg=@uniNeg)
        when @flg=1 then 
        (select top 1 (case 
        when GRA.codigo= 'PRE-INICIAL(3)' then 'P3'
        when GRA.codigo= 'PRE-INICIAL(4)' then 'P4' 
        when GRA.codigo= 'INICIAL(5)'	  then '00'
        when GRA.codigo= 'PRIMERO'		  then '01'
        when GRA.codigo= 'SEGUNDO'		  then '02'
        when GRA.codigo= 'TERCERO'		  then '03'
        when GRA.codigo= 'CUARTO'         then '04'
        when GRA.codigo= 'QUINTO'         then '05'
        when GRA.codigo= 'SEXTO'          then '06'
        when GRA.codigo= 'SETIMO'         then '07'
        when GRA.codigo= 'OCTAVO'         then '08'
        when GRA.codigo= 'NOVENO'         then '09'
        when GRA.codigo= 'DECIMO'         then '10'
        when GRA.codigo= 'DECIMO-BACH'    then '10'
        when GRA.codigo= 'UNDECIMO'       then '11'		
        when GRA.codigo= 'UNDECIMO-BACH'  then '11'
        END )+ isnull(m.seccion,'') from MX_Matricula m
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico where m.idestudiante=@idestudiante and m.unineg=@uniNeg and m.anio=@anio)
        end), 
        
        @responsable varchar(50)=(select concat(apepat,' '+apemat,', '+nombre) from MX_Estudiante e inner join MX_Persona p on p.idpersona=e.idresppago
        where idestudiante=@idestudiante),

        @responsableCorreo varchar(50)=(select correo from MX_Estudiante e inner join MX_Persona p on p.idpersona=e.idresppago
        where idestudiante=@idestudiante),

        @responsableTelefono varchar(50)=(select telefono1domi from MX_Estudiante e inner join MX_Persona p on p.idpersona=e.idresppago
        where idestudiante=@idestudiante),

        @responsableDireccion varchar(100)=(select direccion from MX_Estudiante e inner join MX_Persona p on p.idpersona=e.idresppago
        inner join MX_Familiar f on f.idfamiliar=p.idpersona
        where idestudiante=@idestudiante),

        @estudianteCodigo varchar(50)=(select codigo from MX_Estudiante where idestudiante=@idestudiante),
        
        @mesMat money=        
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 2=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=2 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 2=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=2 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>        
        )end) 

        ,@mesMar money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 3=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=3 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)

        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 3 = month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=3 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>    
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>        
        )
        end) 
		        
        ,@mesAbr money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 4=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=4 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 4=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=4 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>      
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>      
        )
        end) 

        ,@mesMay money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 5=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=5 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 5=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=5 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesJun money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 6=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=6 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 6=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=6 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesJul money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 7=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=7 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 7=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=7 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesAgo money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 8=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=8 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 8=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=8 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesSep money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 9=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=9 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 9=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=9 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>    
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>        
        )
        end) 

        ,@mesOct money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 10=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=10 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 10=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=10 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesNov money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 11=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ > ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=11 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 11=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=11 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesDic money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 12=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=12 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 12=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=12 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 
        
        ,@deuda  money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when @mesfin=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and  isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when @mesfin=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 
        
        select  
        (case 
        when @flg=1 then ''
        when @flg=0 then 'REPORTE DE SALDOS DE PENSIONES '+ CONVERT(VARCHAR(4),@anio)+' AL ' + CONVERT(VARCHAR(15),@fecha,103)
        end) as titulo,
        convert(varchar(5),isnull(@nro,0)) as nro,
        @id as identificador,
        @nombre as nombre,
        @idestudiante as idEstudiante,@estudianteCodigo as codigoEstudiante,@responsable as nombreRespago,@responsableCorreo as correoResp,
        @responsableDireccion as direccionResp,@responsableTelefono as telefonoResp,
        CONVERT(varchar, CAST(isnull(@mesMat,0) AS money), 1)  as matricula,
        CONVERT(varchar, CAST(isnull(@mesMar,0) AS money), 1)   as marzo,
        CONVERT(varchar, CAST(isnull(@mesAbr,0) AS money), 1)   as abril,
        CONVERT(varchar, CAST(isnull(@mesMay,0) AS money), 1)   as mayo,
        CONVERT(varchar, CAST(isnull(@mesJun,0) AS money), 1)   as junio,
        CONVERT(varchar, CAST(isnull(@mesJul,0) AS money), 1)  as julio,
        CONVERT(varchar, CAST(isnull(@mesAgo,0) AS money), 1)   as agosto,
        CONVERT(varchar, CAST(isnull(@mesSep,0) AS money), 1)   as septiembre,
        CONVERT(varchar, CAST(isnull(@mesOct,0) AS money), 1)   as octubre,
        CONVERT(varchar, CAST(isnull(@mesNov,0) AS money), 1)   as noviembre,
        CONVERT(varchar, CAST(isnull(@mesDic,0) AS money), 1)   as diciembre,
        <!--CONVERT(varchar, CAST(isnull(@deuda,0) AS money), 1)   as deuda -->
        CONVERT(varchar, CAST(isnull(isnull(@mesMat,0)+isnull(@mesMar,0)+isnull(@mesAbr,0)+isnull(@mesMay,0)+isnull(@mesJun,0)+isnull(@mesJul,0)+isnull(@mesAgo,0)+isnull(@mesSep,0)+isnull(@mesOct,0)+isnull(@mesNov,0)+isnull(@mesDic,0),0) AS money), 1)   as deuda
    </select>
    <select  id="obtenerEstudianteConSaldoPorFecha" parameterType="map" resultType="pe.marista.sigma.bean.reporte.EstudianteSaldoRepBean">
        declare  @mesfin int,@anio int,@unineg varchar(6),@fecha date,@idtipostatusctacte int
        set @mesfin=#{mes}
        set @anio=#{anio}
        set @unineg=#{uniNeg}
        set @idtipostatusctacte=19406<!--SIN SERV-->
        set @fecha=convert(date,#{fecha})
        declare @fechavenmesfinmas1 date = (select convert(date,fechavenc) from MT_CronogramaPago where mes= (case when @mesfin=1 then 2 else @mesfin end) and anio=@anio) 
        set @fechavenmesfinmas1= convert(date, DATEADD(day, +1, @fechavenmesfinmas1) ) 
        select distinct   
        niv.idnivelacademico, c.idestudiante as idestudiante,m.idgradoacademico,isnull(m.seccion,'') as seccion , concat(p.apepat,' '+p.apemat,', '+p.nombre) as nombre,
        niv.nombre as nombreNivel, gra.nombre as nombreGrado
        from MT_CtasxCobrar  c
        inner join MO_UnidadNegocio ne on ne.unineg=c.unineg
        inner join MX_Estudiante es on es.idestudiante= c.idestudiante and ne.unineg=es.unineg
        inner join MX_Persona p on p.idpersona=es.idestudiante and ne.unineg=p.unineg
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  
        fechavenc  <![CDATA[ <  ]]> (case when @mesfin=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]>@fecha then 0 else 1 end) else 0 end)=0
        and   isnull(idtipostatusctacte,19401) not in (19406) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado"> 
            and gra.idgradoacademico=#{idGrado}
        </if>    
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>  
        order by niv.idnivelacademico desc ,m.idgradoacademico,isnull(m.seccion,'') , concat(p.apepat,' '+p.apemat,', '+p.nombre) asc  
    </select> 
    <select id="obtenerUltimoDiaMes" resultType="Integer" parameterType="map" >
        DECLARE @MES INT,@ANIO INT
        SET @MES=#{mes}
        SET @ANIO=#{anio}
        DECLARE @date DATETIME = '1/'+convert(varchar,@MES)+'/'+convert(varchar,@ANIO) 
        SELECT day(EOMONTH(@date)) AS dia 
    </select>
    <select  id="obtenerNotaOperacion" parameterType="map" resultType="pe.marista.sigma.bean.reporte.NotasOperacionRepBean">        
        declare  @unineg varchar(6),@mes int
        set @unineg=#{uniNeg}
        set @mes =#{mes}
        declare 
        @nombreunineg varchar(100)=(select top 1 nombreUniNeg from MO_UnidadNegocio where unineg=@unineg),
        @rucunineg varchar(100)=(select top 1 RUC from MO_UnidadNegocio where unineg=@unineg)
        select @nombreunineg AS nombreUniNeg,'R.U.C. '+@rucunineg as rucUniNeg,@mes as mes
    </select>
    <select  id="obtenerNotaOperacionPorFechaCobros" parameterType="map" resultType="pe.marista.sigma.bean.reporte.NotasOpeFecCobroRepBean">        
        declare @mes int,@anio int , @unineg varchar(6),@idtipolugarpago int
        set @mes =#{mes}
        set @anio=#{anio}
        set @unineg=#{uniNeg}
        set @idtipolugarpago=#{idTipoLugarPago}
        declare 
        @titulo varchar(100)='NOTAS DE OPERACIÓN:',
        @banco varchar(150) = (select top 1 CONCAT(descripcion,' '+ numcuenta) from MT_CuentaBanco where flgcobranza=0 and status=1 and unineg=@uniNeg )  
        select distinct  
        convert(date,cta.fechapago) as fechacobro, 
        @titulo+' '+isnull(@banco,'BANCO') as titulo,
        'FECHA DE COBRO: '+CONVERT(VARCHAR,cta.fechapago,103) AS tituloOp
        from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on cta.iddocingreso=doc.iddocingreso and cta.unineg=doc.unineg
        where cta.unineg=@unineg and doc.idtipolugarpago=@idtipolugarpago and month(cta.fechapago)=@mes and cta.anio=@anio
        and cta.fechapago is not null 
        <if test="fechaCobro != null"> 
            and convert(date,cta.fechapago)=#{fechaCobro} 
        </if>        
        order by 1
    </select>
    <select  id="obtenerNotaOperacionPorFechaVenc" parameterType="map" resultType="pe.marista.sigma.bean.reporte.NotasOpeFecVencRepBean">        
        declare @mes int,@anio int , @unineg varchar(6),@idtipolugarpago int,@fechapago date,@fechavenc date
        set @mes =#{mes}
        set @anio=#{anio}
        set @unineg=#{uniNeg}
        set @idtipolugarpago=#{idTipoLugarPago}
        set @fechapago=convert(date,#{fechaPago}) 
        declare
        @sumImporteOp money=(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) as sumImporte  
        from MT_CtasxCobrar cta inner join MT_DocIngreso doc on cta.iddocingreso=doc.iddocingreso and cta.unineg=doc.unineg 
        where cta.unineg=@unineg and doc.idtipolugarpago=@idtipolugarpago and month(cta.fechapago)=@mes and cta.anio in (@anio,@anio-1)
        and convert(date,cta.fechapago)=@fechapago
        and cta.idtipostatusctacte=19404)
        ,@sumMoraOp money=(select isnull(sum(isnull(cta.mora,0)-isnull(cta.dscto,0)+isnull(cta.dscto,0)),0) as sumMora  
        from MT_CtasxCobrar cta inner join MT_DocIngreso doc on cta.iddocingreso=doc.iddocingreso and cta.unineg=doc.unineg 
        where cta.unineg=@unineg and doc.idtipolugarpago=@idtipolugarpago and month(cta.fechapago)=@mes and cta.anio in (@anio,@anio-1)
        and convert(date,cta.fechapago)=@fechapago 
        and cta.idtipostatusctacte=19404)
        declare 
        @titulo varchar(100)='NOTAS DE OPERACIÓN:',
        @banco varchar(150) = (select top 1 CONCAT(descripcion,' '+ numcuenta) from MT_CuentaBanco where flgcobranza=0 and status=1 and unineg=@uniNeg )  
        select distinct
        @titulo+' '+isnull(@banco,'BANCO') as titulo,
        'FECHA DE COBRO: '+CONVERT(VARCHAR,cta.fechapago,103) AS tituloOp,
        'TOTAL DE COBROS DEL DÍA: '+CONVERT(VARCHAR,@fechapago,103) AS label,
        convert(date,cta.fechavenc) as fechavenc,
        CONVERT(varchar, CAST(isnull(@sumImporteOp,0) AS money), 1) as sumImporteOp,
        CONVERT(varchar, CAST(isnull(@sumMoraOp,0) AS money), 1) as  sumMoraOp,
        CONVERT(varchar, CAST(isnull(@sumImporteOp,0)+isnull(@sumMoraOp,0) AS money), 1) as  totalOp 
        from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on cta.iddocingreso=doc.iddocingreso and cta.unineg=doc.unineg
        where cta.unineg=@unineg and doc.idtipolugarpago=@idtipolugarpago and month(cta.fechapago)=@mes and cta.anio in (@anio,@anio-1)
        and convert(date,cta.fechapago)=@fechapago
        order by 1
    </select>
    <select  id="obtenerDetNotaOperacionPorFechaVenc" parameterType="map" resultType="pe.marista.sigma.bean.reporte.DetCobrosPensionesRepBean">        
        declare @mes int,@anio int , @unineg varchar(6),@idtipolugarpago int,@fechapago date,@fechavenc date
        set @mes =#{mes}
        set @anio=#{anio}
        set @unineg=#{uniNeg}
        set @idtipolugarpago=#{idTipoLugarPago}
        set @fechapago=convert(date,#{fechaPago}) 
        set @fechavenc=convert(date,#{fechaVenc})
        declare 
        @sumImporte money=(select isnull(sum(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0)),0) as sumImporte  
        from MT_CtasxCobrar cta inner join MT_DocIngreso doc on cta.iddocingreso=doc.iddocingreso and cta.unineg=doc.unineg 
        where cta.unineg=@unineg and doc.idtipolugarpago=@idtipolugarpago   and cta.anio in (@anio,@anio-1)
        and convert(date,cta.fechapago)=@fechapago and convert(date,cta.fechavenc)=@fechavenc
        and cta.idtipostatusctacte=19404)
        ,@sumMora money=(select isnull(sum(isnull(cta.mora,0)-isnull(cta.dscto,0)+isnull(cta.dscto,0)),0) as sumMora  
        from MT_CtasxCobrar cta inner join MT_DocIngreso doc on cta.iddocingreso=doc.iddocingreso and cta.unineg=doc.unineg 
        where cta.unineg=@unineg and doc.idtipolugarpago=@idtipolugarpago   and cta.anio in (@anio,@anio-1)
        and convert(date,cta.fechapago)=@fechapago and convert(date,cta.fechavenc)=@fechavenc
        and cta.idtipostatusctacte=19404)
        select 
        'FECHA DE VENCIMIENTO: '+CONVERT(VARCHAR,@fechavenc,103) AS label,
        est.codigo , 
        concat(p.apepat,' '+p.apemat,', '+p.nombre) as nombre,
        CONVERT(varchar, CAST(isnull(cta.montopagado,0)-isnull(cta.mora,0)+isnull(cta.dscto,0) AS money), 1) as importe ,
        CONVERT(varchar, CAST(isnull(cta.mora,0)+isnull(cta.dscto,0) AS money), 1) as mora,
        CONVERT(varchar, CAST(isnull(cta.montopagado,0) AS money), 1) as total, 
        CONVERT(varchar, CAST(isnull(@sumImporte,0) AS money), 1) as sumImporte,
        CONVERT(varchar, CAST(isnull(@sumMora,0) AS money), 1) as  sumMora,
        CONVERT(varchar, CAST(isnull(@sumImporte,0)+isnull(@sumMora,0) AS money), 1) as  totalFecVenc
        from MT_CtasxCobrar cta
        inner join MT_DocIngreso doc on cta.iddocingreso=doc.iddocingreso and cta.unineg=doc.unineg
        inner join MX_Estudiante est on est.idestudiante= cta.idestudiante and cta.unineg=est.unineg
        inner join MX_Persona p on p.idpersona=est.idestudiante and est.unineg=p.unineg
        where cta.unineg=@unineg and doc.idtipolugarpago=@idtipolugarpago   and cta.anio in (@anio,@anio-1)
        and convert(date,cta.fechapago)=@fechapago and convert(date,cta.fechavenc)=@fechavenc
        and cta.idtipostatusctacte=19404
        order by concat(p.apepat,' '+p.apemat,', '+p.nombre)
    </select>
    <select  id="obtenerProvisionCabecera" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ProvicionPensionRepBean">        
        Declare @anio int, @mes int, @uniNeg varchar(6)
        set @anio=#{anio}
        set @mes = #{mes} 
        set @uniNeg= #{uniNeg}
        Declare
        @nombreunineg varchar(75)=(select UPPER(nombreUniNeg) from MO_UnidadNegocio where unineg=@unineg)
        select 
        case 
        when cta.mes=1 then 'ENERO'
        when cta.mes=2 then 'FEBRERO'
        when cta.mes=3 then 'MARZO'
        when cta.mes=4 then 'ABRIL'
        when cta.mes=5 then 'MAYO'
        when cta.mes=6 then 'JUNIO'
        when cta.mes=7 then 'JULIO'
        when cta.mes=8 then 'AGOSTO'
        when cta.mes=9 then 'SETIEMBRE'
        when cta.mes=10 then 'OCTUBRE'
        when cta.mes=11 then 'NOVIEMBRE'
        when cta.mes=12 then 'DICIEMBRE'
        end as mes ,
        @nombreunineg as nombreUniNeg, count(*) as cantAlumnos,
        CONVERT(varchar, CAST(isnull(sum(ISNULL(monto,0)),0) AS money), 1) as cantFacturado,
        CONVERT(varchar, CAST(isnull(sum(ISNULL(monto,0)-ISNULL(dsctobeca,0)),0) AS money), 1) as cantPagantes
        ,CONVERT(varchar, CAST(isnull(sum(ISNULL(dsctobeca,0)),0) AS money), 1) as catDsctoBeca, 'REPORTE DE PROVISIÓN DE PENSIONES' as titulo ,cta.mes as mesAyuda,
        cta.anio
        from MT_CtasxCobrar cta
        inner join MX_Matricula m on m.idmatricula=cta.idmatricula and m.unineg=cta.unineg
        where cta.anio=@anio and mes=@mes   and idtipostatusctacte not in (19406) and cta.unineg=@unineg
        group by mes, cta.anio
        order by 1
    </select>
    <select  id="obtenerProvisionNiveles" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ProvicionPensionNivelesRepBean">        
        Declare @anio int, @mes int, @nivel varchar(10),@uniNeg varchar(6)
        set @anio=#{anio}
        set @mes = #{mes} 
        set @uniNeg= #{uniNeg}
        select upper(niv.nombre) as nombre,count(*) as cantAlumnos,
        CONVERT(varchar, CAST(isnull(sum(monto),0) AS money), 1) as cantFacturado,
        CONVERT(varchar, CAST(isnull(sum(isnull(monto,0)),0) AS money), 1) as cantFacturado,
        CONVERT(varchar, CAST(isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0) AS money), 1) as cantPagantes,
        CONVERT(varchar, CAST(isnull(sum(isnull(dsctobeca,0)),0) AS money), 1)  as cantDsctoBeca        
        from MT_CtasxCobrar cta
        inner join MX_Matricula m on m.idmatricula=cta.idmatricula and m.unineg=cta.unineg 
        inner join MX_GradoAcademico grad on grad.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=grad.idnivelacademico 
        where cta.anio=@anio and mes=@mes   and idtipostatusctacte not in (19406)  
        and cta.unineg=@unineg
        group by mes,niv.nombre
        order by 1
    </select>
    <select  id="obtenerProvisionNivelesDetalle" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ProvicionPensionNivelDetalleRepBean">        
        Declare @anio int, @mes int, @nivel varchar(10),@uniNeg varchar(6)
        set @anio=#{anio}
        set @mes = #{mes}
        set @nivel =#{nivel}
        set @uniNeg= #{uniNeg}
        select 
        (case when  @nivel='inicial' then RIGHT(grad.nombre,6) else REPLACE(grad.nombre,@nivel,'Grado') end) as nombre,
        m.idgradoacademico,count(*) as cantAlumnos,
        <!-- CONVERT(varchar, CAST(isnull((select distinct conu.importe from MT_ConceptoUniNeg conu
        inner join MT_Concepto con on conu.idconcepto=con.idconcepto
        inner join MX_GradoAcademico gra on gra.idgradoacademico=con.idgradoacademico
        where isnull(conu.importe,0) >0  and conu.unineg=@uniNeg and gra.idgradoacademico=grad.idgradoacademico and con.nombre like 'pen%'),0) AS money), 1) as pension,-->
        CONVERT(varchar, CAST(isnull((select distinct top 1 cta.monto),0) AS money), 1) as pension,
        CONVERT(varchar, CAST(isnull(sum(isnull(monto,0)),0) AS money), 1) as cantFacturado,
        CONVERT(varchar, CAST(isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0) AS money), 1) as cantPagantes,
        CONVERT(varchar, CAST(isnull(sum(isnull(dsctobeca,0)),0) AS money), 1)  as cantDsctoBeca
        from MT_CtasxCobrar cta
        inner join MX_Matricula m on m.idmatricula=cta.idmatricula and m.unineg=cta.unineg
        inner join MX_GradoAcademico grad on grad.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=grad.idnivelacademico
        where cta.anio=@anio and mes=@mes   and idtipostatusctacte not in (19406) and niv.nombre=@nivel
        and cta.unineg=@unineg
        <!--group by mes,m.idgradoacademico,grad.nombre,grad.idgradoacademico,cta.monto-->
        group by mes,m.idgradoacademico,grad.nombre,grad.idgradoacademico,cta.monto
        order by 1
    </select>
    <select id="filtrarConcilia" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" resultMap="ctasXCobrarResultado" >
        <include refid="consultaConcilia"/>        
        <where>
            cta.unineg=#{unidadNegocioBean.uniNeg} 
            and mat.flgmatricula in (1,0)
            and cta.idtipostatusctacte = 19404
            <if test="conceptoBean.idConcepto != null and conceptoBean.idConcepto != 0" >
                and cta.idconcepto = #{conceptoBean.idConcepto}
            </if>  
            <if test="conceptoBean.tipoConceptoBean.idTipoConcepto != null and conceptoBean.tipoConceptoBean.idTipoConcepto != 0" >
                and tc.idTipoConcepto = #{conceptoBean.tipoConceptoBean.idTipoConcepto}
            </if>
            <if test="anio != null and anio != 0" >
                and cta.anio=#{anio} 
                and mat.anio=#{anio} 
            </if>
            <if test="mes != null and mes != 0" >
                and cta.mes = #{mes}   
            </if>
            <if test="fechaInicio != null" >
                and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> #{fechaInicio} 
            </if>
            <if test="fechaFin != null" >
                and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> #{fechaFin}
            </if>
            <if test="estudianteBean.idEstudiante != null and estudianteBean.idEstudiante != '' " >
                and cta.idestudiante like concat('%',#{estudianteBean.idEstudiante},'%') 
            </if>
            <if test="estudianteBean.codigo != null and estudianteBean.codigo != '' " >
                and stu.codigo like concat('%',#{estudianteBean.codigo},'%') 
            </if>
            <if test="docIngresoBean.nombreDiscente != null and docIngresoBean.nombreDiscente != '' " >
                and doc.discente like concat('%',#{docIngresoBean.nombreDiscente},'%') 
            </if>
            <if test="matriculaBean.gradoAcademicoBean.nivelAcademicoBean.idNivelAcademico != null" >
                and na.idnivelacademico = #{matriculaBean.gradoAcademicoBean.nivelAcademicoBean.idNivelAcademico}
            </if>
            <if test="matriculaBean.gradoAcademicoBean.idGradoAcademico != null" >
                and mat.idGradoAcademico = #{matriculaBean.gradoAcademicoBean.idGradoAcademico}
            </if>
            <if test="docIngresoBean.idTipoLugarPago.idCodigo != null " >
                and doc.idtipolugarpago in( #{docIngresoBean.idTipoLugarPago.idCodigo})
            </if>
            <if test="docIngresoBean.idTipoLugarPago.idCodigo == null " >
                and doc.idtipolugarpago in (select idcodigo from Mo_codigo where idtipocodigo = 'tipolugarpago')
            </if>
            <!-- orden-->
            <if test="orden == 1" >
                order by na.idnivelacademico desc,graM.idgradoacademico, mat.seccion,concat(p.apepat,p.apemat, p.nombre)
            </if> 
            <if test="orden == 2" >
                order by cta.fechapago 
            </if> 
            <if test="orden == 3" >
                order by cta.fechapago desc
            </if> 
            <if test="orden == 4" >
                order by concat(p.apepat,p.apemat, p.nombre) asc, doc.nrodoc, na.idnivelacademico desc,gra.idgradoacademico, mat.seccion
            </if>    
            <if test="orden == 5" >
                order by  doc.nrodoc asc
            </if>    
        </where> 
    </select> 
    <select id="filtrarConciliaAmbos" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" resultMap="ctasXCobrarResultado" >
        <include refid="consultaConcilia"/>        
        <where>
            cta.unineg=#{unidadNegocioBean.uniNeg} 
            and mat.flgmatricula in (1,0)
            and cta.idtipostatusctacte = 19404
            <if test="conceptoBean.idConcepto != null and conceptoBean.idConcepto != 0" >
                and cta.idconcepto = #{conceptoBean.idConcepto}
            </if>  
            <if test="conceptoBean.tipoConceptoBean.idTipoConcepto != null and conceptoBean.tipoConceptoBean.idTipoConcepto != 0" >
                and tc.idTipoConcepto = #{conceptoBean.tipoConceptoBean.idTipoConcepto}
            </if>
            <if test="anio != null and anio != 0" >
                and cta.anio=#{anio} 
                and mat.anio=#{anio} 
            </if>
            <if test="mes != null and mes != 0" >
                and cta.mes = #{mes}   
            </if>
            <if test="fechaInicio != null" >
                and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  #{fechaInicio}  
            </if>
            <if test="fechaFin != null" >
                and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>  #{fechaFin} 
            </if>
            <if test="estudianteBean.idEstudiante != null and estudianteBean.idEstudiante != '' " >
                and cta.idestudiante like concat('%',#{estudianteBean.idEstudiante},'%') 
            </if>
            <if test="estudianteBean.codigo != null and estudianteBean.codigo != '' " >
                and stu.codigo like concat('%',#{estudianteBean.codigo},'%') 
            </if>
            <if test="docIngresoBean.nombreDiscente != null and docIngresoBean.nombreDiscente != '' " >
                and doc.discente like concat('%',#{docIngresoBean.nombreDiscente},'%') 
            </if>
            <if test="matriculaBean.gradoAcademicoBean.nivelAcademicoBean.idNivelAcademico != null" >
                and na.idnivelacademico = #{matriculaBean.gradoAcademicoBean.nivelAcademicoBean.idNivelAcademico}
            </if>
            <if test="matriculaBean.gradoAcademicoBean.idGradoAcademico != null" >
                and mat.idGradoAcademico = #{matriculaBean.gradoAcademicoBean.idGradoAcademico}
            </if>
            <if test="docIngresoBean.idTipoLugarPago.idCodigo != null " >
                and doc.idtipolugarpago in( 19301,19302)
            </if>
            <if test="docIngresoBean.idTipoLugarPago.idCodigo == null " >
                and doc.idtipolugarpago in (select idcodigo from Mo_codigo where idtipocodigo = 'tipolugarpago')
            </if>
            <!-- orden-->
            <if test="orden == 1" >
                order by na.idnivelacademico desc,graM.idgradoacademico, mat.seccion,concat(p.apepat,p.apemat, p.nombre)
            </if> 
            <if test="orden == 2" >
                order by cta.fechapago 
            </if> 
            <if test="orden == 3" >
                order by cta.fechapago desc
            </if> 
            <if test="orden == 4" >
                order by concat(p.apepat,p.apemat, p.nombre) asc, doc.nrodoc, na.idnivelacademico desc,gra.idgradoacademico, mat.seccion
            </if>    
            <if test="orden == 5" >
                order by  doc.nrodoc asc
            </if>    
        </where> 
    </select> 
    <update id="modificarConcilia" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        UPDATE MT_CtasxCobrar
        set
        flgEnvio = #{estadoConcilia},
        modipor = #{modiPor},
        modifecha = GETDATE()
        where unineg = #{unidadNegocioBean.uniNeg}  and idctasxcobrar = #{idCtasXCobrar} 
    </update>
    <update id="modificarCuentaFull" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        UPDATE MT_CtasxCobrar
        SET  
        idconcepto=#{conceptoBean.idConcepto}
        ,idtipostatusctacte=#{idTipoStatusCtaCte.idCodigo}
        ,cr=#{centroResponsabilidadBean.cr}
        ,cuentad=#{cuentaD.cuenta}
        ,cuentah=#{cuentaH.cuenta}
        ,monto=#{monto}
        ,tasainteres=#{tasaInteres}
        ,mora=#{mora}
        ,idtipodscto=#{idTipoDscto.idCodigo}
        ,dscto=#{dscto}
        ,montoPagado=#{montoPagado}
        ,deuda= ((isnull(#{monto},0) - isnull(#{dsctoBeca},0)) + (isnull(#{mora},0) - isnull(#{dscto},0))) - isnull(#{montoPagado},0)
        ,fechavenc=#{fechaVenc}
        ,fechapago=#{fechaPago}
        ,dsctobeca=#{dsctoBeca}
        ,modiPor = #{modiPor}
        ,creaDscto = #{creaDscto}
        ,dsctoFecha = #{dsctoFecha}
        ,obs=#{obs}
        <!-- 
        iddocingreso
        -->
        ,idprocesobanco= #{idProcesoBanco}        
        where unineg = #{unidadNegocioBean.uniNeg}  and idctasxcobrar = #{idCtasXCobrar} 
    </update> 
    
    <select id="obtenerCuentaEnvio" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" resultMap="ctasXCobrarResultado" >
        SELECT 
        cta.idCtasXCobrar				as idCtasXCobrar
        ,cta.idEstudiante				as idEstudiante	
        ,cta.idMatricula                                as idMatricula
        ,stu.idGradoHabilitado                          as idGradoHabilitado
        ,gra.nombre                                     as nombreGradoHab
        ,pro.idProgramacion                             as idProgramacion
        ,stu.seccion					as seccionEst
        ,cta.uniNeg					as uniNeg
        ,uni.nombreUniNeg				as nombreUniNeg
        ,cta.idConcepto					as idConcepto
        ,con.nombre					as nombreConcepto
        ,isnull(con.flgPrecio,1)			as flgPrecio
        ,cta.idDocIngreso				as idDocIngreso
        ,cta.fechaPago					as fechaPago
        ,cta.cr						as cr
        ,cen.cr						as cr2
        ,cen.nombre					as nombreCr
        ,cta.cuentad					as cuentaD
        ,plad.nombre					as nombreCuentaD
        ,cta.cuentah					as cuentaH
        ,plah.nombre					as nombreCuentaH
        ,cta.monto					as monto
        ,cta.montoPagado				as montoPagado	
        ,cta.deuda					as deuda
        ,cta.mora					as mora
        ,cta.tasainteres				as interes
        ,cta.idTipoMoneda				as idTipoMoneda
        ,cod.codigo					as codigoMoneda
        ,cta.fechaVenc					as fechaVenc
        ,cta.fechaPago					as fechaPago
        ,cta.dsctoBeca					as dsctoBeca
        ,cta.idEstudianteBeca				as idEstudianteBeca
        ,est.idtipomotivobeca                           as idTipMotivoBeca
        ,codModBec.codigo				as codigoTipMotivoBeca
        ,est.mesInicio					as mesInicio
        ,est.idBeca					as idBeca
        ,bec.nombre					as nombreBeca
        ,bec.porcentaje					as porcentaje
        ,bec.idtipobeca                                 as idTipBeca
        ,codBec.codigo                                  as codigoBeca
        ,cta.idtipobeca                                 as idTipoBeca	
        ,tipb.codigo                                    as codigoTipoBeca
        ,cta.docRefProvision				as docRefProvision
        ,cta.anio					as anio	
        ,cta.mes					as mes
        ,cta.idTipoStatusCtaCte                         as idTipoStatusCtaCte
        ,sta.codigo					as codigoStatusCtaCte
        ,cta.idTipoDscto                        	as idTipoDscto
        ,tipd.codigo                    		as codigoTipoDscto
        ,cta.idTipoMotivoDscto                  	as idTipoMotivoDscto
        ,tipm.codigo                            	as codigoTipoMotivoDscto
        ,isnull(cta.dscto,0.0)				as dsctoM
        ,cta.idProcesoEnvio                     	as idProcesoEnvio
        ,proe.monto					as montoEnvio
        ,cta.idProcesoRecup                     	as idProcesoRecup
        ,recu.monto					as montoRecup
        ,tipLugar.idCodigo                              as idTipoLugarPago
        ,tipLugar.codigo                                as codTipoLugarPago
        ,cta.creaPor					as creaPor
        ,cta.creaFecha					as creaFecha
        ,cta.creaDscto				as creaDscto
        ,cta.dsctoFecha				as dsctoFecha
        ,cta.obs                                as obs
        ,tc.nombre                             as tipoConcepto
        ,(case when cta.iddocingreso is not null then '/resources/images/icons/agregar.png' 
        else '/resources/images/icons/agregarrojo.png' end) as alerta
        ,stu.codigo                                     as codigo
        ,doc.discente                                  as nombreDiscente
        ,convert(varchar,cta.fechaPago,105)            as fechaPagoVista
        ,cta.flgEnvio                                  as estadoConcilia
        ,(case 
        when cta.iddocingreso is not null  and cta.fechapago is not null then 'true' 
        when cta.iddocingreso is not null  and cta.fechapago is null  and cta.idtipostatusctacte in (19401) then 'false' 
        when cta.iddocingreso is null  and cta.fechapago is null THEN (case when cta.unineg='CHAMPS' THEN 'true' ELSE 'false' END)  
        else 'true' end )  as disabled
        ,(case when isnull(cta.dscto,0)>0 then CAST((ROUND((((cta.dscto/cta.mora)*100)), 0)) AS decimal(8,2)) else 0 end) as porcentajeDscto
        ,pe.nombre
        ,pe.apepat
        ,pe.apemat
        FROM MT_CtasxCobrar cta
        INNER JOIN MX_Estudiante stu on stu.idestudiante = cta.idestudiante and stu.unineg=cta.unineg
        INNER JOIN MX_Matricula mat on cta.idestudiante = mat.idestudiante and stu.unineg=mat.unineg and mat.anio=cta.anio
        INNER JOIN MX_GradoAcademico gra on gra.idGradoAcademico = stu.idGradoHabilitado
        LEFT JOIN MX_Programacion pro on pro.idProgramacion = mat.idProgramacion and stu.unineg=pro.unineg and pro.anio=cta.anio
        INNER JOIN MO_UnidadNegocio uni on uni.unineg = cta.unineg
        INNER JOIN MT_Concepto con ON cta.idconcepto = con.idconcepto
        INNER JOIN MT_TipoConcepto tc on tc.idTipoConcepto=con.idtipoconcepto 
        LEFT JOIN MT_DocIngreso doc ON cta.iddocingreso = doc.iddocingreso and stu.unineg=doc.unineg and doc.anio=cta.anio
        LEFT JOIN MO_Codigo tipLugar ON doc.idTipoLugarPago = tipLugar.idcodigo    
        LEFT JOIN MT_CentroResponsabilidad cen ON cta.cr = cen.cr
        LEFT JOIN MT_PlanContable plad ON cta.cuentad = plad.cuenta     
        LEFT JOIN MT_PlanContable plah ON cta.cuentad = plah.cuenta    
        LEFT JOIN MO_Codigo cod ON cta.idtipomoneda = cod.idcodigo 
        LEFT JOIN MX_EstudianteBeca est ON est.idestudiantebeca = cta.idestudiantebeca and est.unineg=cta.unineg and est.anio=cta.anio
        LEFT JOIN MT_Beca bec ON bec.idbeca = est.idbeca
        LEFT JOIN MO_Codigo tipb ON cta.idTipoBeca = tipb.idcodigo    
        LEFT JOIN MO_Codigo sta ON cta.idtipostatusctacte = sta.idcodigo 
        LEFT JOIN MO_Codigo tipd ON cta.idTipoDscto = tipd.idcodigo     
        LEFT JOIN MO_Codigo tipm ON cta.idtipostatusctacte = tipm.idcodigo 
        LEFT JOIN MT_ProcesoEnvio proe ON cta.idprocesoenvio = proe.idprocesoenvio
        LEFT JOIN MT_ProcesoRecup recu ON cta.idprocesoenvio = recu.idprocesorecup
        LEFT JOIN MO_Codigo codBec ON bec.idtipobeca = codBec.idcodigo    
        LEFT JOIN MO_Codigo codModBec ON est.idTipoMotivoBeca = codModBec.idcodigo
        INNER JOIN mx_persona pe on stu.idestudiante = pe.idpersona and stu.unineg = pe.unineg
        where cta.idprocesoenvio = #{procesoEnvioBean.idProcesoEnvio} and cta.unineg = #{unidadNegocioBean.uniNeg}
    </select>
    
    <select id="obtenerCuentaRecuperacion" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" resultMap="ctasXCobrarResultado" >
        SELECT 
        cta.idCtasXCobrar				as idCtasXCobrar
        ,cta.idEstudiante				as idEstudiante	
        ,cta.idMatricula                                as idMatricula
        ,stu.idGradoHabilitado                          as idGradoHabilitado
        ,gra.nombre                                     as nombreGradoHab
        ,pro.idProgramacion                             as idProgramacion
        ,stu.seccion					as seccionEst
        ,cta.uniNeg					as uniNeg
        ,uni.nombreUniNeg				as nombreUniNeg
        ,cta.idConcepto					as idConcepto
        ,con.nombre					as nombreConcepto
        ,isnull(con.flgPrecio,1)			as flgPrecio
        ,cta.idDocIngreso				as idDocIngreso
        ,cta.fechaPago					as fechaPago
        ,cta.cr						as cr
        ,cen.cr						as cr2
        ,cen.nombre					as nombreCr
        ,cta.cuentad					as cuentaD
        ,plad.nombre					as nombreCuentaD
        ,cta.cuentah					as cuentaH
        ,plah.nombre					as nombreCuentaH
        ,cta.monto					as monto
        ,cta.montoPagado				as montoPagado	
        ,cta.deuda					as deuda
        ,cta.mora					as mora
        ,cta.tasainteres				as interes
        ,cta.idTipoMoneda				as idTipoMoneda
        ,cod.codigo					as codigoMoneda
        ,cta.fechaVenc					as fechaVenc
        ,cta.fechaPago					as fechaPago
        ,cta.dsctoBeca					as dsctoBeca
        ,cta.idEstudianteBeca				as idEstudianteBeca
        ,est.idtipomotivobeca                           as idTipMotivoBeca
        ,codModBec.codigo				as codigoTipMotivoBeca
        ,est.mesInicio					as mesInicio
        ,est.idBeca					as idBeca
        ,bec.nombre					as nombreBeca
        ,bec.porcentaje					as porcentaje
        ,bec.idtipobeca                                 as idTipBeca
        ,codBec.codigo                                  as codigoBeca
        ,cta.idtipobeca                                 as idTipoBeca	
        ,tipb.codigo                                    as codigoTipoBeca
        ,cta.docRefProvision				as docRefProvision
        ,cta.anio					as anio	
        ,cta.mes					as mes
        ,cta.idTipoStatusCtaCte                         as idTipoStatusCtaCte
        ,sta.codigo					as codigoStatusCtaCte
        ,cta.idTipoDscto                        	as idTipoDscto
        ,tipd.codigo                    		as codigoTipoDscto
        ,cta.idTipoMotivoDscto                  	as idTipoMotivoDscto
        ,tipm.codigo                            	as codigoTipoMotivoDscto
        ,isnull(cta.dscto,0.0)				as dsctoM
        ,cta.idProcesoEnvio                     	as idProcesoEnvio
        ,proe.monto					as montoEnvio
        ,cta.idProcesoRecup                     	as idProcesoRecup
        ,recu.monto					as montoRecup
        ,tipLugar.idCodigo                              as idTipoLugarPago
        ,tipLugar.codigo                                as codTipoLugarPago
        ,cta.creaPor					as creaPor
        ,cta.creaFecha					as creaFecha
        ,cta.creaDscto				as creaDscto
        ,cta.dsctoFecha				as dsctoFecha
        ,cta.obs                                as obs
        ,tc.nombre                             as tipoConcepto
        ,(case when cta.iddocingreso is not null then '/resources/images/icons/agregar.png' 
        else '/resources/images/icons/agregarrojo.png' end) as alerta
        ,stu.codigo                                     as codigo
        ,doc.discente                                  as nombreDiscente
        ,convert(varchar,cta.fechaPago,105)            as fechaPagoVista
        ,cta.flgEnvio                                  as estadoConcilia
        ,(case 
        when cta.iddocingreso is not null  and cta.fechapago is not null then 'true' 
        when cta.iddocingreso is not null  and cta.fechapago is null  and cta.idtipostatusctacte in (19401) then 'false' 
        when cta.iddocingreso is null  and cta.fechapago is null THEN (case when cta.unineg='CHAMPS' THEN 'true' ELSE 'false' END)  
        else 'true' end )  as disabled
        ,(case when isnull(cta.dscto,0)>0 then CAST((ROUND((((cta.dscto/cta.mora)*100)), 0)) AS decimal(8,2)) else 0 end) as porcentajeDscto
        ,pe.nombre
        ,pe.apepat
        ,pe.apemat
        FROM MT_CtasxCobrar cta
        INNER JOIN MX_Estudiante stu on stu.idestudiante = cta.idestudiante and stu.unineg=cta.unineg
        INNER JOIN MX_Matricula mat on cta.idestudiante = mat.idestudiante and stu.unineg=mat.unineg and mat.anio=cta.anio
        INNER JOIN MX_GradoAcademico gra on gra.idGradoAcademico = stu.idGradoHabilitado
        LEFT JOIN MX_Programacion pro on pro.idProgramacion = mat.idProgramacion and stu.unineg=pro.unineg and pro.anio=cta.anio
        INNER JOIN MO_UnidadNegocio uni on uni.unineg = cta.unineg
        INNER JOIN MT_Concepto con ON cta.idconcepto = con.idconcepto
        INNER JOIN MT_TipoConcepto tc on tc.idTipoConcepto=con.idtipoconcepto 
        LEFT JOIN MT_DocIngreso doc ON cta.iddocingreso = doc.iddocingreso and stu.unineg=doc.unineg and doc.anio=cta.anio
        LEFT JOIN MO_Codigo tipLugar ON doc.idTipoLugarPago = tipLugar.idcodigo    
        LEFT JOIN MT_CentroResponsabilidad cen ON cta.cr = cen.cr
        LEFT JOIN MT_PlanContable plad ON cta.cuentad = plad.cuenta     
        LEFT JOIN MT_PlanContable plah ON cta.cuentad = plah.cuenta    
        LEFT JOIN MO_Codigo cod ON cta.idtipomoneda = cod.idcodigo 
        LEFT JOIN MX_EstudianteBeca est ON est.idestudiantebeca = cta.idestudiantebeca and est.unineg=cta.unineg and est.anio=cta.anio
        LEFT JOIN MT_Beca bec ON bec.idbeca = est.idbeca
        LEFT JOIN MO_Codigo tipb ON cta.idTipoBeca = tipb.idcodigo    
        LEFT JOIN MO_Codigo sta ON cta.idtipostatusctacte = sta.idcodigo 
        LEFT JOIN MO_Codigo tipd ON cta.idTipoDscto = tipd.idcodigo     
        LEFT JOIN MO_Codigo tipm ON cta.idtipostatusctacte = tipm.idcodigo 
        LEFT JOIN MT_ProcesoEnvio proe ON cta.idprocesoenvio = proe.idprocesoenvio
        LEFT JOIN MT_ProcesoRecup recu ON cta.idprocesoenvio = recu.idprocesorecup
        LEFT JOIN MO_Codigo codBec ON bec.idtipobeca = codBec.idcodigo    
        LEFT JOIN MO_Codigo codModBec ON est.idTipoMotivoBeca = codModBec.idcodigo
        INNER JOIN mx_persona pe on stu.idestudiante = pe.idpersona and stu.unineg = pe.unineg
        where cta.idprocesobanco = #{procesoRecuperacionBean.idProcesoRecup} and cta.unineg = #{unidadNegocioBean.uniNeg}
    </select>
    
    <select id="obtenerCuentaMensaje" parameterType="map" resultMap="ctasXCobrarResultado" >
        SELECT distinct
        cta.idCtasXCobrar				as idCtasXCobrar
        ,cta.idEstudiante				as idEstudiante	
        ,cta.idMatricula                                as idMatricula
        ,stu.idGradoHabilitado                          as idGradoHabilitado
        ,gra.nombre                                     as nombreGradoHab
        ,pro.idProgramacion                             as idProgramacion
        ,stu.seccion					as seccionEst
        ,cta.uniNeg					as uniNeg
        ,uni.nombreUniNeg				as nombreUniNeg
        ,cta.idConcepto					as idConcepto
        <!--,con.nombre					as nombreConcepto-->
        ,(case
        when cta.idconcepto like '100%' then UPPER(tc.nombre ) 
        when cta.idconcepto like '101%' then UPPER('AVISO DE VENCIMIENTO DEL MES DE'+' '+DATENAME(MONTH, (cta.fechavenc)))
        end) as nombreConcepto
        ,isnull(con.flgPrecio,1)			as flgPrecio
        ,cta.idDocIngreso				as idDocIngreso
        ,cta.fechaPago					as fechaPago
        ,cta.cr						as cr
        ,cen.cr						as cr2
        ,cen.nombre					as nombreCr
        ,cta.cuentad					as cuentaD
        ,plad.nombre					as nombreCuentaD
        ,cta.cuentah					as cuentaH
        ,plah.nombre					as nombreCuentaH
        ,CONVERT(varchar, CAST( cta.monto - ISNULL(cta.dsctobeca,0) as money), 1)  as monto
        <!--,concat('S/ ',CONVERT(varchar, CAST( cta.monto - ISNULL(cta.dsctobeca,0)  as money), 1))  as monto-->
        ,cta.montoPagado				as montoPagado	
        ,cta.deuda					as deuda
        ,cta.mora					as mora
        ,cta.tasainteres				as interes
        ,cta.idTipoMoneda				as idTipoMoneda
        ,cod.codigo					as codigoMoneda
        ,cta.fechaVenc					as fechaVenc
        ,cta.fechaPago					as fechaPago
        ,cta.dsctoBeca					as dsctoBeca
        ,cta.idEstudianteBeca				as idEstudianteBeca
        ,est.idtipomotivobeca                           as idTipMotivoBeca
        ,codModBec.codigo				as codigoTipMotivoBeca
        ,est.mesInicio					as mesInicio
        ,est.idBeca					as idBeca
        ,bec.nombre					as nombreBeca
        ,bec.porcentaje					as porcentaje
        ,bec.idtipobeca                                 as idTipBeca
        ,codBec.codigo                                  as codigoBeca
        ,cta.idtipobeca                                 as idTipoBeca	
        ,tipb.codigo                                    as codigoTipoBeca
        ,cta.docRefProvision				as docRefProvision
        ,cta.anio					as anio	 
        ,cta.mes					as mes
        ,cta.idTipoStatusCtaCte                         as idTipoStatusCtaCte
        ,sta.codigo					as codigoStatusCtaCte
        ,cta.idTipoDscto                        	as idTipoDscto
        ,tipd.codigo                    		as codigoTipoDscto
        ,cta.idTipoMotivoDscto                  	as idTipoMotivoDscto
        ,tipm.codigo                            	as codigoTipoMotivoDscto
        ,isnull(cta.dscto,0.0)				as dsctoM
        ,cta.idProcesoEnvio                     	as idProcesoEnvio
        ,proe.monto					as montoEnvio
        ,cta.idProcesoRecup                     	as idProcesoRecup
        ,recu.monto					as montoRecup
        ,tipLugar.idCodigo                              as idTipoLugarPago
        ,tipLugar.codigo                                as codTipoLugarPago
        ,cta.creaPor					as creaPor
        ,cta.creaFecha					as creaFecha
        ,cta.creaDscto				as creaDscto
        ,cta.dsctoFecha				as dsctoFecha
        ,cta.obs                                as obs
        ,tc.nombre                             as tipoConcepto
        ,(case when cta.iddocingreso is not null then '/resources/images/icons/agregar.png' 
        else '/resources/images/icons/agregarrojo.png' end) as alerta
        ,stu.codigo                                     as codigo
        ,doc.discente                                  as nombreDiscente
        ,convert(varchar,cta.fechaPago,105)            as fechaPagoVista
        ,cta.flgEnvio                                  as estadoConcilia
        ,(case 
        when cta.iddocingreso is not null  and cta.fechapago is not null then 'true' 
        when cta.iddocingreso is not null  and cta.fechapago is null  and cta.idtipostatusctacte in (19401) then 'false' 
        when cta.iddocingreso is null  and cta.fechapago is null THEN (case when cta.unineg='CHAMPS' THEN 'true' ELSE 'false' END)  
        else 'true' end )  as disabled
        ,(case when isnull(cta.dscto,0)>0 then CAST((ROUND((((cta.dscto/cta.mora)*100)), 0)) AS decimal(8,2)) else 0 end) as porcentajeDscto
        ,pe.nombre
        ,pe.apepat
        ,pe.apemat
        <!--
        ,(SELECT [dbo].[CantidadConLetra] ((cta.monto-isnull(cta.dsctoBeca,0)))) as montoPalabras
        ,(SELECT 
        concat('Del ',DATENAME(day, (select fecini from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)),' al ',
        DATENAME(day, (select fecfin from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)),' ',
        DATENAME(MONTH,(select fecfin from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)))) as fechaPalabras
        -->
        ,concat((SELECT [dbo].[CantidadConLetra] ((cta.monto-isnull(cta.dsctoBeca,0)))),' SOLES') as montoPalabras
        ,(case
        when cta.idconcepto like '100%' then 
        (SELECT 
        concat('Del ',
        DATENAME(day, (select fecini from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)),' de ',
        DATENAME(MONTH, (select fecini from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)),' al ',
        DATENAME(day, (select fecfin from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)),' de ',
        DATENAME(MONTH,(select fecfin from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802))))
        when cta.idconcepto like '101%' then 
        (SELECT 
        concat('Plazo hasta el ',
        DATENAME(day, (cta.fechavenc)),' de ',
        DATENAME(MONTH, (cta.fechavenc))))
        end) as fechaPalabras
        
        ,(select upper(isnull(en.nombre,'')) from mt_cuentabanco ct
        inner join MO_Entidad en on ct.rucbanco = en.ruc and ct.unineg = en.unineg
        where ct.unineg = cta.unineg and ct.flgrecaudabanco = 1) as nomBanco
        ,(case
        when stu.idgradohabilitado = 1 then CONCAT('P','1',mat.seccion)
        when stu.idgradohabilitado = 2 then CONCAT('P','2',mat.seccion)
        when stu.idgradohabilitado = 3 then CONCAT('P','3',mat.seccion)
        when stu.idgradohabilitado = 4 then CONCAT('P','4',mat.seccion)
        when stu.idgradohabilitado = 5 then CONCAT('P','5',mat.seccion)
        when stu.idgradohabilitado = 6 then CONCAT('P','6',mat.seccion)

        when stu.idgradohabilitado = 7 then CONCAT('S','1',mat.seccion)
        when stu.idgradohabilitado = 8 then CONCAT('S','2',mat.seccion)
        when stu.idgradohabilitado = 9 then CONCAT('S','3',mat.seccion)
        when stu.idgradohabilitado = 10 then CONCAT('S','4',mat.seccion)
        when stu.idgradohabilitado = 11 then CONCAT('S','5',mat.seccion)

        when stu.idgradohabilitado = 23 then CONCAT('I','3',mat.seccion)
        when stu.idgradohabilitado = 24 then CONCAT('I','4',mat.seccion)
        when stu.idgradohabilitado = 25 then CONCAT('I','5',mat.seccion)
        end) as grado
        ,'Se recuerda que el pago de ' + (case
        when cta.idconcepto like '100%' then replace(UPPER(tc.nombre),' ','') 
        when cta.idconcepto like '101%' then UPPER('PENSION DEL MES DE'+' '+DATENAME(MONTH, (cta.fechavenc)))
        end) + (case
        when cta.unineg = 'SANJOC' then ' se realiza en el BANCO INTERBANK'
        when cta.unineg = 'BARINA' then ' se realiza en el BANCO INTERBANK'
        when cta.unineg = 'CHAMPS' then ' se realiza en el BANCO SCOTIABANK'
        when cta.unineg = 'SANLUI' then ' se realiza en el BANCO DE CREDITO DEL PERÚ'
        end) + ' no se aceptará dicho pago en la Tesorería del Colegio.' as referenciaCuenta
        <if test="cuentasPorCobrarBean.tipoRecep == 1" >
            <!-- RESP. PAGO -->
            ,(select p.correo from MX_Estudiante e
            inner join MX_Persona p on e.idresppago = p.idpersona and e.unineg = p.unineg
            where e.idestudiante = cta.idestudiante and p.unineg = cta.unineg) as correoRec
        </if>
        <if test="cuentasPorCobrarBean.tipoRecep == 2" >
            <!-- PADRE -->
            ,(select p.correo from MX_Estudiante e
            inner join MX_Familia f on e.idfamilia = f.idfamilia and e.unineg = f.unineg
            inner join MX_Persona p on f.idpadre = p.idpersona and f.unineg = p.unineg
            where e.idestudiante = cta.idestudiante and p.unineg = cta.unineg) as correoRec
        </if>
        <if test="cuentasPorCobrarBean.tipoRecep == 3" >
            <!-- MADRE -->
            ,(select p.correo from MX_Estudiante e
            inner join MX_Familia f on e.idfamilia = f.idfamilia and e.unineg = f.unineg
            inner join MX_Persona p on f.idmadre = p.idpersona and f.unineg = p.unineg
            where e.idestudiante = cta.idestudiante and p.unineg = cta.unineg) as correoRec
        </if>
        FROM MT_CtasxCobrar cta
        INNER JOIN MX_Estudiante stu on stu.idestudiante = cta.idestudiante and stu.unineg=cta.unineg
        INNER JOIN MX_Matricula mat on cta.idestudiante = mat.idestudiante and stu.unineg=mat.unineg and mat.anio=cta.anio and mat.idmatricula=cta.idmatricula
        INNER JOIN MX_GradoAcademico gra on gra.idGradoAcademico = stu.idGradoHabilitado
        LEFT JOIN MX_Programacion pro on pro.idProgramacion = mat.idProgramacion and stu.unineg=pro.unineg and pro.anio=cta.anio
        INNER JOIN MO_UnidadNegocio uni on uni.unineg = cta.unineg
        INNER JOIN MT_Concepto con ON cta.idconcepto = con.idconcepto
        INNER JOIN MT_TipoConcepto tc on tc.idTipoConcepto=con.idtipoconcepto 
        LEFT JOIN MT_DocIngreso doc ON cta.iddocingreso = doc.iddocingreso and stu.unineg=doc.unineg and doc.anio=cta.anio
        LEFT JOIN MO_Codigo tipLugar ON doc.idTipoLugarPago = tipLugar.idcodigo    
        LEFT JOIN MT_CentroResponsabilidad cen ON cta.cr = cen.cr
        LEFT JOIN MT_PlanContable plad ON cta.cuentad = plad.cuenta     
        LEFT JOIN MT_PlanContable plah ON cta.cuentad = plah.cuenta    
        LEFT JOIN MO_Codigo cod ON cta.idtipomoneda = cod.idcodigo 
        LEFT JOIN MX_EstudianteBeca est ON est.idestudiantebeca = cta.idestudiantebeca and est.unineg=cta.unineg and est.anio=cta.anio
        LEFT JOIN MT_Beca bec ON bec.idbeca = est.idbeca
        LEFT JOIN MO_Codigo tipb ON cta.idTipoBeca = tipb.idcodigo    
        LEFT JOIN MO_Codigo sta ON cta.idtipostatusctacte = sta.idcodigo 
        LEFT JOIN MO_Codigo tipd ON cta.idTipoDscto = tipd.idcodigo     
        LEFT JOIN MO_Codigo tipm ON cta.idtipostatusctacte = tipm.idcodigo 
        LEFT JOIN MT_ProcesoEnvio proe ON cta.idprocesoenvio = proe.idprocesoenvio
        LEFT JOIN MT_ProcesoRecup recu ON cta.idprocesoenvio = recu.idprocesorecup
        LEFT JOIN MO_Codigo codBec ON bec.idtipobeca = codBec.idcodigo    
        LEFT JOIN MO_Codigo codModBec ON est.idTipoMotivoBeca = codModBec.idcodigo
        INNER JOIN mx_persona pe on stu.idestudiante = pe.idpersona and stu.unineg = pe.unineg
        where cta.unineg = #{cuentasPorCobrarBean.unidadNegocioBean.uniNeg} 
        and cta.anio = #{cuentasPorCobrarBean.anio}
        and cta.idtipostatusctacte = #{cuentasPorCobrarBean.idTipoStatusCtaCte.idCodigo}
        and cta.idestudiante = #{cuentasPorCobrarBean.estudianteBean.idEstudiante}
        and cta.mes in 
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>    
    <select id="obtenerCuentaMensajeCole" parameterType="map" resultMap="ctasXCobrarResultado" >
        SELECT distinct
        cta.idCtasXCobrar				as idCtasXCobrar
        ,cta.idEstudiante				as idEstudiante	
        ,cta.idMatricula                                as idMatricula
        ,stu.idGradoHabilitado                          as idGradoHabilitado
        ,gra.nombre                                     as nombreGradoHab
        ,pro.idProgramacion                             as idProgramacion
        ,stu.seccion					as seccionEst
        ,cta.uniNeg					as uniNeg
        ,uni.nombreUniNeg				as nombreUniNeg
        ,cta.idConcepto					as idConcepto
        <!--,con.nombre					as nombreConcepto-->
        ,(case
        when cta.idconcepto like '100%' then UPPER(tc.nombre ) 
        when cta.idconcepto like '101%' then UPPER('AVISO DE VENCIMIENTO DEL MES DE'+' '+DATENAME(MONTH, (cta.fechavenc)))
        end) as nombreConcepto
        ,isnull(con.flgPrecio,1)			as flgPrecio
        ,cta.idDocIngreso				as idDocIngreso
        ,cta.fechaPago					as fechaPago
        ,cta.cr						as cr
        ,cen.cr						as cr2
        ,cen.nombre					as nombreCr
        ,cta.cuentad					as cuentaD
        ,plad.nombre					as nombreCuentaD
        ,cta.cuentah					as cuentaH
        ,plah.nombre					as nombreCuentaH
        ,CONVERT(varchar, CAST( cta.monto - ISNULL(cta.dsctobeca,0) as money), 1)  as monto
        <!--,concat('S/ ',CONVERT(varchar, CAST( cta.monto - ISNULL(cta.dsctobeca,0)  as money), 1))  as monto-->
        ,cta.montoPagado				as montoPagado	
        ,cta.deuda					as deuda
        ,cta.mora					as mora
        ,cta.tasainteres				as interes
        ,cta.idTipoMoneda				as idTipoMoneda
        ,cod.codigo					as codigoMoneda
        ,cta.fechaVenc					as fechaVenc
        ,cta.fechaPago					as fechaPago
        ,cta.dsctoBeca					as dsctoBeca
        ,cta.idEstudianteBeca				as idEstudianteBeca
        ,est.idtipomotivobeca                           as idTipMotivoBeca
        ,codModBec.codigo				as codigoTipMotivoBeca
        ,est.mesInicio					as mesInicio
        ,est.idBeca					as idBeca
        ,bec.nombre					as nombreBeca
        ,bec.porcentaje					as porcentaje
        ,bec.idtipobeca                                 as idTipBeca
        ,codBec.codigo                                  as codigoBeca
        ,cta.idtipobeca                                 as idTipoBeca	
        ,tipb.codigo                                    as codigoTipoBeca
        ,cta.docRefProvision				as docRefProvision
        ,cta.anio					as anio	 
        ,cta.mes					as mes
        ,cta.idTipoStatusCtaCte                         as idTipoStatusCtaCte
        ,sta.codigo					as codigoStatusCtaCte
        ,cta.idTipoDscto                        	as idTipoDscto
        ,tipd.codigo                    		as codigoTipoDscto
        ,cta.idTipoMotivoDscto                  	as idTipoMotivoDscto
        ,tipm.codigo                            	as codigoTipoMotivoDscto
        ,isnull(cta.dscto,0.0)				as dsctoM
        ,cta.idProcesoEnvio                     	as idProcesoEnvio
        ,proe.monto					as montoEnvio
        ,cta.idProcesoRecup                     	as idProcesoRecup
        ,recu.monto					as montoRecup
        ,tipLugar.idCodigo                              as idTipoLugarPago
        ,tipLugar.codigo                                as codTipoLugarPago
        ,cta.creaPor					as creaPor
        ,cta.creaFecha					as creaFecha
        ,cta.creaDscto				as creaDscto
        ,cta.dsctoFecha				as dsctoFecha
        ,cta.obs                                as obs
        ,tc.nombre                             as tipoConcepto
        ,(case when cta.iddocingreso is not null then '/resources/images/icons/agregar.png' 
        else '/resources/images/icons/agregarrojo.png' end) as alerta
        ,stu.codigo                                     as codigo
        ,doc.discente                                  as nombreDiscente
        ,convert(varchar,cta.fechaPago,105)            as fechaPagoVista
        ,cta.flgEnvio                                  as estadoConcilia
        ,(case 
        when cta.iddocingreso is not null  and cta.fechapago is not null then 'true' 
        when cta.iddocingreso is not null  and cta.fechapago is null  and cta.idtipostatusctacte in (19401) then 'false' 
        when cta.iddocingreso is null  and cta.fechapago is null THEN (case when cta.unineg='CHAMPS' THEN 'true' ELSE 'false' END)  
        else 'true' end )  as disabled
        ,(case when isnull(cta.dscto,0)>0 then CAST((ROUND((((cta.dscto/cta.mora)*100)), 0)) AS decimal(8,2)) else 0 end) as porcentajeDscto
        ,pe.nombre
        ,pe.apepat
        ,pe.apemat
        <!--
        ,(SELECT [dbo].[CantidadConLetra] ((cta.monto-isnull(cta.dsctoBeca,0)))) as montoPalabras
        ,(SELECT 
        concat('Del ',DATENAME(day, (select fecini from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)),' al ',
        DATENAME(day, (select fecfin from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)),' ',
        DATENAME(MONTH,(select fecfin from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)))) as fechaPalabras
        -->
        ,concat((SELECT [dbo].[CantidadConLetra] ((cta.monto-isnull(cta.dsctoBeca,0)))),' SOLES') as montoPalabras
        ,(case
        when cta.idconcepto like '100%' then 
        (SELECT 
        concat('Del ',
        DATENAME(day, (select fecini from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)),' de ',
        DATENAME(MONTH, (select fecini from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)),' al ',
        DATENAME(day, (select fecfin from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802)),' de ',
        DATENAME(MONTH,(select fecfin from Mx_Proceso where unineg = cta.unineg and anio = cta.anio and idtipoproceso = 12802))))
        when cta.idconcepto like '101%' then 
        (SELECT 
        concat('Plazo hasta el ',
        DATENAME(day, (cta.fechavenc)),' de ',
        DATENAME(MONTH, (cta.fechavenc))))
        end) as fechaPalabras
        
        ,(select upper(isnull(en.nombre,'')) from mt_cuentabanco ct
        inner join MO_Entidad en on ct.rucbanco = en.ruc and ct.unineg = en.unineg
        where ct.unineg = cta.unineg and ct.flgrecaudabanco = 1) as nomBanco
        ,(case
        when stu.idgradohabilitado = 1 then CONCAT('P','1',mat.seccion)
        when stu.idgradohabilitado = 2 then CONCAT('P','2',mat.seccion)
        when stu.idgradohabilitado = 3 then CONCAT('P','3',mat.seccion)
        when stu.idgradohabilitado = 4 then CONCAT('P','4',mat.seccion)
        when stu.idgradohabilitado = 5 then CONCAT('P','5',mat.seccion)
        when stu.idgradohabilitado = 6 then CONCAT('P','6',mat.seccion)

        when stu.idgradohabilitado = 7 then CONCAT('S','1',mat.seccion)
        when stu.idgradohabilitado = 8 then CONCAT('S','2',mat.seccion)
        when stu.idgradohabilitado = 9 then CONCAT('S','3',mat.seccion)
        when stu.idgradohabilitado = 10 then CONCAT('S','4',mat.seccion)
        when stu.idgradohabilitado = 11 then CONCAT('S','5',mat.seccion)

        when stu.idgradohabilitado = 23 then CONCAT('I','3',mat.seccion)
        when stu.idgradohabilitado = 24 then CONCAT('I','4',mat.seccion)
        when stu.idgradohabilitado = 25 then CONCAT('I','5',mat.seccion)
        end) as grado
        ,'Se recuerda que el pago de ' + (case
        when cta.idconcepto like '100%' then replace(UPPER(tc.nombre),' ','') 
        when cta.idconcepto like '101%' then UPPER('PENSIONES')
        end) + (case
        when cta.unineg = 'SANJOC' then ' se realiza en el BANCO INTERBANK'
        when cta.unineg = 'BARINA' then ' se realiza en el BANCO INTERBANK'
        when cta.unineg = 'CHAMPS' then ' se realiza en el BANCO SCOTIABANK'
        when cta.unineg = 'SANLUI' then ' se realiza en el BANCO DE CREDITO DEL PERÚ'
        end) + 
        (case
        when cta.idconcepto like '100%' then (' no se aceptará dicho pago en la Tesorería del Colegio.') 
        else '.'
        end)
        as referenciaCuenta
        <if test="cuentasPorCobrarBean.tipoRecep == 1" >
            <!-- RESP. PAGO -->
            ,(select p.correo from MX_Estudiante e
            inner join MX_Persona p on e.idresppago = p.idpersona and e.unineg = p.unineg
            where e.idestudiante = cta.idestudiante and p.unineg = cta.unineg) as correoRec
        </if>
        <if test="cuentasPorCobrarBean.tipoRecep == 2" >
            <!-- PADRE -->
            ,(select p.correo from MX_Estudiante e
            inner join MX_Familia f on e.idfamilia = f.idfamilia and e.unineg = f.unineg
            inner join MX_Persona p on f.idpadre = p.idpersona and f.unineg = p.unineg
            where e.idestudiante = cta.idestudiante and p.unineg = cta.unineg) as correoRec
        </if>
        <if test="cuentasPorCobrarBean.tipoRecep == 3" >
            <!-- MADRE -->
            ,(select p.correo from MX_Estudiante e
            inner join MX_Familia f on e.idfamilia = f.idfamilia and e.unineg = f.unineg
            inner join MX_Persona p on f.idmadre = p.idpersona and f.unineg = p.unineg
            where e.idestudiante = cta.idestudiante and p.unineg = cta.unineg) as correoRec
        </if>
        FROM MT_CtasxCobrar cta
        INNER JOIN MX_Estudiante stu on stu.idestudiante = cta.idestudiante and stu.unineg=cta.unineg
        INNER JOIN MX_Matricula mat on cta.idestudiante = mat.idestudiante and stu.unineg=mat.unineg and mat.anio=cta.anio and mat.idmatricula=cta.idmatricula
        INNER JOIN MX_GradoAcademico gra on gra.idGradoAcademico = stu.idGradoHabilitado
        LEFT JOIN MX_Programacion pro on pro.idProgramacion = mat.idProgramacion and stu.unineg=pro.unineg and pro.anio=cta.anio
        INNER JOIN MO_UnidadNegocio uni on uni.unineg = cta.unineg
        INNER JOIN MT_Concepto con ON cta.idconcepto = con.idconcepto
        INNER JOIN MT_TipoConcepto tc on tc.idTipoConcepto=con.idtipoconcepto 
        LEFT JOIN MT_DocIngreso doc ON cta.iddocingreso = doc.iddocingreso and stu.unineg=doc.unineg and doc.anio=cta.anio
        LEFT JOIN MO_Codigo tipLugar ON doc.idTipoLugarPago = tipLugar.idcodigo    
        LEFT JOIN MT_CentroResponsabilidad cen ON cta.cr = cen.cr
        LEFT JOIN MT_PlanContable plad ON cta.cuentad = plad.cuenta     
        LEFT JOIN MT_PlanContable plah ON cta.cuentad = plah.cuenta    
        LEFT JOIN MO_Codigo cod ON cta.idtipomoneda = cod.idcodigo 
        LEFT JOIN MX_EstudianteBeca est ON est.idestudiantebeca = cta.idestudiantebeca and est.unineg=cta.unineg and est.anio=cta.anio
        LEFT JOIN MT_Beca bec ON bec.idbeca = est.idbeca
        LEFT JOIN MO_Codigo tipb ON cta.idTipoBeca = tipb.idcodigo    
        LEFT JOIN MO_Codigo sta ON cta.idtipostatusctacte = sta.idcodigo 
        LEFT JOIN MO_Codigo tipd ON cta.idTipoDscto = tipd.idcodigo     
        LEFT JOIN MO_Codigo tipm ON cta.idtipostatusctacte = tipm.idcodigo 
        LEFT JOIN MT_ProcesoEnvio proe ON cta.idprocesoenvio = proe.idprocesoenvio
        LEFT JOIN MT_ProcesoRecup recu ON cta.idprocesoenvio = recu.idprocesorecup
        LEFT JOIN MO_Codigo codBec ON bec.idtipobeca = codBec.idcodigo    
        LEFT JOIN MO_Codigo codModBec ON est.idTipoMotivoBeca = codModBec.idcodigo
        INNER JOIN mx_persona pe on stu.idestudiante = pe.idpersona and stu.unineg = pe.unineg
        where cta.unineg = #{cuentasPorCobrarBean.unidadNegocioBean.uniNeg} 
        and cta.anio = #{cuentasPorCobrarBean.anio}
        and cta.idtipostatusctacte = #{cuentasPorCobrarBean.idTipoStatusCtaCte.idCodigo}
        and cta.idestudiante = #{cuentasPorCobrarBean.estudianteBean.idEstudiante}
        and mat.idestudiante in (select idestudiante from BASA2017.dbo.AVISO)
        and cta.mes in 
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>    
    
    <update id="modificarCuentaMovimiento" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        update MT_CtasxCobrar 
        set 
        montopagado = #{montoPagado},
        fechapago = #{fechaPago}, 
        modipor = #{modiPor}, 
        idtipostatusctacte =  #{idTipoStatusCtaCte.idCodigo}
        where idctasxcobrar = #{idCtasXCobrar} and unineg = #{unidadNegocioBean.uniNeg}
    </update>
    
    <!-- REPORTE DE CONCILIADOS -->
    <select id="obtenerReporteConcilia" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ConciliacionRepBean" >
        declare  @fechaInicio date, @fechaFin date,@uniNeg varchar(6), @ctsXCobrar int
        set @fechaInicio =#{fechaInicio}
        set @fechaFin =#{fechaFin}
        set @uniNeg =#{uniNeg}
        set @ctsXCobrar =#{ctsXCobrar}
        
        ;with lista as(
        select 
        UPPER(uni.nombreUniNeg) as nombreUniNeg,
        en.ruc as ruc,
        'REPORTE PAGOS DE PENSIONES' as titulo,
        cta.idctasxcobrar,cta.unineg,e.codigo,
        e.idestudiante,
        CONCAT(p.apepat,' ',p.apemat,', ',p.nombre) as nombre,
        cta.anio,(case
        when cta.mes = 2 then 'MATRICULA'
        when cta.mes = 3 then 'MARZO'
        when cta.mes = 4 then 'ABRIL'
        when cta.mes = 5 then 'MAYO'
        when cta.mes = 6 then 'JUNIO'
        when cta.mes = 7 then 'JULIO'
        when cta.mes = 8 then 'AGOSTO'
        when cta.mes = 9 then 'SETIEMBRE'
        when cta.mes = 10 then 'OCTUBRE'
        when cta.mes = 11 then 'NOVIEMBRE'
        when cta.mes = 12 then 'DICIEMBRE'
        end) as mes,
        CONVERT(varchar,cta.fechapago,105) as fechapago,
        ISNULL(cta.monto,0) as monto,ISNULL(cta.mora,0) as mora,ISNULL(cta.montopagado,0) as montopagado,
        concat((case when n.nombre='Inicial' then'I' WHEN n.nombre='Primaria' then 'P'
        when n.nombre='Secundaria' then 'S' end),''+
        (case when g.CODIGO='PRIMERO' THEN 1
        when g.CODIGO='SEGUNDO' THEN 2
        when g.CODIGO='TERCERO' THEN 3
        when g.CODIGO='CUARTO' THEN 4
        when g.CODIGO='QUINTO' THEN 5
        when g.CODIGO='SEXTO' THEN 6
        when g.CODIGO='SETIMO' THEN 1
        when g.CODIGO='OCTAVO' THEN 2
        when g.CODIGO='NOVENO' THEN 3
        when g.CODIGO='DECIMO' THEN 4
        when g.CODIGO='UNDECIMO' THEN 5
        when g.CODIGO='DECIMO-BACH' THEN 4
        when g.CODIGO='UNDECIMO-BACH' THEN 5
        when g.CODIGO='PRE-INICIAL(3)' THEN 3
        when g.CODIGO='PRE-INICIAL(4)' THEN 4
        when g.CODIGO='INICIAL(5)' THEN 5 END),''+e.seccion) as codigoGrado,doc.nrodoc as nroDoc
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=2   and  CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]>@fechaFin ) as matricula
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=3   and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as marzo
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=4   and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>@fechaFin ) as abril
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=5  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>@fechaFin ) as mayo
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=6  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]> @fechaFin ) as junio
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=7  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as julio
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=8  and CONVERT(date,cta.fechapago)<![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]> @fechaFin ) as agosto
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=9  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>@fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as setiembre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=10  and CONVERT(date,cta.fechapago)<![CDATA[ >=  ]]> @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as octubre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=11  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as noviembre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=12  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>@fechaInicio and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]>@fechaFin ) as diciembre
        ,LUGAR.codigo AS lugarPago
        from mt_ctasxcobrar cta
        inner join mx_matricula m on cta.idmatricula = m.idmatricula and cta.unineg = m.unineg and cta.anio = m.anio
        inner join MX_Estudiante e on m.idestudiante = e.idestudiante and m.unineg = e.unineg
        inner join MX_Persona p on e.idestudiante = p.idpersona and e.unineg = p.unineg
        inner join MO_UnidadNegocio uni on cta.unineg = uni.unineg 
        inner join MO_Entidad en on uni.RUC = en.ruc and uni.unineg = en.unineg
        inner join MX_GradoAcademico g on g.idgradoacademico=e.idgradohabilitado
        inner join MX_NivelAcademico n on n.idnivelacademico=g.idnivelacademico
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso
        INNER JOIN MO_Codigo LUGAR ON DOC.idtipolugarpago=LUGAR.idcodigo
        where cta.unineg = @uniNeg and cta.idctasxcobrar in 
        (@ctsXCobrar))
        select l.nombreUniNeg,l.unineg,l.ruc,l.titulo,l.codigo,l.idestudiante,l.nombre,l.codigoGrado,l.nroDoc,l.matricula,l.marzo,
        l.abril,l.mayo,l.junio,l.julio,l.agosto,l.setiembre,l.octubre,l.noviembre,l.diciembre,l.lugarPago,
        CONVERT(varchar,l.anio) as anio,l.mes,l.fechapago,
        CONVERT(varchar, CAST(isnull(ISNULL(l.monto,0),0) AS money), 1) as monto,
        CONVERT(varchar, CAST(isnull(ISNULL(l.mora,0),0) AS money), 1) as mora,
        CONVERT(varchar, CAST(isnull(ISNULL(l.montopagado,0),0) AS money), 1) as montopagado,
        CONVERT(varchar, CAST((select isnull(sum(ISNULL(monto,0)),0) from lista) AS money), 1) as montoTotal,
        CONVERT(varchar, CAST((select ISNULL(sum(ISNULL(mora,0)),0) from lista) AS money), 1) as montoMora,
        CONVERT(varchar, CAST((select ISNULL(sum(ISNULL(montopagado,0)),0) from lista) AS money), 1) as pagadoTotal
        from lista l 
        order by l.codigoGrado asc,  l.nombre 
    </select>
    <select id="obtenerReporteConcilia2" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ConciliacionRepBean" >
        declare  @fechaInicio date, @fechaFin date,@uniNeg varchar(6), @ctsXCobrar int
        set @fechaInicio =#{fechaInicio}
        set @fechaFin =#{fechaFin}
        set @uniNeg =#{uniNeg}
        set @ctsXCobrar =#{ctsXCobrar}
        ;with lista as(
        select 
        UPPER(uni.nombreUniNeg) as nombreUniNeg,
        en.ruc as ruc,
        'REPORTE PAGOS DE PENSIONES' as titulo,
        cta.idctasxcobrar,cta.unineg,e.codigo,
        e.idestudiante,
        CONCAT(p.apepat,' ',p.apemat,', ',p.nombre) as nombre,
        cta.anio,(case
        when cta.mes = 2 then 'MATRICULA'
        when cta.mes = 3 then 'MARZO'
        when cta.mes = 4 then 'ABRIL'
        when cta.mes = 5 then 'MAYO'
        when cta.mes = 6 then 'JUNIO'
        when cta.mes = 7 then 'JULIO'
        when cta.mes = 8 then 'AGOSTO'
        when cta.mes = 9 then 'SETIEMBRE'
        when cta.mes = 10 then 'OCTUBRE'
        when cta.mes = 11 then 'NOVIEMBRE'
        when cta.mes = 12 then 'DICIEMBRE'
        end) as mes,
        CONVERT(varchar,cta.fechapago,105) as fechapago,
        ISNULL(cta.monto,0) as monto,ISNULL(cta.mora,0) as mora,ISNULL(cta.montopagado,0) as montopagado,
        concat((case when n.nombre='Inicial' then'I' WHEN n.nombre='Primaria' then 'P'
        when n.nombre='Secundaria' then 'S' end),''+
        (case when g.CODIGO='PRIMERO' THEN 1
        when g.CODIGO='SEGUNDO' THEN 2
        when g.CODIGO='TERCERO' THEN 3
        when g.CODIGO='CUARTO' THEN 4
        when g.CODIGO='QUINTO' THEN 5
        when g.CODIGO='SEXTO' THEN 6
        when g.CODIGO='SETIMO' THEN 1
        when g.CODIGO='OCTAVO' THEN 2
        when g.CODIGO='NOVENO' THEN 3
        when g.CODIGO='DECIMO' THEN 4
        when g.CODIGO='UNDECIMO' THEN 5
        when g.CODIGO='DECIMO-BACH' THEN 4
        when g.CODIGO='UNDECIMO-BACH' THEN 5
        when g.CODIGO='PRE-INICIAL(3)' THEN 3
        when g.CODIGO='PRE-INICIAL(4)' THEN 4
        when g.CODIGO='INICIAL(5)' THEN 5 END),''+e.seccion) as codigoGrado,doc.nrodoc as nroDoc
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=2   and  CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]>@fechaFin ) as matricula
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=3   and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as marzo
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=4   and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>@fechaFin ) as abril
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=5  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>@fechaFin ) as mayo
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=6  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]> @fechaFin ) as junio
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=7  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as julio
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=8  and CONVERT(date,cta.fechapago)<![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]> @fechaFin ) as agosto
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=9  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>@fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as setiembre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=10  and CONVERT(date,cta.fechapago)<![CDATA[ >=  ]]> @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as octubre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=11  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as noviembre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=12  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>@fechaInicio and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]>@fechaFin ) as diciembre
        ,LUGAR.codigo AS lugarPago
        from mt_ctasxcobrar cta
        inner join mx_matricula m on cta.idmatricula = m.idmatricula and cta.unineg = m.unineg and cta.anio = m.anio
        inner join MX_Estudiante e on m.idestudiante = e.idestudiante and m.unineg = e.unineg
        inner join MX_Persona p on e.idestudiante = p.idpersona and e.unineg = p.unineg
        inner join MO_UnidadNegocio uni on cta.unineg = uni.unineg 
        inner join MO_Entidad en on uni.RUC = en.ruc and uni.unineg = en.unineg
        inner join MX_GradoAcademico g on g.idgradoacademico=e.idgradohabilitado
        inner join MX_NivelAcademico n on n.idnivelacademico=g.idnivelacademico
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso
        INNER JOIN MO_Codigo LUGAR ON DOC.idtipolugarpago=LUGAR.idcodigo
        where cta.unineg = @uniNeg and cta.idctasxcobrar in 
        (@ctsXCobrar))
        select l.nombreUniNeg,l.unineg,l.ruc,l.titulo,l.codigo,l.idestudiante,l.nombre,l.codigoGrado,l.nroDoc,l.matricula,l.marzo,
        l.abril,l.mayo,l.junio,l.julio,l.agosto,l.setiembre,l.octubre,l.noviembre,l.diciembre,l.lugarPago,
        CONVERT(varchar,l.anio) as anio,l.mes,l.fechapago,
        CONVERT(varchar, CAST(isnull(ISNULL(l.monto,0),0) AS money), 1) as monto,
        CONVERT(varchar, CAST(isnull(ISNULL(l.mora,0),0) AS money), 1) as mora,
        CONVERT(varchar, CAST(isnull(ISNULL(l.montopagado,0),0) AS money), 1) as montopagado,
        CONVERT(varchar, CAST((select isnull(sum(ISNULL(monto,0)),0) from lista) AS money), 1) as montoTotal,
        CONVERT(varchar, CAST((select ISNULL(sum(ISNULL(mora,0)),0) from lista) AS money), 1) as montoMora,
        CONVERT(varchar, CAST((select ISNULL(sum(ISNULL(montopagado,0)),0) from lista) AS money), 1) as pagadoTotal
        from lista l 
        order by l.fechapago  
    </select>
    <select id="obtenerReporteConcilia3" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ConciliacionRepBean" >
        declare  @fechaInicio date, @fechaFin date,@uniNeg varchar(6), @ctsXCobrar int
        set @fechaInicio =#{fechaInicio}
        set @fechaFin =#{fechaFin}
        set @uniNeg =#{uniNeg}
        set @ctsXCobrar =#{ctsXCobrar}
        ;with lista as(
        select 
        UPPER(uni.nombreUniNeg) as nombreUniNeg,
        en.ruc as ruc,
        'REPORTE PAGOS DE PENSIONES' as titulo,
        cta.idctasxcobrar,cta.unineg,e.codigo,
        e.idestudiante,
        CONCAT(p.apepat,' ',p.apemat,', ',p.nombre) as nombre,
        cta.anio,(case
        when cta.mes = 2 then 'MATRICULA'
        when cta.mes = 3 then 'MARZO'
        when cta.mes = 4 then 'ABRIL'
        when cta.mes = 5 then 'MAYO'
        when cta.mes = 6 then 'JUNIO'
        when cta.mes = 7 then 'JULIO'
        when cta.mes = 8 then 'AGOSTO'
        when cta.mes = 9 then 'SETIEMBRE'
        when cta.mes = 10 then 'OCTUBRE'
        when cta.mes = 11 then 'NOVIEMBRE'
        when cta.mes = 12 then 'DICIEMBRE'
        end) as mes,
        CONVERT(varchar,cta.fechapago,105) as fechapago,
        ISNULL(cta.monto,0) as monto,ISNULL(cta.mora,0) as mora,ISNULL(cta.montopagado,0) as montopagado,
        concat((case when n.nombre='Inicial' then'I' WHEN n.nombre='Primaria' then 'P'
        when n.nombre='Secundaria' then 'S' end),''+
        (case when g.CODIGO='PRIMERO' THEN 1
        when g.CODIGO='SEGUNDO' THEN 2
        when g.CODIGO='TERCERO' THEN 3
        when g.CODIGO='CUARTO' THEN 4
        when g.CODIGO='QUINTO' THEN 5
        when g.CODIGO='SEXTO' THEN 6
        when g.CODIGO='SETIMO' THEN 1
        when g.CODIGO='OCTAVO' THEN 2
        when g.CODIGO='NOVENO' THEN 3
        when g.CODIGO='DECIMO' THEN 4
        when g.CODIGO='UNDECIMO' THEN 5
        when g.CODIGO='DECIMO-BACH' THEN 4
        when g.CODIGO='UNDECIMO-BACH' THEN 5
        when g.CODIGO='PRE-INICIAL(3)' THEN 3
        when g.CODIGO='PRE-INICIAL(4)' THEN 4
        when g.CODIGO='INICIAL(5)' THEN 5 END),''+e.seccion) as codigoGrado,doc.nrodoc as nroDoc
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=2   and  CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]>@fechaFin ) as matricula
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=3   and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as marzo
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=4   and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>@fechaFin ) as abril
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=5  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>@fechaFin ) as mayo
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=6  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]> @fechaFin ) as junio
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=7  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as julio
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=8  and CONVERT(date,cta.fechapago)<![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]> @fechaFin ) as agosto
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=9  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>@fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as setiembre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=10  and CONVERT(date,cta.fechapago)<![CDATA[ >=  ]]> @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as octubre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=11  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as noviembre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=12  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>@fechaInicio and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]>@fechaFin ) as diciembre
        ,LUGAR.codigo AS lugarPago
        from mt_ctasxcobrar cta
        inner join mx_matricula m on cta.idmatricula = m.idmatricula and cta.unineg = m.unineg and cta.anio = m.anio
        inner join MX_Estudiante e on m.idestudiante = e.idestudiante and m.unineg = e.unineg
        inner join MX_Persona p on e.idestudiante = p.idpersona and e.unineg = p.unineg
        inner join MO_UnidadNegocio uni on cta.unineg = uni.unineg 
        inner join MO_Entidad en on uni.RUC = en.ruc and uni.unineg = en.unineg
        inner join MX_GradoAcademico g on g.idgradoacademico=e.idgradohabilitado
        inner join MX_NivelAcademico n on n.idnivelacademico=g.idnivelacademico
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso
        INNER JOIN MO_Codigo LUGAR ON DOC.idtipolugarpago=LUGAR.idcodigo
        where cta.unineg = @uniNeg and cta.idctasxcobrar in 
        (@ctsXCobrar))
        select l.nombreUniNeg,l.unineg,l.ruc,l.titulo,l.codigo,l.idestudiante,l.nombre,l.codigoGrado,l.nroDoc,l.matricula,l.marzo,
        l.abril,l.mayo,l.junio,l.julio,l.agosto,l.setiembre,l.octubre,l.noviembre,l.diciembre,l.lugarPago,
        CONVERT(varchar,l.anio) as anio,l.mes,l.fechapago,
        CONVERT(varchar, CAST(isnull(ISNULL(l.monto,0),0) AS money), 1) as monto,
        CONVERT(varchar, CAST(isnull(ISNULL(l.mora,0),0) AS money), 1) as mora,
        CONVERT(varchar, CAST(isnull(ISNULL(l.montopagado,0),0) AS money), 1) as montopagado,
        CONVERT(varchar, CAST((select isnull(sum(ISNULL(monto,0)),0) from lista) AS money), 1) as montoTotal,
        CONVERT(varchar, CAST((select ISNULL(sum(ISNULL(mora,0)),0) from lista) AS money), 1) as montoMora,
        CONVERT(varchar, CAST((select ISNULL(sum(ISNULL(montopagado,0)),0) from lista) AS money), 1) as pagadoTotal
        from lista l 
        order by l.fechapago desc 
    </select>
    <select id="obtenerReporteConcilia4" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ConciliacionRepBean" >
        declare  @fechaInicio date, @fechaFin date,@uniNeg varchar(6), @ctsXCobrar int
        set @fechaInicio =#{fechaInicio}
        set @fechaFin =#{fechaFin}
        set @uniNeg =#{uniNeg}
        set @ctsXCobrar =#{ctsXCobrar}
        ;with lista as(
        select 
        UPPER(uni.nombreUniNeg) as nombreUniNeg,
        en.ruc as ruc,
        'REPORTE PAGOS DE PENSIONES' as titulo,
        cta.idctasxcobrar,cta.unineg,e.codigo,
        e.idestudiante,
        CONCAT(p.apepat,' ',p.apemat,', ',p.nombre) as nombre,
        cta.anio,(case
        when cta.mes = 2 then 'MATRICULA'
        when cta.mes = 3 then 'MARZO'
        when cta.mes = 4 then 'ABRIL'
        when cta.mes = 5 then 'MAYO'
        when cta.mes = 6 then 'JUNIO'
        when cta.mes = 7 then 'JULIO'
        when cta.mes = 8 then 'AGOSTO'
        when cta.mes = 9 then 'SETIEMBRE'
        when cta.mes = 10 then 'OCTUBRE'
        when cta.mes = 11 then 'NOVIEMBRE'
        when cta.mes = 12 then 'DICIEMBRE'
        end) as mes,
        CONVERT(varchar,cta.fechapago,105) as fechapago,
        ISNULL(cta.monto,0) as monto,ISNULL(cta.mora,0) as mora,ISNULL(cta.montopagado,0) as montopagado,
        concat((case when n.nombre='Inicial' then'I' WHEN n.nombre='Primaria' then 'P'
        when n.nombre='Secundaria' then 'S' end),''+
        (case when g.CODIGO='PRIMERO' THEN 1
        when g.CODIGO='SEGUNDO' THEN 2
        when g.CODIGO='TERCERO' THEN 3
        when g.CODIGO='CUARTO' THEN 4
        when g.CODIGO='QUINTO' THEN 5
        when g.CODIGO='SEXTO' THEN 6
        when g.CODIGO='SETIMO' THEN 1
        when g.CODIGO='OCTAVO' THEN 2
        when g.CODIGO='NOVENO' THEN 3
        when g.CODIGO='DECIMO' THEN 4
        when g.CODIGO='UNDECIMO' THEN 5
        when g.CODIGO='DECIMO-BACH' THEN 4
        when g.CODIGO='UNDECIMO-BACH' THEN 5
        when g.CODIGO='PRE-INICIAL(3)' THEN 3
        when g.CODIGO='PRE-INICIAL(4)' THEN 4
        when g.CODIGO='INICIAL(5)' THEN 5 END),''+e.seccion) as codigoGrado,doc.nrodoc as nroDoc
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=2   and  CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]>@fechaFin ) as matricula
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=3   and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as marzo
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=4   and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>@fechaFin ) as abril
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=5  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>@fechaFin ) as mayo
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=6  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]> @fechaFin ) as junio
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=7  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as julio
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=8  and CONVERT(date,cta.fechapago)<![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]> @fechaFin ) as agosto
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=9  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>@fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as setiembre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=10  and CONVERT(date,cta.fechapago)<![CDATA[ >=  ]]> @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as octubre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=11  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as noviembre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=12  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>@fechaInicio and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]>@fechaFin ) as diciembre
        ,LUGAR.codigo AS lugarPago
        from mt_ctasxcobrar cta
        inner join mx_matricula m on cta.idmatricula = m.idmatricula and cta.unineg = m.unineg and cta.anio = m.anio
        inner join MX_Estudiante e on m.idestudiante = e.idestudiante and m.unineg = e.unineg
        inner join MX_Persona p on e.idestudiante = p.idpersona and e.unineg = p.unineg
        inner join MO_UnidadNegocio uni on cta.unineg = uni.unineg 
        inner join MO_Entidad en on uni.RUC = en.ruc and uni.unineg = en.unineg
        inner join MX_GradoAcademico g on g.idgradoacademico=e.idgradohabilitado
        inner join MX_NivelAcademico n on n.idnivelacademico=g.idnivelacademico
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso
        INNER JOIN MO_Codigo LUGAR ON DOC.idtipolugarpago=LUGAR.idcodigo
        where cta.unineg = @uniNeg and cta.idctasxcobrar in 
        (@ctsXCobrar))
        select l.nombreUniNeg,l.unineg,l.ruc,l.titulo,l.codigo,l.idestudiante,l.nombre,l.codigoGrado,l.nroDoc,l.matricula,l.marzo,
        l.abril,l.mayo,l.junio,l.julio,l.agosto,l.setiembre,l.octubre,l.noviembre,l.diciembre,l.lugarPago,
        CONVERT(varchar,l.anio) as anio,l.mes,l.fechapago,
        CONVERT(varchar, CAST(isnull(ISNULL(l.monto,0),0) AS money), 1) as monto,
        CONVERT(varchar, CAST(isnull(ISNULL(l.mora,0),0) AS money), 1) as mora,
        CONVERT(varchar, CAST(isnull(ISNULL(l.montopagado,0),0) AS money), 1) as montopagado,
        CONVERT(varchar, CAST((select isnull(sum(ISNULL(monto,0)),0) from lista) AS money), 1) as montoTotal,
        CONVERT(varchar, CAST((select ISNULL(sum(ISNULL(mora,0)),0) from lista) AS money), 1) as montoMora,
        CONVERT(varchar, CAST((select ISNULL(sum(ISNULL(montopagado,0)),0) from lista) AS money), 1) as pagadoTotal
        from lista l 
        order by l.nombre asc,l.codigoGrado
    </select>
    <select id="obtenerReporteConcilia5" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ConciliacionRepBean" >
        declare  @fechaInicio date, @fechaFin date,@uniNeg varchar(6), @ctsXCobrar int
        set @fechaInicio =#{fechaInicio}
        set @fechaFin =#{fechaFin}
        set @uniNeg =#{uniNeg}
        set @ctsXCobrar =#{ctsXCobrar}
        ;with lista as(
        select 
        UPPER(uni.nombreUniNeg) as nombreUniNeg,
        en.ruc as ruc,
        'REPORTE PAGOS DE PENSIONES' as titulo,
        cta.idctasxcobrar,cta.unineg,e.codigo,
        e.idestudiante,
        CONCAT(p.apepat,' ',p.apemat,', ',p.nombre) as nombre,
        cta.anio,(case
        when cta.mes = 2 then 'MATRICULA'
        when cta.mes = 3 then 'MARZO'
        when cta.mes = 4 then 'ABRIL'
        when cta.mes = 5 then 'MAYO'
        when cta.mes = 6 then 'JUNIO'
        when cta.mes = 7 then 'JULIO'
        when cta.mes = 8 then 'AGOSTO'
        when cta.mes = 9 then 'SETIEMBRE'
        when cta.mes = 10 then 'OCTUBRE'
        when cta.mes = 11 then 'NOVIEMBRE'
        when cta.mes = 12 then 'DICIEMBRE'
        end) as mes,
        CONVERT(varchar,cta.fechapago,105) as fechapago,
        ISNULL(cta.monto,0) as monto,ISNULL(cta.mora,0) as mora,ISNULL(cta.montopagado,0) as montopagado,
        concat((case when n.nombre='Inicial' then'I' WHEN n.nombre='Primaria' then 'P'
        when n.nombre='Secundaria' then 'S' end),''+
        (case when g.CODIGO='PRIMERO' THEN 1
        when g.CODIGO='SEGUNDO' THEN 2
        when g.CODIGO='TERCERO' THEN 3
        when g.CODIGO='CUARTO' THEN 4
        when g.CODIGO='QUINTO' THEN 5
        when g.CODIGO='SEXTO' THEN 6
        when g.CODIGO='SETIMO' THEN 1
        when g.CODIGO='OCTAVO' THEN 2
        when g.CODIGO='NOVENO' THEN 3
        when g.CODIGO='DECIMO' THEN 4
        when g.CODIGO='UNDECIMO' THEN 5
        when g.CODIGO='DECIMO-BACH' THEN 4
        when g.CODIGO='UNDECIMO-BACH' THEN 5
        when g.CODIGO='PRE-INICIAL(3)' THEN 3
        when g.CODIGO='PRE-INICIAL(4)' THEN 4
        when g.CODIGO='INICIAL(5)' THEN 5 END),''+e.seccion) as codigoGrado,doc.nrodoc as nroDoc
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=2   and  CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]>@fechaFin ) as matricula
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=3   and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as marzo
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=4   and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>@fechaFin ) as abril
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=5  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]>@fechaFin ) as mayo
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=6  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]> @fechaFin ) as junio
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=7  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>  @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as julio
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=8  and CONVERT(date,cta.fechapago)<![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]> @fechaFin ) as agosto
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=9  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>@fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as setiembre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=10  and CONVERT(date,cta.fechapago)<![CDATA[ >=  ]]> @fechaInicio and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as octubre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=11  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]> @fechaInicio  and CONVERT(date,cta.fechapago) <![CDATA[ <=  ]]> @fechaFin ) as noviembre
        ,(select isnull(sum(monto),0) from mt_ctasxcobrar cta where mes=12  and CONVERT(date,cta.fechapago) <![CDATA[ >=  ]]>@fechaInicio and CONVERT(date,cta.fechapago)<![CDATA[ <=  ]]>@fechaFin ) as diciembre
        ,LUGAR.codigo AS lugarPago 
        from mt_ctasxcobrar cta
        inner join mx_matricula m on cta.idmatricula = m.idmatricula and cta.unineg = m.unineg and cta.anio = m.anio
        inner join MX_Estudiante e on m.idestudiante = e.idestudiante and m.unineg = e.unineg
        inner join MX_Persona p on e.idestudiante = p.idpersona and e.unineg = p.unineg
        inner join MO_UnidadNegocio uni on cta.unineg = uni.unineg 
        inner join MO_Entidad en on uni.RUC = en.ruc and uni.unineg = en.unineg
        inner join MX_GradoAcademico g on g.idgradoacademico=e.idgradohabilitado
        inner join MX_NivelAcademico n on n.idnivelacademico=g.idnivelacademico
        inner join MT_DocIngreso doc on doc.iddocingreso=cta.iddocingreso
        INNER JOIN MO_Codigo LUGAR ON DOC.idtipolugarpago=LUGAR.idcodigo
        where cta.unineg = @uniNeg and cta.idctasxcobrar in 
        (@ctsXCobrar))
        select l.nombreUniNeg,l.unineg,l.ruc,l.titulo,l.codigo,l.idestudiante,l.nombre,l.codigoGrado,l.nroDoc,l.matricula,l.marzo,
        l.abril,l.mayo,l.junio,l.julio,l.agosto,l.setiembre,l.octubre,l.noviembre,l.diciembre,l.lugarPago,
        CONVERT(varchar,l.anio) as anio,l.mes,l.fechapago,
        CONVERT(varchar, CAST(isnull(ISNULL(l.monto,0),0) AS money), 1) as monto,
        CONVERT(varchar, CAST(isnull(ISNULL(l.mora,0),0) AS money), 1) as mora,
        CONVERT(varchar, CAST(isnull(ISNULL(l.montopagado,0),0) AS money), 1) as montopagado,
        CONVERT(varchar, CAST((select isnull(sum(ISNULL(monto,0)),0) from lista) AS money), 1) as montoTotal,
        CONVERT(varchar, CAST((select ISNULL(sum(ISNULL(mora,0)),0) from lista) AS money), 1) as montoMora,
        CONVERT(varchar, CAST((select ISNULL(sum(ISNULL(montopagado,0)),0) from lista) AS money), 1) as pagadoTotal
        from lista l 
        order by l.nroDoc
    </select>
    
    <!-- RPORTE DE CONCILIADOS POR NIVEL -->
    <select id="obtenerReporteConciliaNivel" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" resultType="pe.marista.sigma.bean.reporte.ConciliaNivelRepBean" >
        ;with lista as(
        select uni.RUC,e.nombre,'ESTADÍSTICA DE PAGOS POR NIVEL ACADÉMICO' as titulo,convert(varchar,count(*)) as contador,
        CONVERT(varchar, CAST(isnull(sum(cta.montopagado - isnull(cta.mora,0)),0) AS money), 1) as montopagado,
        na.nombre as descripcion,na.idnivelacademico  
        from MT_CtasxCobrar cta
        inner join MX_Matricula m on cta.idmatricula = m.idmatricula and cta.unineg = m.unineg
        inner join MX_GradoAcademico ga on m.idgradoacademico = ga.idgradoacademico
        inner join MX_NivelAcademico na on ga.idnivelacademico = na.idnivelacademico
        inner join MT_DocIngreso doc on cta.iddocingreso = doc.iddocingreso and cta.unineg = doc.unineg
        inner join MO_UnidadNegocio uni on cta.unineg = uni.unineg
        inner join MO_Entidad e on e.ruc = uni.RUC
        where cta.unineg = #{unidadNegocioBean.uniNeg}  
        <if test="anio != 0" >
            and cta.anio = #{anio}
        </if>
        <if test="mes != 0" >
            and cta.mes = #{mes}
        </if> 
        <if test="fechaInicio != null" >
            and cta.fechapago <![CDATA[ >=  ]]> #{fechaInicio} 
        </if>
        <if test="fechaFin != null" >
            and cta.fechapago <![CDATA[ <=  ]]> #{fechaFin}
        </if>
        and cta.idtipostatusctacte = 19404
        and doc.idtipolugarpago = #{docIngresoBean.idTipoLugarPago.idCodigo}
        group by cta.anio,cta.mes,ga.idnivelacademico,na.nombre,na.idnivelacademico,uni.RUC,e.nombre)
        select RUC,nombre,titulo,contador,montopagado,descripcion,
        (select CONVERT(varchar, CAST(sum(ISNULL(convert(money,montopagado),0)) AS money), 1) from lista) as total,
        (select sum(CONVERT(Integer,contador)) from lista) as totalContador
        from lista
        order by idnivelacademico desc
    </select>
    
    <!-- REPORTE DE CONCILIADOS POR GRADO -->
    <select id="obtenerReporteConciliaGrado" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" resultType="pe.marista.sigma.bean.reporte.ConciliaGradoRepBean" >
        ;with lista as(
        select uni.RUC,e.nombre,'ESTADÍSTICA DE PAGOS POR GRADO ACADÉMICO' as titulo,convert(varchar,count(*)) as contador,
        CONVERT(varchar, CAST(isnull(sum(cta.montopagado - isnull(cta.mora,0)),0) AS money), 1) as montopagado,
        ga.nombre as descripcion,ga.idgradoacademico,na.idnivelacademico 
        from MT_CtasxCobrar cta
        inner join MX_Matricula m on cta.idmatricula = m.idmatricula and cta.unineg = m.unineg
        inner join MX_GradoAcademico ga on m.idgradoacademico = ga.idgradoacademico
        inner join MX_NivelAcademico na on ga.idnivelacademico = na.idnivelacademico
        inner join MT_DocIngreso doc on cta.iddocingreso = doc.iddocingreso and cta.unineg = doc.unineg
        inner join MO_UnidadNegocio uni on cta.unineg = uni.unineg
        inner join MO_Entidad e on e.ruc = uni.RUC
        where cta.unineg = #{unidadNegocioBean.uniNeg} 
        <if test="anio != 0" >
            and cta.anio = #{anio}
        </if>
        <if test="mes != 0" >
            and cta.mes = #{mes}
        </if> 
        <if test="fechaInicio != null" >
            and cta.fechapago <![CDATA[ >=  ]]> #{fechaInicio} 
        </if>
        <if test="fechaFin != null" >
            and cta.fechapago <![CDATA[ <=  ]]> #{fechaFin}
        </if>
        and cta.idtipostatusctacte = 19404
        and doc.idtipolugarpago = #{docIngresoBean.idTipoLugarPago.idCodigo}
        group by cta.anio,cta.mes,ga.idnivelacademico,ga.nombre,na.idnivelacademico,ga.idgradoacademico,uni.RUC,e.nombre)
        select RUC,nombre,titulo,contador,montopagado,descripcion,
        (select CONVERT(varchar, CAST(sum(ISNULL(convert(money,montopagado),0)) AS money), 1) from lista) as total,
        (select sum(CONVERT(Integer,contador)) from lista) as totalContador
        from lista
        order by idnivelacademico desc,idgradoacademico
    </select>
    
    <!-- ESTADISTICA DE PAGOS GRADOS TOTAL -->
    <select id="obtenerReporteConciliaGradoTotal" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" resultType="pe.marista.sigma.bean.reporte.ConciliaGradoRepBean" >
        ;with lista as(
        select uni.RUC,e.nombre,'ESTADÍSTICA TOTAL DE PAGOS POR GRADO ACADÉMICO' as titulo,convert(varchar,count(*)) as contador,
        CONVERT(varchar, CAST(isnull(sum(cta.montopagado - isnull(cta.mora,0)),0) AS money), 1) as montopagado,
        ga.nombre as descripcion,ga.idgradoacademico,na.idnivelacademico 
        from MT_CtasxCobrar cta
        inner join MX_Matricula m on cta.idmatricula = m.idmatricula and cta.unineg = m.unineg
        inner join MX_GradoAcademico ga on m.idgradoacademico = ga.idgradoacademico
        inner join MX_NivelAcademico na on ga.idnivelacademico = na.idnivelacademico
        inner join MT_DocIngreso doc on cta.iddocingreso = doc.iddocingreso and cta.unineg = doc.unineg
        inner join MO_UnidadNegocio uni on cta.unineg = uni.unineg
        inner join MO_Entidad e on e.ruc = uni.RUC
        where cta.unineg = #{unidadNegocioBean.uniNeg} 
        <if test="anio != 0" >
            and cta.anio = #{anio}
        </if>
        <if test="mes != 0" >
            and cta.mes = #{mes}
        </if> 
        <if test="fechaInicio != null" >
            and cta.fechapago <![CDATA[ >=  ]]> #{fechaInicio} 
        </if>
        <if test="fechaFin != null" >
            and cta.fechapago <![CDATA[ <=  ]]> #{fechaFin}
        </if>
        and cta.idtipostatusctacte = 19404
        group by cta.anio,cta.mes,ga.idnivelacademico,ga.nombre,na.idnivelacademico,ga.idgradoacademico,uni.RUC,e.nombre)
        select RUC,nombre,titulo,contador,montopagado,descripcion,
        (select CONVERT(varchar, CAST(sum(ISNULL(convert(money,montopagado),0)) AS money), 1) from lista) as total,
        (select sum(CONVERT(Integer,contador)) from lista) as totalContador
        from lista
        order by idnivelacademico desc,idgradoacademico
    </select>
    
    <!-- REPORTE DE ESTADISTICA POR NIVEL TOTAL -->
    <select id="obtenerReporteConciliaNivelTotal" parameterType="pe.marista.sigma.bean.CuentasPorCobrarBean" resultType="pe.marista.sigma.bean.reporte.ConciliaNivelRepBean" >
        ;with lista as(
        select uni.RUC,e.nombre,'ESTADÍSTICA TOTAL DE PAGOS POR NIVEL ACADÉMICO' as titulo,convert(varchar,count(*)) as contador,
        CONVERT(varchar, CAST(isnull(sum(cta.montopagado - isnull(cta.mora,0)),0) AS money), 1) as montopagado,
        na.nombre as descripcion,na.idnivelacademico  
        from MT_CtasxCobrar cta
        inner join MX_Matricula m on cta.idmatricula = m.idmatricula and cta.unineg = m.unineg
        inner join MX_GradoAcademico ga on m.idgradoacademico = ga.idgradoacademico
        inner join MX_NivelAcademico na on ga.idnivelacademico = na.idnivelacademico
        inner join MT_DocIngreso doc on cta.iddocingreso = doc.iddocingreso and cta.unineg = doc.unineg
        inner join MO_UnidadNegocio uni on cta.unineg = uni.unineg
        inner join MO_Entidad e on e.ruc = uni.RUC
        where cta.unineg = #{unidadNegocioBean.uniNeg}  
        <if test="anio != 0" >
            and cta.anio = #{anio}
        </if>
        <if test="mes != 0" >
            and cta.mes = #{mes}
        </if> 
        <if test="fechaInicio != null" >
            and cta.fechapago <![CDATA[ >=  ]]> #{fechaInicio} 
        </if>
        <if test="fechaFin != null" >
            and cta.fechapago <![CDATA[ <=  ]]> #{fechaFin}
        </if>
        and cta.idtipostatusctacte = 19404
        group by cta.anio,cta.mes,ga.idnivelacademico,na.nombre,na.idnivelacademico,uni.RUC,e.nombre)
        select RUC,nombre,titulo,contador,montopagado,descripcion,
        (select CONVERT(varchar, CAST(sum(ISNULL(convert(money,montopagado),0)) AS money), 1) from lista) as total,
        (select sum(CONVERT(Integer,contador)) from lista) as totalContador
        from lista
        order by idnivelacademico desc
    </select>
    
    <update id="modificarMora" parameterType="pe.marista.sigma.bean.MatriculaBean" >
        declare @fecha date = convert(date,#{fechaInicio})
        UPDATE cta
        set
        cta.mora = ((DATEDIFF(DAY,cta.fechavenc,@fecha)) * 0.00015),
        cta.deuda = ((DATEDIFF(DAY,cta.fechavenc,@fecha)) * 0.00015) + (monto -isnull(dsctobeca,0)),            
        cta.modipor = 'sigma'
        from MT_CtasxCobrar cta
        where cta.unineg = #{unidadNegocioBean.uniNeg}
        and cta.idestudiante = #{estudianteBean.personaBean.idPersona} 
        and cta.anio = #{anio}
        <if test="mes != null" >
            and cta.mes = #{mes}
        </if>
        and cta.idtipostatusctacte = 19401
    </update>
    <select id="obtenerRecibosParaImprimirATiempo" resultMap="ctasXCobrarResultado" parameterType="map" resultType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        <!--mes de marzo, pagaron a TIEMPO -->
        Declare 
        @unineg varchar(6),
        @periodo int, <!-- año de la pension -->
        <!--@mes int,-->     <!-- mes de la pension -->
        @idtipolugarpago int,
        @fechaini date,
        @fechafin date 
        set @unineg=#{uniNeg}
        set @periodo=#{periodo}
        <!--set @mes=#{mes}-->
        set @idtipolugarpago=#{idTipoLugarPago}
        set @fechaini =convert(date,#{fechaIni})
        set @fechafin =convert(date,#{fechaFin})
        
        select 
        c.idDocingreso as idDocIngresoDoc, 
        c.idDocingreso as idCtasXCobrar,
        d.discente as nombreDiscente,
        concat(isnull(d.serie,''),'-',isnull(d.nroDoc,'')) as serieNroDoc, 
        c.fechaPago,
        lug.codigo as codTipoLugarPago,
        c.fechaPago  as fechaPago,
        <!--isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,'')+ ' '+isnull('- '+m.seccion,' ') + ' '+isnull(niv.nombre,'')  as nombreGrado,-->
        (case when niv.nombre='Inicial' 
        then isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+upper(niv.nombre)+isnull('- '+m.seccion,' ')			
        else isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+isnull(upper(substring(niv.nombre,1,3)),'')+'. ' +isnull('- '+m.seccion,' ') end) as nombreGrado,
        convert(varchar,c.fechaPago,103) as fechaPagoVista,
        isnull(det.referencia,'') as referenciaCuenta, d.fechaImpresion as fechaImpresion                                                   
        from MT_CtasxCobrar c
        INNER JOIN MT_DocIngreso d on c.iddocingreso=d.iddocingreso and c.unineg=d.unineg
        INNER JOIN mt_detDocingreso det on det.iddocingreso=d.iddocingreso and det.unineg=d.unineg
        LEFT JOIN MX_Matricula m on c.idmatricula = m.idmatricula and c.unineg = m.unineg and m.anio = c.anio 
        LEFT JOIN MX_Estudiante est on m.idestudiante = est.idestudiante and m.unineg = est.unineg
        LEFT JOIN MX_Persona p on est.idestudiante = p.idpersona and est.unineg = p.unineg 
        LEFT JOIN MX_GradoAcademico gra ON gra.idgradoacademico = m.idgradoacademico
        LEFT JOIN MX_NivelAcademico niv ON niv.idnivelacademico = gra.idnivelacademico
        LEFT JOIN mo_codigo lug on lug.idcodigo=d.idtipolugarpago
        where 
        c.unineg=@unineg 
        and c.anio=@periodo 
        and year(c.fechapago)=@periodo
        <!--and mes=@mes-->
        <if test="list != null " >
            and c.mes in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and convert(date,C.fechapago) <![CDATA[ <=  ]]> convert(date,c.fechavenc)   
        <if test="idTipoLugarPago != null   and idTipoLugarPago != 0" >
            and d.idtipolugarpago in (@idtipolugarpago)  
        </if>                
        <if test="fechaIni != null" >
            and c.fechapago <![CDATA[ >=  ]]> #{fechaIni}
        </if>
        <if test="fechaFin != null" >
            and c.fechapago <![CDATA[ <=  ]]> #{fechaFin}
        </if>
        <if test="idNivelAcademico != null and idNivelAcademico !=0"> 
            and niv.idnivelacademico=#{idNivelAcademico} 
        </if>
        <if test="idGradoAcademico != null and idGradoAcademico !=0"> 
            and gra.idgradoacademico=#{idGradoAcademico}
        </if>    
        <if test="seccion != null and seccion!='' "> 
            and isnull(m.seccion,'')=#{seccion}
        </if>          
        <if test="nombre != null and nombre != '' " >
            and concat(
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apepat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apemat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.nombre,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')) 
            like '%'+rtrim(ltrim(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(#{nombre},'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')))+'%'  
        </if> 
        <if test="serie != null and serie != '' " >
            and d.serie=#{serie}
        </if>  
        <if test="nroDoc != null and nroDoc != '' " >
            and d.nrodoc=#{nroDoc}
        </if>           
        <if test="flgRecImp != null " >
            <if test="flgRecImp == 1 " >
                and d.fechaimpresion is null
            </if>
            <if test="flgRecImp == 2 " >
                and d.fechaimpresion is not null
            </if>
        </if>      
        <!-- orden-->
        <if test="orden == 1" >
            order by niv.idnivelacademico desc,gra.idgradoacademico, m.seccion,p.apepat,p.apemat, p.nombre
        </if> 
        <if test="orden == 2" >
            order by c.fechapago 
        </if> 
        <if test="orden == 3" >
            order by c.fechapago desc
        </if> 
        <if test="orden == 4" >
            order by d.nrodoc
        </if>         
    </select>
    <select id="obtenerRecibosParaImprimirDespuesFecha" resultMap="ctasXCobrarResultado" parameterType="map" resultType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        <!--mes de marzo, pagaron a desTIEMPO en b-->
        Declare 
        @unineg varchar(6),
        @periodo int, <!-- año de la fecha pago -->
        @mes int,    <!---mes de la fecha pago-->
        @idtipolugarpago int,
        @fechaini date,
        @fechafin date 
        set @unineg=#{uniNeg}
        set @periodo=#{periodo}
        set @mes=#{mesPago}
        set @idtipolugarpago=#{idTipoLugarPago}
        set @fechaini =convert(date,#{fechaIni})
        set @fechafin =convert(date,#{fechaFin})
        
        
        select 
        c.idDocingreso as idDocIngresoDoc, 
        c.idDocingreso as idCtasXCobrar,
        d.discente as nombreDiscente,
        concat(isnull(d.serie,''),'-',isnull(d.nroDoc,'')) as serieNroDoc, 
        c.fechaPago,
        lug.codigo as codTipoLugarPago,
        c.fechaPago  as fechaPago,
        <!--isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,'')+ ' '+isnull('- '+m.seccion,' ') + ' '+isnull(niv.nombre,'')  as nombreGrado,-->
        (case when niv.nombre='Inicial' 
        then isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+upper(niv.nombre)+isnull('- '+m.seccion,' ')			
        else isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+isnull(upper(substring(niv.nombre,1,3)),'')+'. ' +isnull('- '+m.seccion,' ') end) as nombreGrado,
        convert(varchar,c.fechaPago,103) as fechaPagoVista,
        isnull(det.referencia,'') as referenciaCuenta,d.fechaImpresion as fechaImpresion                                                            
        from MT_CtasxCobrar c
        INNER JOIN MT_DocIngreso d on c.iddocingreso=d.iddocingreso and c.unineg=d.unineg
        INNER JOIN mt_detDocingreso det on det.iddocingreso=d.iddocingreso and det.unineg=d.unineg
        LEFT JOIN MX_Matricula m on c.idmatricula = m.idmatricula and c.unineg = m.unineg and m.anio = c.anio 
        LEFT JOIN MX_Estudiante est on m.idestudiante = est.idestudiante and m.unineg = est.unineg
        LEFT JOIN MX_Persona p on est.idestudiante = p.idpersona and est.unineg = p.unineg 
        LEFT JOIN MX_GradoAcademico gra ON gra.idgradoacademico = m.idgradoacademico
        LEFT JOIN MX_NivelAcademico niv ON niv.idnivelacademico = gra.idnivelacademico
        LEFT JOIN mo_codigo lug on lug.idcodigo=d.idtipolugarpago
        where         
        c.unineg=@unineg 
        and year(c.fechapago)=@periodo 
        and month(c.fechapago)=@mes
        and convert(date,c.fechapago)<![CDATA[ >  ]]>convert(date,c.fechavenc) 
        <if test="periodoInicio != null and periodoInicio !=0 and periodoFin != null and periodoFin !=0">
            and c.anio BETWEEN #{periodoInicio} AND #{periodoFin} 
        </if>        
        <if test="idTipoLugarPago != null   and idTipoLugarPago != 0" >
            and d.idtipolugarpago in (@idtipolugarpago)  
        </if>                     
        <if test="fechaIni != null" >
            and c.fechapago <![CDATA[ >=  ]]> #{fechaIni}
        </if>
        <if test="fechaFin != null" >
            and c.fechapago <![CDATA[ <=  ]]> #{fechaFin}
        </if>
        <if test="idNivelAcademico != null and idNivelAcademico !=0"> 
            and niv.idnivelacademico=#{idNivelAcademico} 
        </if>
        <if test="idGradoAcademico != null and idGradoAcademico !=0"> 
            and gra.idgradoacademico=#{idGradoAcademico}
        </if>    
        <if test="seccion != null and seccion!='' "> 
            and isnull(m.seccion,'')=#{seccion}
        </if>          
        <if test="nombre != null and nombre != '' " >
            and concat(
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apepat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apemat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.nombre,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')) 
            like '%'+rtrim(ltrim(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(#{nombre},'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')))+'%'  
        </if> 
        <if test="serie != null and serie != '' " >
            and d.serie=#{serie}
        </if>  
        <if test="nroDoc != null and nroDoc != '' " >
            and d.nrodoc=#{nroDoc}
        </if>  
        <if test="flgRecImp != null " >
            <if test="flgRecImp == 1 " >
                and d.fechaimpresion is null
            </if>
            <if test="flgRecImp == 2 " >
                and d.fechaimpresion is not null
            </if>
        </if>         
        <if test="list != null " >
            and c.mes in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="flgRecImp != null " >
            <if test="flgRecImp == 1 " >
                and d.fechaimpresion is null
            </if>
            <if test="flgRecImp == 2 " >
                and d.fechaimpresion is not null
            </if>
        </if>      
        <!-- orden-->
        <if test="orden == 1" >
            order by niv.idnivelacademico desc,gra.idgradoacademico, m.seccion,p.apepat,p.apemat, p.nombre
        </if> 
        <if test="orden == 2" >
            order by c.fechapago 
        </if> 
        <if test="orden == 3" >
            order by c.fechapago desc
        </if> 
        <if test="orden == 4" >
            order by d.nrodoc
        </if>        
    </select>
    <select id="obtenerRecibosAll" resultMap="ctasXCobrarResultado" parameterType="map" resultType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        <!--mes de marzo, pagaron-->
        Declare 
        @unineg varchar(6),
        @idtipolugarpago int,
        @fechaini date,
        @fechafin date 
        set @unineg=#{uniNeg}
        set @idtipolugarpago=#{idTipoLugarPago}
        set @fechaini =convert(date,#{fechaIni})
        set @fechafin =convert(date,#{fechaFin})        
        
        select 
        c.idDocingreso as idDocIngresoDoc, 
        c.idDocingreso as idCtasXCobrar,
        d.discente as nombreDiscente,
        concat(isnull(d.serie,''),'-',isnull(d.nroDoc,'')) as serieNroDoc, 
        c.fechaPago,
        lug.codigo as codTipoLugarPago,
        c.fechaPago  as fechaPago,
        (case when niv.nombre='Inicial' 
        then isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+upper(niv.nombre)+isnull('- '+m.seccion,' ')			
        else isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+isnull(upper(substring(niv.nombre,1,3)),'')+'. ' +isnull('- '+m.seccion,' ') end) as nombreGrado,
        convert(varchar,c.fechaPago,103) as fechaPagoVista,
        isnull(det.referencia,'') as referenciaCuenta,d.fechaImpresion as fechaImpresion                                                            
        from MT_CtasxCobrar c
        INNER JOIN MT_DocIngreso d on c.iddocingreso=d.iddocingreso and c.unineg=d.unineg
        INNER JOIN mt_detDocingreso det on det.iddocingreso=d.iddocingreso and det.unineg=d.unineg
        LEFT JOIN MX_Matricula m on c.idmatricula = m.idmatricula and c.unineg = m.unineg and m.anio = c.anio 
        LEFT JOIN MX_Estudiante est on m.idestudiante = est.idestudiante and m.unineg = est.unineg
        LEFT JOIN MX_Persona p on est.idestudiante = p.idpersona and est.unineg = p.unineg 
        LEFT JOIN MX_GradoAcademico gra ON gra.idgradoacademico = m.idgradoacademico
        LEFT JOIN MX_NivelAcademico niv ON niv.idnivelacademico = gra.idnivelacademico
        LEFT JOIN mo_codigo lug on lug.idcodigo=d.idtipolugarpago
        where         
        c.unineg=@unineg 
        <!--and convert(date,c.fechapago)<![CDATA[ >  ]]>convert(date,c.fechavenc) -->        
        and c.fechapago is not null
        
        <!--and year(c.fechapago)=@periodo -->
        <if test="periodoInicio != null and periodoInicio !=0 and periodoFin != null and periodoFin !=0">
            and c.anio BETWEEN #{periodoInicio} AND #{periodoFin} 
        </if>  
        <!--and month(c.fechapago)=@mes-->
        <if test="list != null " >
            and c.mes in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if> 
              
        <if test="idTipoLugarPago != null   and idTipoLugarPago != 0" >
            and d.idtipolugarpago in (@idtipolugarpago)  
        </if>                     
        <if test="fechaIni != null" >
            and c.fechapago <![CDATA[ >=  ]]> #{fechaIni}
        </if>
        <if test="fechaFin != null" >
            and c.fechapago <![CDATA[ <=  ]]> #{fechaFin}
        </if>
        <if test="idNivelAcademico != null and idNivelAcademico !=0"> 
            and niv.idnivelacademico=#{idNivelAcademico} 
        </if>
        <if test="idGradoAcademico != null and idGradoAcademico !=0"> 
            and gra.idgradoacademico=#{idGradoAcademico}
        </if>    
        <if test="seccion != null and seccion!='' "> 
            and isnull(m.seccion,'')=#{seccion}
        </if>          
        <if test="nombre != null and nombre != '' " >
            and concat(
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apepat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apemat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.nombre,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')) 
            like '%'+rtrim(ltrim(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(#{nombre},'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')))+'%'  
        </if> 
        <if test="serie != null and serie != '' " >
            and d.serie=#{serie}
        </if>  
        <if test="nroDoc != null and nroDoc != '' " >
            and d.nrodoc=#{nroDoc}
        </if>   
        <if test="flgRecImp != null " >
            <if test="flgRecImp == 1 " >
                and d.fechaimpresion is null
            </if>
            <if test="flgRecImp == 2 " >
                and d.fechaimpresion is not null
            </if>
        </if>         
      
        <!-- orden-->
        <if test="orden == 1" >
            order by niv.idnivelacademico desc,gra.idgradoacademico, m.seccion,p.apepat,p.apemat, p.nombre
        </if> 
        <if test="orden == 2" >
            order by c.fechapago 
        </if> 
        <if test="orden == 3" >
            order by c.fechapago desc
        </if> 
        <if test="orden == 4" >
            order by d.nrodoc
        </if>        
        <if test="orden == 5" >
            order by p.apepat,p.apemat, p.nombre asc
        </if>        
    </select>
    <select id="obtenerRecibosDeudores" resultMap="ctasXCobrarResultado" parameterType="map" resultType="pe.marista.sigma.bean.CuentasPorCobrarBean" > 
        Declare 
        @unineg varchar(6),
        @idtipolugarpago int,
        @fechaini date,
        @fechafin date 
        set @unineg=#{uniNeg}  
        
        select 
        c.idDocingreso as idDocIngresoDoc, 
        c.idDocingreso as idCtasXCobrar,
        d.discente as nombreDiscente,
        concat(isnull(d.serie,''),'-',isnull(d.nroDoc,'')) as serieNroDoc, 
        c.fechaPago as fechaPago, 
        isnull(lug.codigo,'Deudor') as codTipoLugarPago,
        c.fechaPago  as fechaPago,
        (case when niv.nombre='Inicial' 
        then isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+upper(niv.nombre)+isnull('- '+m.seccion,' ')			
        else isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+isnull(upper(substring(niv.nombre,1,3)),'')+'. ' +isnull('- '+m.seccion,' ') end) as nombreGrado,
        convert(varchar,c.fechaPago,103) as fechaPagoVista,
        isnull(det.referencia,'') as referenciaCuenta,d.fechaImpresion as fechaImpresion                                                            
        from MT_CtasxCobrar c
        INNER JOIN MT_DocIngreso d on c.iddocingreso=d.iddocingreso and c.unineg=d.unineg
        INNER JOIN mt_detDocingreso det on det.iddocingreso=d.iddocingreso and det.unineg=d.unineg
        LEFT JOIN MX_Matricula m on c.idmatricula = m.idmatricula and c.unineg = m.unineg and m.anio = c.anio 
        LEFT JOIN MX_Estudiante est on m.idestudiante = est.idestudiante and m.unineg = est.unineg
        LEFT JOIN MX_Persona p on est.idestudiante = p.idpersona and est.unineg = p.unineg 
        LEFT JOIN MX_GradoAcademico gra ON gra.idgradoacademico = m.idgradoacademico
        LEFT JOIN MX_NivelAcademico niv ON niv.idnivelacademico = gra.idnivelacademico
        LEFT JOIN mo_codigo lug on lug.idcodigo=d.idtipolugarpago
        where         
        c.unineg=@unineg  
        and c.fechapago is null  and idtipostatusctacte=19401 
        <if test="periodoInicio != null and periodoInicio !=0 and periodoFin != null and periodoFin !=0">
            and c.anio BETWEEN #{periodoInicio} AND #{periodoFin} 
        </if>  
        <if test="list != null " >
            and c.mes in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>       
        <if test="idNivelAcademico != null and idNivelAcademico !=0"> 
            and niv.idnivelacademico=#{idNivelAcademico} 
        </if>
        <if test="idGradoAcademico != null and idGradoAcademico !=0"> 
            and gra.idgradoacademico=#{idGradoAcademico}
        </if>    
        <if test="seccion != null and seccion!='' "> 
            and isnull(m.seccion,'')=#{seccion}
        </if>          
        <if test="nombre != null and nombre != '' " >
            and concat(
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apepat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apemat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.nombre,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')) 
            like '%'+rtrim(ltrim(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(#{nombre},'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')))+'%'  
        </if> 
        <if test="serie != null and serie != '' " >
            and d.serie=#{serie}
        </if>  
        <if test="nroDoc != null and nroDoc != '' " >
            and d.nrodoc=#{nroDoc}
        </if>   
        <if test="flgRecImp != null " >
            <if test="flgRecImp == 1 " >
                and d.fechaimpresion is null
            </if>
            <if test="flgRecImp == 2 " >
                and d.fechaimpresion is not null
            </if>
        </if>         
      
        <!-- orden-->
        <if test="orden == 1" >
            order by niv.idnivelacademico desc,gra.idgradoacademico, m.seccion,p.apepat,p.apemat, p.nombre
        </if> 
        <if test="orden == 2" >
            order by c.fechapago 
        </if> 
        <if test="orden == 3" >
            order by c.fechapago desc
        </if> 
        <if test="orden == 4" >
            order by d.nrodoc
        </if>        
    </select>
    <select id="obtenerRecibosSinServicio" resultMap="ctasXCobrarResultado" parameterType="map" resultType="pe.marista.sigma.bean.CuentasPorCobrarBean" > 
        Declare 
        @unineg varchar(6),
        @idtipolugarpago int,
        @fechaini date,
        @fechafin date 
        set @unineg=#{uniNeg}  
        
        select 
        c.idDocingreso as idDocIngresoDoc, 
        c.idDocingreso as idCtasXCobrar,
        d.discente as nombreDiscente,
        concat(isnull(d.serie,''),'-',isnull(d.nroDoc,'')) as serieNroDoc, 
        c.fechaPago as fechaPago, 
        isnull(lug.codigo,'Sin Servicio') as codTipoLugarPago,
        c.fechaPago as fechaPago, 
        (case when niv.nombre='Inicial' 
        then isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+upper(niv.nombre)+isnull('- '+m.seccion,' ')			
        else isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+isnull(upper(substring(niv.nombre,1,3)),'')+'. ' +isnull('- '+m.seccion,' ') end) as nombreGrado,
        convert(varchar,c.fechaPago,103) as fechaPagoVista,
        isnull(det.referencia,'') as referenciaCuenta,isnull(d.fechaImpresion,getdate()) as fechaImpresion                                                            
        from MT_CtasxCobrar c
        INNER JOIN MT_DocIngreso d on c.iddocingreso=d.iddocingreso and c.unineg=d.unineg
        INNER JOIN mt_detDocingreso det on det.iddocingreso=d.iddocingreso and det.unineg=d.unineg
        LEFT JOIN MX_Matricula m on c.idmatricula = m.idmatricula and c.unineg = m.unineg and m.anio = c.anio 
        LEFT JOIN MX_Estudiante est on m.idestudiante = est.idestudiante and m.unineg = est.unineg
        LEFT JOIN MX_Persona p on est.idestudiante = p.idpersona and est.unineg = p.unineg 
        LEFT JOIN MX_GradoAcademico gra ON gra.idgradoacademico = m.idgradoacademico
        LEFT JOIN MX_NivelAcademico niv ON niv.idnivelacademico = gra.idnivelacademico
        LEFT JOIN mo_codigo lug on lug.idcodigo=d.idtipolugarpago
        where         
        c.unineg=@unineg  
        and c.fechapago is null  and idtipostatusctacte=19406 
        <if test="periodoInicio != null and periodoInicio !=0 and periodoFin != null and periodoFin !=0">
            and c.anio BETWEEN #{periodoInicio} AND #{periodoFin} 
        </if>  
        <if test="list != null " >
            and c.mes in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>       
        <if test="idNivelAcademico != null and idNivelAcademico !=0"> 
            and niv.idnivelacademico=#{idNivelAcademico} 
        </if>
        <if test="idGradoAcademico != null and idGradoAcademico !=0"> 
            and gra.idgradoacademico=#{idGradoAcademico}
        </if>    
        <if test="seccion != null and seccion!='' "> 
            and isnull(m.seccion,'')=#{seccion}
        </if>          
        <if test="nombre != null and nombre != '' " >
            and concat(
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apepat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apemat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.nombre,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')) 
            like '%'+rtrim(ltrim(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(#{nombre},'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')))+'%'  
        </if> 
        <if test="serie != null and serie != '' " >
            and d.serie=#{serie}
        </if>  
        <if test="nroDoc != null and nroDoc != '' " >
            and d.nrodoc=#{nroDoc}
        </if>   
        <if test="flgRecImp != null " >
            <if test="flgRecImp == 1 " >
                and d.fechaimpresion is null
            </if>
            <if test="flgRecImp == 2 " >
                and d.fechaimpresion is not null
            </if>
        </if>         
      
        <!-- orden-->
        <if test="orden == 1" >
            order by niv.idnivelacademico desc,gra.idgradoacademico, m.seccion,p.apepat,p.apemat, p.nombre
        </if> 
        <if test="orden == 2" >
            order by c.fechapago 
        </if> 
        <if test="orden == 3" >
            order by c.fechapago desc
        </if> 
        <if test="orden == 4" >
            order by d.nrodoc
        </if>        
    </select>
    <select id="obtenerRecibosAllMoras" resultMap="ctasXCobrarResultado" parameterType="map" resultType="pe.marista.sigma.bean.CuentasPorCobrarBean" >
        Declare 
        @unineg varchar(6),
        @idtipolugarpago int,
        @fechaini date,
        @fechafin date 
        set @unineg=#{uniNeg}
        set @idtipolugarpago=#{idTipoLugarPago}
        set @fechaini =convert(date,#{fechaIni})
        set @fechafin =convert(date,#{fechaFin})        
        select c.mora as mora,
        c.idDocingreso as idDocIngresoDoc, 
        c.idDocingreso as idCtasXCobrar,
        d.discente as nombreDiscente,
        concat(isnull(d.serie,''),'-',isnull(d.nroDoc,'')) as serieNroDoc, 
        c.fechaPago,
        lug.codigo as codTipoLugarPago,
        c.fechaPago  as fechaPago,
        (case when niv.nombre='Inicial' 
        then isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+upper(niv.nombre)+isnull('- '+m.seccion,' ')			
        else isnull(PARSENAME(LTRIM(REPLACE(PARSENAME(REPLACE(gra.nombre,niv.nombre,''),1),'Pre-','')),1) ,' ')+' '+isnull(upper(substring(niv.nombre,1,3)),'')+'. ' +isnull('- '+m.seccion,' ') end) as nombreGrado,
        convert(varchar,c.fechaPago,103) as fechaPagoVista,
        isnull(det.referencia,'') as referenciaCuenta,d.fechaImpresion as fechaImpresion                                                            
        from MT_CtasxCobrar c
        INNER JOIN MT_DocIngreso d on c.iddocingreso=d.iddocingreso and c.unineg=d.unineg
        INNER JOIN mt_detDocingreso det on det.iddocingreso=d.iddocingreso and det.unineg=d.unineg
        LEFT JOIN MX_Matricula m on c.idmatricula = m.idmatricula and c.unineg = m.unineg and m.anio = c.anio 
        LEFT JOIN MX_Estudiante est on m.idestudiante = est.idestudiante and m.unineg = est.unineg
        LEFT JOIN MX_Persona p on est.idestudiante = p.idpersona and est.unineg = p.unineg 
        LEFT JOIN MX_GradoAcademico gra ON gra.idgradoacademico = m.idgradoacademico
        LEFT JOIN MX_NivelAcademico niv ON niv.idnivelacademico = gra.idnivelacademico
        LEFT JOIN mo_codigo lug on lug.idcodigo=d.idtipolugarpago
        where         
        c.unineg=@unineg    
        and c.fechapago is not null  
        <if test="periodoInicio != null and periodoInicio !=0 and periodoFin != null and periodoFin !=0">
            and c.anio BETWEEN #{periodoInicio} AND #{periodoFin} 
        </if>  
        <!--and month(c.fechapago)=@mes-->
        <if test="list != null " >
            and c.mes in
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if> 
              
        <if test="idTipoLugarPago != null   and idTipoLugarPago != 0" >
            and d.idtipolugarpago in (@idtipolugarpago)  
        </if>                     
        <if test="fechaIni != null" >
            and c.fechapago <![CDATA[ >=  ]]> #{fechaIni}
        </if>
        <if test="fechaFin != null" >
            and c.fechapago <![CDATA[ <=  ]]> #{fechaFin}
        </if>
        <if test="idNivelAcademico != null and idNivelAcademico !=0"> 
            and niv.idnivelacademico=#{idNivelAcademico} 
        </if>
        <if test="idGradoAcademico != null and idGradoAcademico !=0"> 
            and gra.idgradoacademico=#{idGradoAcademico}
        </if>    
        <if test="seccion != null and seccion!='' "> 
            and isnull(m.seccion,'')=#{seccion}
        </if>          
        <if test="nombre != null and nombre != '' " >
            and concat(
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apepat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.apemat,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u'),' ', 
            REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(p.nombre,'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')) 
            like '%'+rtrim(ltrim(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(#{nombre},'á','a'),'é','e'),'í','i'),'ó','o'),'ú','u')))+'%'  
        </if> 
        <if test="serie != null and serie != '' " >
            and d.serie=#{serie}
        </if>  
        <if test="nroDoc != null and nroDoc != '' " >
            and d.nrodoc=#{nroDoc}
        </if>    
        <!-- orden-->
        <if test="recibosMora == 1" >
            and c.mora<![CDATA[ >=  ]]>5.00
        </if> 
        <if test="recibosMora == 2" >
            and c.mora<![CDATA[ <  ]]>5.00 and c.mora<![CDATA[ >  ]]>0.00
        </if> 
        <if test="recibosMora == 3" >
            and c.mora<![CDATA[ >  ]]>0.00
        </if> 
        
        <if test="flgRecImp != null " >
            <if test="flgRecImp == 1 " >
                and d.idrecibosmora is null 
            </if>
            <if test="flgRecImp == 2 " >
                and d.idrecibosmora is not null
            </if>
        </if>   
        
        <if test="orden == 1" >
            order by niv.idnivelacademico desc,gra.idgradoacademico, m.seccion,p.apepat,p.apemat, p.nombre
        </if> 
        <if test="orden == 2" >
            order by c.fechapago 
        </if> 
        <if test="orden == 3" >
            order by c.fechapago desc
        </if> 
        <if test="orden == 4" >
            order by d.nrodoc
        </if>        
    </select>
    <select  id="obtenerSaldoPenionesPorFechaLetra" parameterType="map" resultType="pe.marista.sigma.bean.reporte.SaldoPensionesRepBean">        
        declare  @idestudiante varchar(15),@fecha date,@anio int,@idtipostatusctacte int,@flg int ,@mesfin int,@unineg varchar(6) 
        set @flg=#{flg}  <!--0=colegio , 1=estudiante-->
        set @mesfin=#{mes}
        set @unineg=#{uniNeg}
        set @anio=#{anio}
        set @idtipostatusctacte=19406<!--SIN SERV-->
        set @idestudiante=#{idEstudiante}
        set @fecha=convert(date,#{fecha})
        declare @nro varchar(6) =#{nro}
        declare @fechavenmesfinmas1 date = (select convert(date,fechavenc) from MT_CronogramaPago where mes= (case when @mesfin=1 then 2 else @mesfin end)  and anio=@anio) 
        set @fechavenmesfinmas1= convert(date, DATEADD(day, +1, @fechavenmesfinmas1) ) 

        declare
        @nombre varchar(100) =
        (case 
        when @flg=0 then 
        (select nombreUniNeg from MO_UnidadNegocio where   unineg=@uniNeg)
        when @flg=1 then 
        (select concat(apepat,' '+apemat,', '+nombre) from MX_Persona where idpersona=@idestudiante and unineg=@uniNeg)
        end), 
       
        @id varchar(100) =
        (case 
        when @flg=0 then 
        (select 'R.U.C. '+RUC from MO_UnidadNegocio where   unineg=@uniNeg)
        when @flg=1 then 
        (select top 1 (case 
        when GRA.codigo= 'PRE-INICIAL(3)' then 'P3'
        when GRA.codigo= 'PRE-INICIAL(4)' then 'P4' 
        when GRA.codigo= 'INICIAL(5)'	  then '00'
        when GRA.codigo= 'PRIMERO'		  then '01'
        when GRA.codigo= 'SEGUNDO'		  then '02'
        when GRA.codigo= 'TERCERO'		  then '03'
        when GRA.codigo= 'CUARTO'         then '04'
        when GRA.codigo= 'QUINTO'         then '05'
        when GRA.codigo= 'SEXTO'          then '06'
        when GRA.codigo= 'SETIMO'         then '07'
        when GRA.codigo= 'OCTAVO'         then '08'
        when GRA.codigo= 'NOVENO'         then '09'
        when GRA.codigo= 'DECIMO'         then '10'
        when GRA.codigo= 'DECIMO-BACH'    then '10'
        when GRA.codigo= 'UNDECIMO'       then '11'		
        when GRA.codigo= 'UNDECIMO-BACH'  then '11'
        END )+ isnull(m.seccion,'') from MX_Matricula m
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico where m.idestudiante=@idestudiante and m.unineg=@uniNeg and m.anio=@anio)
        end), 

        @mesMat money=        
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 2=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=2 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 2=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=2 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>        
        )end) 

        ,@mesMar money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 3=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=3 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)

        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 3 = month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=3 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>    
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>        
        )
        end) 
		        
        ,@mesAbr money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 4=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=4 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 4=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=4 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>      
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>      
        )
        end) 

        ,@mesMay money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 5=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=5 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 5=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=5 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesJun money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 6=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=6 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 6=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=6 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesJul money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 7=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=7 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 7=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=7 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesAgo money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 8=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=8 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 8=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=8 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesSep money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 9=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=9 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 9=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=9 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>    
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>        
        )
        end) 

        ,@mesOct money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 10=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=10 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 10=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=10 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesNov money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 11=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ > ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=11 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 11=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=11 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 

        ,@mesDic money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when 12=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=12 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when 12=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and mes=12 and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 
        
        ,@deuda  money= 
        (case 
        when @flg=1 then  
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar
        where  fechavenc  <![CDATA[ <  ]]>  (case when @mesfin=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and  isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and unineg=@unineg and idestudiante=@idestudiante)
        when @flg=0 then 
        (select 
        isnull(sum(isnull(monto,0)-isnull(dsctobeca,0)),0)
        from MT_CtasxCobrar c
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  fechavenc  <![CDATA[ <  ]]>  (case when @mesfin=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]> @fecha then 0 else 1 end) else 0 end)=0
        and isnull(idtipostatusctacte,19401) not in (@idtipostatusctacte) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado!=0"> 
            and gra.idgradoacademico=#{idGrado}
        </if>        
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>    
        )
        end) 
        
        select  
        (case 
        when @flg=1 then ''
        when @flg=0 then 'REPORTE DE SALDOS DE PENSIONES '+ CONVERT(VARCHAR(4),@anio)+' AL ' + CONVERT(VARCHAR(15),@fecha,103)
        end) as titulo,
        convert(varchar(5),isnull(@nro,0)) as nro,
        @id as identificador,
        @nombre as nombre, 
        (case when @mesMat =0.0 then '' else 'DEBE' END) AS matricula,
        (case when @mesMar =0.0 then '' else 'DEBE' END) AS marzo,
        (case when @mesAbr =0.0 then '' else 'DEBE' END) AS abril,
        (case when @mesMay =0.0 then '' else 'DEBE' END) AS mayo,
        (case when @mesJun =0.0 then '' else 'DEBE' END) AS junio,
        (case when @mesJul =0.0 then '' else 'DEBE' END) AS julio,
        (case when @mesAgo =0.0 then '' else 'DEBE' END) AS agosto,
        (case when @mesSep =0.0 then '' else 'DEBE' END) AS septiembre,
        (case when @mesOct =0.0 then '' else 'DEBE' END) AS octubre,
        (case when @mesNov =0.0 then '' else 'DEBE' END) AS noviembre,
        (case when @mesDic =0.0 then '' else 'DEBE' END) AS diciembre 
    </select>
    <select  id="obtenerEstudianteConSaldoPorFechaLetra" parameterType="map" resultType="pe.marista.sigma.bean.reporte.EstudianteSaldoRepBean">
        declare  @mesfin int,@anio int,@unineg varchar(6),@fecha date,@idtipostatusctacte int
        set @mesfin=#{mes}
        set @anio=#{anio}
        set @unineg=#{uniNeg}
        set @idtipostatusctacte=19406<!--SIN SERV-->
        set @fecha=convert(date,#{fecha})
        declare @fechavenmesfinmas1 date = (select convert(date,fechavenc) from MT_CronogramaPago where mes= (case when @mesfin=1 then 2 else @mesfin end) and anio=@anio) 
        set @fechavenmesfinmas1= convert(date, DATEADD(day, +1, @fechavenmesfinmas1) ) 
        select distinct   
        niv.idnivelacademico, c.idestudiante as idestudiante,m.idgradoacademico,isnull(m.seccion,'') as seccion , concat(p.apepat,' '+p.apemat,', '+p.nombre) as nombre,
        niv.nombre as nombreNivel, gra.nombre as nombreGrado
        from MT_CtasxCobrar  c
        inner join MO_UnidadNegocio ne on ne.unineg=c.unineg
        inner join MX_Estudiante es on es.idestudiante= c.idestudiante and ne.unineg=es.unineg
        inner join MX_Persona p on p.idpersona=es.idestudiante and ne.unineg=p.unineg
        inner join MX_Matricula m on m.idmatricula = c.idmatricula and c.unineg=m.unineg and m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico gra on gra.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico niv on niv.idnivelacademico=gra.idnivelacademico
        where  
        fechavenc  <![CDATA[ <  ]]> (case when @mesfin=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when fechapago is not null then (case when convert(date,fechapago)<![CDATA[ >  ]]>@fecha then 0 else 1 end) else 0 end)=0
        and   isnull(idtipostatusctacte,19401) not in (19406) and monto!=isnull(dsctobeca,0) 
        and c.unineg=@unineg 
        <if test="idNivel != null and idNivel!=0"> 
            and niv.idnivelacademico=#{idNivel} 
        </if>
        <if test="idGrado != null and idGrado"> 
            and gra.idgradoacademico=#{idGrado}
        </if>    
        <if test="secc != null and secc!=''"> 
            and isnull(m.seccion,'')=#{secc}
        </if>  
        order by niv.idnivelacademico desc ,m.idgradoacademico,isnull(m.seccion,'') , concat(p.apepat,' '+p.apemat,', '+p.nombre) asc  
    </select>
    
    <select id="pagoMesAnterior" resultType="Integer" parameterType="map" >
        declare @pagomesant int,@idctasxcobrarsant int, @unineg varchar(6)
        set @unineg=#{uniNeg}
        set @idctasxcobrarsant=#{idCta}
        set @pagomesant  = ((select (case when fechapago is null then 0 else 1 end) from MT_CtasxCobrar where unineg=@unineg and idctasxcobrar=@idctasxcobrarsant))
        select isnull(@pagomesant,0)
    </select>
    
    
    <!-- Modificaciones -->
    <sql id="consultaModificaciones">
        select 
        m.idmodificaciones as idModificaciones	,
        m.nombreobjeto as nombreObjeto ,
        m.rspobjeto as rspObjeto ,
        m.mesinicio as mesInicio ,
        m.mesfin as mesFin ,
        m.creapor as creaPor ,
        m.creafecha as creaFecha ,
        u.unineg as uniNeg ,
        u.nombreUniNeg 
        from MT_Modificaciones m
        inner join MO_UnidadNegocio u on u.unineg=m.unineg
    </sql>
    <resultMap id="modificacionesResultado" type="pe.marista.sigma.bean.ModificacionesBean">
        <id property="idModificaciones" column="idModificaciones"/>
        <result property="nombreObjeto" column="nombreObjeto"/>
        <result property="rspObjeto" column="rspObjeto"/>
        <result property="mesInicio" column="mesInicio"/>
        <result property="mesFin" column="mesFin"/>
        <result property="creaPor" column="creaPor"/>
        <result property="creaFecha" column="creaFecha"/>
        <association property="unidadNegocioBean" column="uniNeg"
                     javaType="pe.marista.sigma.bean.UnidadNegocioBean"
                     resultMap="unidadNegocioResultado"/> 
        <association property="estudianteBean" column="idEstudiante"
                     javaType="pe.marista.sigma.bean.EstudianteBean"
                     resultMap="estudianteResultado"/>     
    </resultMap>
    <insert id="insertarModificaciones" parameterType="pe.marista.sigma.bean.ModificacionesBean">
        INSERT INTO MT_Modificaciones (
        unineg 
        ,nombreobjeto
        ,rspobjeto
        ,mesinicio
        ,mesfin
        ,creafecha
        ,creapor,idestudiante)
        Values (
        #{unidadNegocioBean.uniNeg},
        #{nombreObjeto},
        #{rspObjeto}, 
        #{mesInicio},
        #{mesFin},  
        getDate(),
        #{creaPor},#{estudianteBean.personaBean.idPersona})
    </insert>
    <select  id="obtenerPenionesPorCobrarLPM" parameterType="map" resultType="pe.marista.sigma.bean.reporte.PensionesPorCobrarLPMRepBean">
        DECLARE @MES INT, @FECHA DATETIME,@ANIO INT,@UNINEG VARCHAR(6) ,@MESFIN INT
        SET @MES=#{mes}
        SET @MESFIN=#{mesFin}
        SET @ANIO=#{anio} 
        SET @FECHA= #{fechaCorte}
        SET @UNINEG=#{uniNeg}

        declare @fechavenmesfinmas1 date = (select convert(date,fechavenc) from MT_CronogramaPago where mes= (case when @MES=1 then 2 else @MES end)  and anio=@anio) 
        set @fechavenmesfinmas1= convert(date, DATEADD(day, +1, @fechavenmesfinmas1) )   
        
        select UPPER(uni.nombreUniNeg) AS nombreUniNeg,
        uni.RUC as ruc,
        upper('Pensiones por cobrar al '+
        CONVERT(VARCHAR(25),@FECHA,106 ) )  as titulo ,
        upper('Pensiones correspondientes al periodo: '+CONVERT(VARCHAR(4),@ANIO)) AS subTitulo,
        (case when per.idtipodocper=10701 then 1
        when per.idtipodocper=10704 then 4
        when per.idtipodocper in(10707,10709) then 0 end) as tipoDocPersona,
        per.nrodoc as nroDoc,
        upper(concat(per.apepat,' '+per.apemat,', '+per.nombre)) as nombreCompleto,
        (case when d.idtipodoc=15201 then 1
        when d.idtipodoc= 15202 then 3
        when d.idtipodoc=15203 then 45  else ' ' end)  as tipoDoc,
        concat(convert(varchar(6),d.serie),' - '+convert(varchar(12),d.nrodoc)) as numeroRecibo,

        CONVERT(varchar, CAST(isnull( isnull((isnull(c.monto,0)-isnull(c.dsctobeca,0)),0) ,0) AS money), 1) as monto,
        convert(varchar(20),c.fechavenc,103) as fechaEmision
        ,concat((case when n.nombre='Inicial' then'I' WHEN n.nombre='Primaria' then 'P'
        when n.nombre='Secundaria' then 'S' end),''+
        (case when g.CODIGO='PRIMERO' THEN 1
        when g.CODIGO='SEGUNDO' THEN 2
        when g.CODIGO='TERCERO' THEN 3
        when g.CODIGO='CUARTO' THEN 4
        when g.CODIGO='QUINTO' THEN 5
        when g.CODIGO='SEXTO' THEN 6
        when g.CODIGO='SETIMO' THEN 1
        when g.CODIGO='OCTAVO' THEN 2
        when g.CODIGO='NOVENO' THEN 3
        when g.CODIGO='DECIMO' THEN 4
        when g.CODIGO='UNDECIMO' THEN 5
        when g.CODIGO='DECIMO-BACH' THEN 4
        when g.CODIGO='UNDECIMO-BACH' THEN 5
        when g.CODIGO='PRE-INICIAL(3)' THEN 3
        when g.CODIGO='PRE-INICIAL(4)' THEN 4
        when g.CODIGO='INICIAL(5)' THEN 5 END),''+e.seccion) as codigoGrado 
        from MT_CtasxCobrar c
        left join MT_DocIngreso d on d.iddocingreso=c.iddocingreso
        inner join MO_UnidadNegocio uni on uni.unineg=c.unineg
        inner join MX_Estudiante e on e.idestudiante = c.idestudiante
        inner join MX_Persona per on per.idpersona=e.idestudiante
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico g on g.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico n on n.idnivelacademico=g.idnivelacademico
        where  c.anio=@anio
        and isnull(idtipostatusctacte,19401) not in (19406) and monto!=isnull(dsctobeca,0)   
        and fechavenc <![CDATA[   <  ]]>(case when mes=month(@fecha) then @fechavenmesfinmas1 else @fecha end) and c.anio=@anio  
        and (case when c.fechapago is not null then (case when convert(date,c.fechapago)<![CDATA[    >  ]]>  @fecha then 0 else 1 end) else 0 end)=0
        and c.unineg=@unineg AND C.MES<![CDATA[>= ]]>@MES AND C.MES<![CDATA[<= ]]>@MESFIN
        order by (concat(per.apepat,' '+per.apemat,', '+per.nombre)) asc
    </select>
    <select  id="obtenerPenionesPagadasLPM" parameterType="map" resultType="pe.marista.sigma.bean.reporte.PensionesPorCobrarLPMRepBean">
        declare @anio integer,@mes integer, @unineg varchar(6),@FECHA DATETIME,@MESFIN INT 
        set @anio=#{anio}
        set @mes=#{mes}
        SET @MESFIN=#{mesFin}
        set @unineg=#{uniNeg}
        SET @FECHA= #{fechaCorte}
        declare @fechavenmesfinmas1 date = (select convert(date,fechavenc) from MT_CronogramaPago where mes= (case when @MES=1 then 2 else @MES end)  and anio=@anio) 
        set @fechavenmesfinmas1= convert(date, DATEADD(day, +1, @fechavenmesfinmas1) ) 
        select
        UPPER(uni.nombreUniNeg) AS nombreUniNeg,
        uni.RUC as ruc,
        upper('Pensiones pagadas al '+
        CONVERT(VARCHAR(25),@FECHA,106 ) )  as titulo ,
        upper('Pensiones correspondientes al periodo: '+CONVERT(VARCHAR(4),@ANIO)) AS subTitulo,
        @anio as anio, 
        (case when c.mes=1 or c.mes=2 then 'MATRICULA'
        when c.mes=3 then 'MARZO'
        when c.mes=4 then 'ABRIL'
        when c.mes=5 then 'MAYO'
        when c.mes=6 then 'JUNIO'
        when c.mes=7 then 'JULIO'
        when c.mes=8 then 'AGOSTO'
        when c.mes=9 then 'SETIEMBRE'
        when c.mes=10 then 'OCTUBRE'
        when c.mes=11 then 'NOVIEMBRE'
        when c.mes=12 then 'DICIEMBRE'
        end) as mes, e.codigo as codigoEstudiante,
        concat(p.apepat,' '+p.apemat,', '+p.nombre) as nombreCompleto,
        p.nrodoc as nroDoc,
        concat(convert(varchar(10),d.serie),' - '+convert(varchar(10),d.nroDoc)) as numeroRecibo,
        CONVERT(VARCHAR(20),c.fechavenc,103) as fechaVencimiento,
        CONVERT(varchar, CAST(isnull( isnull( isnull(c.monto,0),0) ,0) AS money), 1)
        as monto, convert(varchar(20),c.fechapago,103) as fechaPago, pag.codigo as lugarPago,
        CONVERT(varchar, CAST(isnull( isnull((isnull(c.monto,0)-isnull(c.dsctoBeca,0)),0) ,0) AS money), 1) as montoPagado,
        stado.codigo as estadoAlumno 
        ,concat((case when n.nombre='Inicial' then'I' WHEN n.nombre='Primaria' then 'P'
        when n.nombre='Secundaria' then 'S' end),''+
        (case when g.CODIGO='PRIMERO' THEN 1
        when g.CODIGO='SEGUNDO' THEN 2
        when g.CODIGO='TERCERO' THEN 3
        when g.CODIGO='CUARTO' THEN 4
        when g.CODIGO='QUINTO' THEN 5
        when g.CODIGO='SEXTO' THEN 6
        when g.CODIGO='SETIMO' THEN 1
        when g.CODIGO='OCTAVO' THEN 2
        when g.CODIGO='NOVENO' THEN 3
        when g.CODIGO='DECIMO' THEN 4
        when g.CODIGO='UNDECIMO' THEN 5
        when g.CODIGO='DECIMO-BACH' THEN 4
        when g.CODIGO='UNDECIMO-BACH' THEN 5
        when g.CODIGO='PRE-INICIAL(3)' THEN 3
        when g.CODIGO='PRE-INICIAL(4)' THEN 4
        when g.CODIGO='INICIAL(5)' THEN 5 END),''+e.seccion) as codigoGrado 
        from MT_CtasxCobrar c
        LEFT join MT_DocIngreso d on d.iddocingreso=c.iddocingreso 
        LEFT join MO_Codigo pag on pag.idcodigo=d.idtipolugarpago
        inner join MO_UnidadNegocio uni on uni.unineg=c.unineg
        inner join MX_Estudiante e on e.idestudiante=c.idestudiante
        inner join MO_Codigo as stado on stado.idcodigo=e.idtipostatusest
        inner join MX_Persona p on p.idpersona=e.idestudiante
        inner join MX_Matricula m on m.idestudiante=c.idestudiante and m.anio=@anio
        inner join MX_GradoAcademico g on g.idgradoacademico=m.idgradoacademico
        inner join MX_NivelAcademico n on n.idnivelacademico=g.idnivelacademico
        where c.anio=@anio and uni.unineg=@unineg
        and c.fechapago <![CDATA[ <=  ]]> CONVERT(VARCHAR(25),DATEADD(dd,-(DAY(DATEADD(mm,1,@FECHA))),DATEADD(mm,1,@FECHA)),105)
        AND C.fechapago IS NOT NULL AND C.MES<![CDATA[>= ]]>@MES AND C.MES<![CDATA[<= ]]>@MESFIN
        order by concat(p.apepat,' '+p.apemat,', '+p.nombre) asc,c.mes asc
    </select>
    <select  id="obtenerCabeceraEstadoRecibo" parameterType="map" resultType="pe.marista.sigma.bean.reporte.EstadoRecibosRepBean"> 
        declare @anio varchar(6)=#{anio} 
        select @anio as anio,uni.nombreUniNeg as nombreUniNeg, uni.unineg as uniNeg from MO_UnidadNegocio uni
        where uni.unineg in('BARINA','CHAMPS','SANLUI','SANJOC','CHAMPC','SANJOH','SECTOR','STAMAR','STAROS','SANJOS','CRISTO')
    </select>
    <select  id="obtenerEstadosRecibos" parameterType="map" resultType="pe.marista.sigma.bean.reporte.EstadoRecibosRepBean">
        <if test="opcion == 1" >
            declare @unineg varchar(6)=#{uniNeg}
            declare @anio int= #{anio} 
            declare @mes int =#{mes}
            select
            @anio as anio,
            count(*) as nroAlumnos , uni.nombreuniNeg as nombreUniNeg
            , (select count(*) from MT_CtasxCobrar cw 
            LEFT join MT_DocIngreso dw on dw.iddocingreso=cw.iddocingreso
            where dw.flgImpresion=1 and cw.anio=@anio and cw.mes=@mes and cw.unineg=@unineg) as nroRecibosImpresos,
            (select count(*) from MT_CtasxCobrar cw 
            LEFT join MT_DocIngreso dw on dw.iddocingreso=cw.iddocingreso
            where (dw.flgImpresion is null or dw.flgImpresion=0) and cw.anio=@anio and cw.mes=@mes and cw.unineg=@unineg) as nroRecibosNoImpresos
            ,(case when c.mes=2 then 'MATRICULA'
            when c.mes=3 then 'MARZO'
            when c.mes=4 then 'ABRIL'
            when c.mes=5 then 'MAYO'
            when c.mes=6 then 'JUNIO'
            when c.mes=7 then 'JULIO'
            when c.mes=8 then 'AGOSTO'
            when c.mes=9 then 'SETIEMBRE'
            when c.mes=10 then 'OCTUBRE'
            when c.mes=11 then 'NOVIEMBRE'
            when c.mes=12 then 'DICIEMBRE' END) AS mes,
            (select count(*) from MT_CtasxCobrar cw 
            LEFT join MT_DocIngreso dw on dw.iddocingreso=cw.iddocingreso 
            where cw.anio=@anio and mes=@mes and cw.unineg=@unineg and idtipostatusctacte=19404 
            and (dw.flgImpresion=0 or dw.flgImpresion is null)) as cantPagados
            ,(SELECT COUNT(*) FROM MT_CtasxCobrar cw 
            LEFT join MT_DocIngreso dw on dw.iddocingreso=cw.iddocingreso 
            WHERE cw.anio=@anio and mes=@mes and cw.unineg=@unineg and idtipostatusctacte=19406 
            and (dw.flgImpresion=0 or dw.flgImpresion is null)) AS cantSinServicio
            ,(SELECT COUNT(*) FROM MT_CtasxCobrar cw 
            LEFT join MT_DocIngreso dw on dw.iddocingreso=cw.iddocingreso 
            WHERE cw.anio=@anio and mes=@mes and cw.unineg=@unineg and idtipostatusctacte=19401
            and (dw.flgImpresion=0 or dw.flgImpresion is null)
            ) AS cantDeben 
            from MT_CtasxCobrar c
            inner join mo_unidadNegocio uni on uni.unineg=c.unineg
            LEFT join MT_DocIngreso d on d.iddocingreso=c.iddocingreso
            where c.anio=@anio and c.mes=@mes and c.unineg=@unineg
            group by c.mes ,uni.nombreunineg
        </if>
        <if test="opcion == 2" >
            begin try
            declare @unineg varchar(6)= #{uniNeg} 
            declare @anio varchar(6)= #{anio}
            declare @mes varchar(6) = #{mes}
            declare @direccion1 varchar(60) = (case when @unineg= 'champs' then 'sigma_desa_champs.dbo.MT_CtasxCobrar'
            when @unineg='barina' then 'sigma_desa_barina.dbo.MT_CtasxCobrar' 
            when @unineg='champc' then 'sigma_desa_champc.dbo.MT_CtasxCobrar'
            when @unineg='sanjoh' then 'sigma_desa_sanjoh.dbo.MT_CtasxCobrar'
            when @unineg='sanjoc' then 'sigma_desa_sanjoc.dbo.MT_CtasxCobrar' 
            when @unineg='sanlui' then 'sigma_desa_sanlui.dbo.MT_DocIngreso'
            when @unineg='stamar' then 'sigma_desa_stamar.dbo.MT_DocIngreso'
            when @unineg='staros' then 'sigma_desa_staros.dbo.MT_DocIngreso'
            when @unineg='sector' then 'sigma_desa_sector.dbo.MT_DocIngreso'
            when @unineg='sanjos' then 'sigma_desa_sanjos.dbo.MT_DocIngreso'
            when @unineg='cristo' then 'sigma_desa_cristo.dbo.MT_DocIngreso'
            end)
            declare @direccion2 varchar(60) = (case when @unineg= 'champs' then 'sigma_desa_champs.dbo.MT_DocIngreso'
            when @unineg='barina' then 'sigma_desa_barina.dbo.MT_DocIngreso' 
            when @unineg='champc' then 'sigma_desa_champc.dbo.MT_DocIngreso'
            when @unineg='sanjoh' then 'sigma_desa_sanjoh.dbo.MT_DocIngreso' 
            when @unineg='sanjoc' then 'sigma_desa_sanjoc.dbo.MT_DocIngreso' 
            when @unineg='sanlui' then 'sigma_desa_sanlui.dbo.MT_DocIngreso'
            when @unineg='stamar' then 'sigma_desa_stamar.dbo.MT_DocIngreso'
            when @unineg='staros' then 'sigma_desa_staros.dbo.MT_DocIngreso'
            when @unineg='sector' then 'sigma_desa_sector.dbo.MT_DocIngreso'
            when @unineg='sanjos' then 'sigma_desa_sanjos.dbo.MT_DocIngreso'
            when @unineg='cristo' then 'sigma_desa_cristo.dbo.MT_DocIngreso'
            end) 
            declare @sql nvarchar(max)
            set @sql='select '+@anio +' as anio,
            count(*) as nroAlumnos , uni.nombreuniNeg as nombreUniNeg
            , (select count(*) from '+ @direccion1 + ' cw 
            LEFT join '+ @direccion2 + ' dw on dw.iddocingreso=cw.iddocingreso
            where dw.flgImpresion=1 and cw.anio='+@anio +'and cw.mes='+ @mes +' and cw.unineg='+''''+@unineg+''''+') as nroRecibosImpresos,
            (select count(*) from '+ @direccion1 + ' cw 
            LEFT join  '+ @direccion2 + '  dw on dw.iddocingreso=cw.iddocingreso
            where (dw.flgImpresion is null or dw.flgImpresion=0) and cw.anio='+@anio +' and cw.mes='+ @mes +' and cw.unineg='+''''+@unineg+''''+') as nroRecibosNoImpresos
            ,(case when c.mes=2 then ''MATRICULA''
            when c.mes=3 then ''MARZO''
            when c.mes=4 then ''ABRIL''
            when c.mes=5 then ''MAYO''
            when c.mes=6 then ''JUNIO''
            when c.mes=7 then ''JULIO''
            when c.mes=8 then ''AGOSTO''
            when c.mes=9 then ''SETIEMBRE''
            when c.mes=10 then ''OCTUBRE''
            when c.mes=11 then ''NOVIEMBRE''
            when c.mes=12 then ''DICIEMBRE'' END) AS mes,
            (select count(*) from '+ @direccion1 + ' cw 
            LEFT join  '+ @direccion2 + '  dw on dw.iddocingreso=cw.iddocingreso 
            where cw.anio='+@anio +' and mes='+ @mes +' and cw.unineg='+''''+@unineg+''''+' and idtipostatusctacte=19404 
            and (dw.flgImpresion=0 or dw.flgImpresion is null)) as cantPagados
            ,(SELECT COUNT(*) FROM '+ @direccion1 + ' cw 
            LEFT join  '+ @direccion2 + '  dw on dw.iddocingreso=cw.iddocingreso 
            WHERE cw.anio='+@anio +' and mes='+ @mes +' and cw.unineg='+''''+@unineg+''''+' and idtipostatusctacte=19406 
            and (dw.flgImpresion=0 or dw.flgImpresion is null)) AS cantSinServicio
            ,(SELECT COUNT(*) FROM '+ @direccion1 + ' cw 
            LEFT join  '+ @direccion2 + '  dw on dw.iddocingreso=cw.iddocingreso 
            WHERE cw.anio='+@anio +' and mes='+ @mes +' and cw.unineg='+''''+@unineg+''''+' and idtipostatusctacte=19401
            and (dw.flgImpresion=0 or dw.flgImpresion is null)
            ) AS cantDeben 
            from '+ @direccion1 + ' c
            INNER JOIN MO_UNIDADNEGOCIO uni ON uni.unineg=c.unineg
            LEFT join  '+ @direccion2 + '  d on d.iddocingreso=c.iddocingreso
            where c.anio='+@anio +' and c.mes='+ @mes +' and c.unineg='+''''+@unineg+''''+'
            group by c.mes ,uni.nombreunineg'

            exec sp_executesql @sql
            end try
            begin catch print 'falta' end catch
        </if>
    </select> 
    <select  id="obtenerResumenMatriculaGeneral" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ResumenMatriculaRepBean">
        declare @anio integer,@mes integer,@fechaCorte date,@uniNeg varchar(6)
        set @anio=#{anio}
        set @mes=2
        set @fechaCorte=#{fechaCorte}
        set @uniNeg=#{uniNeg}

        select @anio as anio, 
        'Resumen de Matrícula '+convert(varchar(6),@anio) as titulo, convert(varchar(20),@fechaCorte,103)  as fechaCorte,
        uni.nombreUniNeg as nombreUniNeg, uni.unineg as uniNeg
        from MO_UnidadNegocio uni   
    </select>
    <select  id="obtenerResumenMatricula" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ResumenMatriculaRepBean">
        <if test="opcion == 1" >
            declare @unineg varchar(6)=#{uniNeg}
            declare @anio int= #{anio} 
            declare @mes int =2
            declare @fechaCorte date =#{fechaCorte}
            select m1.anio,uni.nombreUniNeg,
            'Resumen de Matrícula '+convert(varchar(6),m1.anio) as titulo, convert(varchar(20),@fechaCorte,103)  as fechaCorte,
            n1.nombre as nivelAcademico,
            g1.nombre as gradoAcademico,
            (select count(*) from MX_Matricula m
            inner join MX_Admision a on a.idestudiante=m.idestudiante and a.anio=@anio
            inner join MX_GradoAcademico g on g.idgradoacademico=m.idgradoacademico
            inner join MX_NivelAcademico n on n.idnivelacademico=g.idnivelacademico
            where m.anio=@anio and g.idgradoacademico=g1.idgradoacademico and n.idnivelacademico=n1.idnivelacademico
            and convert(varchar(20),a.fechaingreso,105)<![CDATA[ <=  ]]>@fechaCorte and idtipostatuspostulante=13802 and a.unineg=@uniNeg) as ingresantes,
            (select count(*) from MX_Matricula m2
            inner join MX_GradoAcademico g2 on g2.idgradoacademico=m2.idgradoacademico
            inner join MX_NivelAcademico n2 on n2.idnivelacademico=g2.idnivelacademico
            where m2.anio=@anio and g2.idgradoacademico=g1.idgradoacademico and n2.idnivelacademico=n1.idnivelacademico
            and m2.idestudiante not in(select idestudiante from mx_admision aa where aa.anio=@anio)
            and convert(varchar(20),m2.creafecha,105)<![CDATA[ <=  ]]>@fechaCorte and m2.unineg=@uniNeg
            ) as promovido,
            (select count(*) from MX_Matricula m3 
            inner join MX_GradoAcademico g3 on g3.idgradoacademico=m3.idgradoacademico
            inner join MX_NivelAcademico n3 on n3.idnivelacademico=g3.idnivelacademico
            where m3.anio=@anio and m3.flgmatricula=1 and g3.idgradoacademico=g1.idgradoacademico and n3.idnivelacademico=n1.idnivelacademico
            and convert(varchar(20),m3.fechamatricula,105)<![CDATA[ <=  ]]>@fechaCorte and m3.unineg=@uniNeg) as matriculados,
            (select count(*) from MT_CtasxCobrar c
            inner join MX_Matricula m4 on m4.idestudiante=c.idestudiante
            inner join MX_GradoAcademico g4 on g4.idgradoacademico=m4.idgradoacademico
            inner join MX_NivelAcademico n4 on n4.idnivelacademico=g4.idnivelacademico
            where c.mes=@mes and c.anio=@anio and g4.idgradoacademico=g1.idgradoacademico and n4.idnivelacademico=n1.idnivelacademico  
            and m4.anio=@anio and idtipostatusctacte=19404 and convert(varchar(20),c.fechapago,105)<![CDATA[ <=  ]]>@fechaCorte and m4.unineg=@uniNeg
            ) as cantidadPagados
            from MX_Matricula m1
            inner join MX_GradoAcademico g1 on g1.idgradoacademico=m1.idgradoacademico
            inner join MX_NivelAcademico n1 on n1.idnivelacademico=g1.idnivelacademico 
            inner join MO_UnidadNegocio uni on uni.unineg=m1.unineg
            where m1.anio=@anio and m1.unineg=@uniNeg
            group by n1.idnivelacademico,g1.nombre,g1.idgradoacademico,n1.nombre,m1.anio,uni.nombreUniNeg
            order by n1.idnivelacademico desc,g1.idgradoacademico asc 
        </if>
        <if test="opcion == 2" >
            begin try
            declare @unineg varchar(6)= #{uniNeg} 
            declare @anio int= #{anio}
            declare @mes int = 2
            declare @fechaCorte date =#{fechaCorte}
             
            declare @sql nvarchar(max)
            set @sql='select '+ convert(varchar(20),@anio)+' as anio,uni.nombreUniNeg,'+
            '''Resumen de Matrícula''+'+'convert(varchar(6),m1.anio) as titulo, '+convert(varchar(20),@fechaCorte,103) +' as fechaCorte,
            n1.nombre as nivelAcademico,
            g1.nombre as gradoAcademico,
            (select count(*) from sigma_desa_'+@uniNeg+'.dbo.MX_Matricula m
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_Admision a on a.idestudiante=m.idestudiante and a.anio='+ convert(varchar(20),@anio)+'
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_GradoAcademico g on g.idgradoacademico=m.idgradoacademico
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_NivelAcademico n on n.idnivelacademico=g.idnivelacademico
            where m.anio='+ convert(varchar(20),@anio)+' and g.idgradoacademico=g1.idgradoacademico and n.idnivelacademico=n1.idnivelacademico
            and convert(varchar(20),a.fechaingreso,105)<![CDATA[ <=  ]]>'+'convert(DATE,'+''''+convert(varchar(20),@fechaCorte,105)+''')'+ 'and idtipostatuspostulante=13802 and a.unineg='''+@uniNeg+''') as ingresantes,
            (select count(*) from sigma_desa_'+@uniNeg+'.dbo.MX_Matricula m2
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_GradoAcademico g2 on g2.idgradoacademico=m2.idgradoacademico
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_NivelAcademico n2 on n2.idnivelacademico=g2.idnivelacademico
            where m2.anio='+ convert(varchar(20),@anio)+' and g2.idgradoacademico=g1.idgradoacademico and n2.idnivelacademico=n1.idnivelacademico
            and m2.idestudiante not in(select idestudiante from sigma_desa_'+@uniNeg+'.dbo.mx_admision aa where aa.anio='+ convert(varchar(20),@anio)+')
            and convert(varchar(20),m2.creafecha,105)<![CDATA[ <=  ]]>'+'convert(DATE,'+''''+convert(varchar(20),@fechaCorte,105)+''')'+ 'and m2.unineg='''+@uniNeg+'''
            ) as promovido,
            (select count(*) from sigma_desa_'+@uniNeg+'.dbo.MX_Matricula m3 
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_GradoAcademico g3 on g3.idgradoacademico=m3.idgradoacademico
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_NivelAcademico n3 on n3.idnivelacademico=g3.idnivelacademico
            where m3.anio='+ convert(varchar(20),@anio)+' and m3.flgmatricula=1 and g3.idgradoacademico=g1.idgradoacademico and n3.idnivelacademico=n1.idnivelacademico
            and convert(varchar(20),m3.fechamatricula,105)<![CDATA[ <=  ]]>'+'convert(DATE,'+''''+convert(varchar(20),@fechaCorte,105)+''')'+ 'and m3.unineg='''+@uniNeg+''') as matriculados,
            (select count(*) from sigma_desa_'+@uniNeg+'.dbo.MT_CtasxCobrar c
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_Matricula m4 on m4.idestudiante=c.idestudiante
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_GradoAcademico g4 on g4.idgradoacademico=m4.idgradoacademico
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_NivelAcademico n4 on n4.idnivelacademico=g4.idnivelacademico
            where c.mes='+ convert(varchar(20),@mes)+' and c.anio='+ convert(varchar(20),@anio)+' and g4.idgradoacademico=g1.idgradoacademico and n4.idnivelacademico=n1.idnivelacademico  
            and m4.anio='+ convert(varchar(20),@anio)+' and idtipostatusctacte=19404 and convert(varchar(20),c.fechapago,105)<![CDATA[ <=  ]]>'+'convert(DATE,'+''''+convert(varchar(20),@fechaCorte,105)+''')'+ 'and m4.unineg='''+@uniNeg+'''
            ) as cantidadPagados
            from sigma_desa_'+@uniNeg+'.dbo.MX_Matricula m1
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_GradoAcademico g1 on g1.idgradoacademico=m1.idgradoacademico
            inner join sigma_desa_'+@uniNeg+'.dbo.MX_NivelAcademico n1 on n1.idnivelacademico=g1.idnivelacademico 
            inner join sigma_desa_'+@uniNeg+'.dbo.MO_UnidadNegocio uni on uni.unineg=m1.unineg
            where m1.anio='+ convert(varchar(20),@anio)+' and m1.unineg='''+@uniNeg+'''
            group by n1.idnivelacademico,g1.nombre,g1.idgradoacademico,n1.nombre,m1.anio,uni.nombreUniNeg
            order by n1.idnivelacademico desc,g1.idgradoacademico asc '

            exec sp_executesql @sql
            end try
            begin catch print 'falta' end catch
        </if>
    </select> 
    <select  id="obtenerVerificacionPlanilla" parameterType="map" resultType="pe.marista.sigma.bean.reporte.VerificacionIngresoPlanillaRepBean">
        <if test="opcion == 1" >
            declare @unineg varchar(6)=#{uniNeg}
            declare @anio int= #{anio}  
            SELECT anio,'CANTIDAD DE PLANILLA' AS estado, [1] AS enero , [2] AS febrero, [3] AS marzo, [4]AS abril, [5]AS mayo, [6]AS junio, [7]AS julio
            , [13]AS julio_grati,
            [8]AS agosto, [9]AS setiembre, 
            [10]AS octubre, [11]AS noviembre, [12]AS diciembre,[14] AS diciembre_grati
            FROM   
            (SELECT idPlanilla, mes,anio
            FROM MO_PlanillaNoProcesado where anio=@anio) p  
            PIVOT  
            (   
            COUNT (IDPLANILLA)  
            FOR MES IN  
            ( [1], [2], [3], [4], [5], [6], [7], [13], [8], [9], [10], [11], [12],[14] )  
            ) AS pvt   
            UNION ALL
            SELECT anio,'PROCESADOS' AS estado, [1] AS enero , [2] AS febrero, [3] AS marzo, [4]AS abril, [5]AS mayo, [6]AS junio, [7]AS julio
            , [13]AS julio_grati
            , [8]AS agosto, [9]AS setiembre, 
            [10]AS octubre, [11]AS noviembre, [12]AS diciembre,[14] AS diciembre_grati
            FROM   
            (SELECT idPlanilla, MES,anio
            FROM MO_Planilla where anio=@anio) p  
            PIVOT  
            (  
            COUNT (IDPLANILLA)  
            FOR MES IN  
            ( [1], [2], [3], [4], [5], [6], [7], [13], [8], [9], [10], [11], [12],[14] )  
            ) AS pvt    

        </if>
        <if test="opcion == 2" >
            begin try
            declare @unineg varchar(6)=#{uniNeg}
            declare @anio varchar(10) =#{anio}   
            declare @direccion1 varchar(60) = (case when @unineg= 'champs' then 'sigma_desa_champs.dbo.MO_PlanillaNoProcesado'
            when @unineg='barina' then 'sigma_desa_barina.dbo.MO_PlanillaNoProcesado' 
            when @unineg='champc' then 'sigma_desa_champc.dbo.MO_PlanillaNoProcesado'
            when @unineg='sanjoh' then 'sigma_desa_sanjoh.dbo.MO_PlanillaNoProcesado' 
            when @unineg='sanjoc' then 'sigma_desa_sanjoc.dbo.MO_PlanillaNoProcesado' 
            when @unineg='sanlui' then 'sigma_desa_sanlui.dbo.MO_PlanillaNoProcesado'
            when @unineg='stamar' then 'sigma_desa_stamar.dbo.MO_PlanillaNoProcesado'
            when @unineg='staros' then 'sigma_desa_staros.dbo.MO_PlanillaNoProcesado'
            when @unineg='sector' then 'sigma_desa_sector.dbo.MO_PlanillaNoProcesado'
            when @unineg='sanjos' then 'sigma_desa_sanjos.dbo.MO_PlanillaNoProcesado'
            when @unineg='cristo' then 'sigma_desa_cristo.dbo.MO_PlanillaNoProcesado'
            end) 
            declare @direccion2 varchar(60) =(case when @unineg= 'champs' then 'sigma_desa_champs.dbo.MO_Planilla'	
            when @unineg='barina' then 'sigma_desa_barina.dbo.MO_Planilla' 
            when @unineg='champc' then 'sigma_desa_champc.dbo.MO_Planilla'
            when @unineg='sanjoh' then 'sigma_desa_sanjoh.dbo.MO_Planilla' 
            when @unineg='sanjoc' then 'sigma_desa_sanjoc.dbo.MO_Planilla' 
            when @unineg='sanlui' then 'sigma_desa_sanlui.dbo.MO_Planilla'
            when @unineg='stamar' then 'sigma_desa_stamar.dbo.MO_Planilla'
            when @unineg='staros' then 'sigma_desa_staros.dbo.MO_Planilla'
            when @unineg='sector' then 'sigma_desa_sector.dbo.MO_Planilla'
            when @unineg='sanjos' then 'sigma_desa_sanjos.dbo.MO_Planilla'
            when @unineg='cristo' then 'sigma_desa_cristo.dbo.MO_Planilla'
            end) 
            declare @sql nvarchar(max)
            set @sql= 'SELECT anio,''CANTIDAD DE PLANILLA'' AS estado, [1] AS enero , [2] AS febrero, [3] AS marzo, [4]AS abril, [5]AS mayo, [6]AS junio, [7]AS julio
            , [13]AS julio_grati,
            [8]AS agosto, [9]AS setiembre, 
            [10]AS octubre, [11]AS noviembre, [12]AS diciembre,[14] AS diciembre_grati
            FROM   
            (SELECT idPlanilla, mes,anio
            FROM '+@direccion1+ ' where anio='+@anio+') p  
            PIVOT  
            (  
            COUNT (IDPLANILLA)  
            FOR MES IN  
            ( [1], [2], [3], [4], [5], [6], [7], [13], [8], [9], [10], [11], [12],[14] )  
            ) AS pvt   
            UNION ALL
            SELECT anio,''PROCESADOS'' AS estado, [1] AS enero , [2] AS febrero, [3] AS marzo, [4]AS abril, [5]AS mayo, [6]AS junio, [7]AS julio
            , [13]AS julio_grati
            , [8]AS agosto, [9]AS setiembre, 
            [10]AS octubre, [11]AS noviembre, [12]AS diciembre,[14] AS diciembre_grati
            FROM   
            (SELECT idPlanilla, MES,anio
            FROM '+@direccion2+' where anio='+@anio+') p  
            PIVOT  
            (  
            COUNT (IDPLANILLA)  
            FOR MES IN  
            ( [1], [2], [3], [4], [5], [6], [7], [13], [8], [9], [10], [11], [12],[14] )  
            ) AS pvt' 
            exec sp_executesql @sql
            end try
            begin catch print 'falta' end catch
        </if>
    </select> 
    <select  id="obtenerVerificacionPlanillaCTS" parameterType="map" resultType="pe.marista.sigma.bean.reporte.VerificacionIngresoPlanillaRepBean">
        <if test="opcion == 1" >
            declare @unineg varchar(6)=#{uniNeg}
            declare @anio int= #{anio}  
            SELECT anio,'CANTIDAD DE CTS' AS estado, [5]AS mayo_cts, [11]AS noviembre_cts
            FROM (SELECT idPlanillactsNoProcesado, parte,anio FROM MO_PlanillaCTSNoProcesados where anio=@anio
            and unineg=@unineg) p
            PIVOT ( COUNT (idPlanillactsNoProcesado) FOR parte IN (  [5], [11] ) ) AS pvt 
            
            UNION ALL SELECT anio,'PROCESADOS' AS estado, [5]AS mayo_cts, [11]AS noviembre_cts
            FROM (SELECT idPlanillacts, parte,anio FROM MO_PlanillaCTS where anio=@anio and unineg=@unineg) 
            p PIVOT ( COUNT (idPlanillacts) 
            FOR parte IN ( [5], [11]) ) AS 
            pvt 
        </if>
        <if test="opcion == 2" >
            begin try
            declare @unineg varchar(6)=#{uniNeg}
            declare @anio varchar(10) =#{anio}   
            declare @direccion1 varchar(60) = (case when @unineg= 'champs' then 'sigma_desa_champs.dbo.MO_PlanillaCTSNoProcesados'
            when @unineg='barina' then 'sigma_desa_barina.dbo.MO_PlanillaCTSNoProcesados' 
            when @unineg='champc' then 'sigma_desa_champc.dbo.MO_PlanillaCTSNoProcesados'
            when @unineg='sanjoh' then 'sigma_desa_sanjoh.dbo.MO_PlanillaCTSNoProcesados' 
            when @unineg='sanjoc' then 'sigma_desa_sanjoc.dbo.MO_PlanillaCTSNoProcesados' 
            when @unineg='sanlui' then 'sigma_desa_sanlui.dbo.MO_PlanillaCTSNoProcesados'
            when @unineg='stamar' then 'sigma_desa_stamar.dbo.MO_PlanillaCTSNoProcesados'
            when @unineg='staros' then 'sigma_desa_staros.dbo.MO_PlanillaCTSNoProcesados'
            when @unineg='sector' then 'sigma_desa_sector.dbo.MO_PlanillaCTSNoProcesados'
            when @unineg='sanjos' then 'sigma_desa_sanjos.dbo.MO_PlanillaCTSNoProcesados'
            when @unineg='cristo' then 'sigma_desa_cristo.dbo.MO_PlanillaCTSNoProcesados'
            end) 
            declare @direccion2 varchar(60) =(case when @unineg= 'champs' then 'sigma_desa_champs.dbo.MO_PlanillaCTS'	
            when @unineg='barina' then 'sigma_desa_barina.dbo.MO_PlanillaCTS' 
            when @unineg='champc' then 'sigma_desa_champc.dbo.MO_PlanillaCTS'
            when @unineg='sanjoh' then 'sigma_desa_sanjoh.dbo.MO_PlanillaCTS' 
            when @unineg='sanjoc' then 'sigma_desa_sanjoc.dbo.MO_PlanillaCTS' 
            when @unineg='sanlui' then 'sigma_desa_sanlui.dbo.MO_PlanillaCTS'
            when @unineg='stamar' then 'sigma_desa_stamar.dbo.MO_PlanillaCTS'
            when @unineg='staros' then 'sigma_desa_staros.dbo.MO_PlanillaCTS'
            when @unineg='sector' then 'sigma_desa_sector.dbo.MO_PlanillaCTS'
            when @unineg='sanjos' then 'sigma_desa_sanjos.dbo.MO_PlanillaCTS'
            when @unineg='cristo' then 'sigma_desa_cristo.dbo.MO_PlanillaCTS'
            end) 
            declare @sql nvarchar(max)
            set @sql= 'SELECT '+@anio+',''CANTIDAD DE CTS'' AS estado, [5]AS mayo_cts, [11]AS noviembre_cts
            FROM (SELECT idPlanillactsNoProcesado, parte,anio FROM '+@direccion1+' where anio='+@anio+' and unineg='''+@unineg+''') p
            PIVOT ( COUNT (idPlanillactsNoProcesado) FOR parte IN (  [5], [11] ) ) AS pvt 

            UNION ALL SELECT '+@anio+',''PROCESADOS'' AS estado, [5]AS mayo_cts, [11]AS noviembre_cts
            FROM (SELECT idPlanillacts, parte,anio FROM '+@direccion2+' where anio='+@anio+' and unineg='''+@unineg+''') p PIVOT ( COUNT (idPlanillacts) 
            FOR parte IN ( [5], [11]) ) AS 
            pvt'  
            exec sp_executesql @sql
            end try
            begin catch print 'falta' end catch
             
        </if>
    </select> 
</mapper>