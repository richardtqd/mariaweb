<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pe.marista.sigma.dao.FamiliaDAO">
    <sql id="consultaCampos">
        SELECT  
        fam.idFamilia,
        fam.nombre,
        fam.idPadre,
         
        famPadre.profesion as profesionPadre,
        famPadre.ocupacion as ocupacionPadre,
        famPadre.flgVive as flgVivePadre,
        famPadre.flgCatolico as flgCatolicoPadre,
        famPadre.flgMarista as flgMaristaPadre,
        famPadre.telefonoFijo as telefonoFijoPadre,
        famPadre.telefonoCelular as telefonoCelularPadre,
        famPadre.anioEgresoColegio as anioEgresoColegioPadre,
        
        famPadre.nombreColegio as nombreColegioPadre,
        famPadre.telefonoOficina as telefonoOficinaPadre,
        famPadre.centroLaboral as centroLaboralPadre,
        famPadre.hobby as hobbyPadre,
        famPadre.flgGrupoParroquial as flgGrupoParroquialPadre,
        famPadre.nombreParroquia as nombreParroquiaPadre,
        famPadre.cargo as cargoPadre,
        
        
        perPadre.apepat as apepatPadre,
        perPadre.apemat as apematPadre,
        perPadre.nombre as nombrePadre,
        perPadre.idTipoDocPer as idTipoDocPerPadre,
        perPadre.nroDoc as nroDocPadre,
        perPadre.fecNac as fecNacPadre,
        perPadre.correo as correoPadre,
        perPadre.idNacionalidad as idNacionalidadPadre,
        
        
        fam.idMadre,
        famMadre.profesion as profesionMadre,
        famMadre.ocupacion as ocupacionMadre,
        famMadre.flgVive as flgViveMadre,
        famMadre.flgCatolico as flgCatolicoMadre,
        famMadre.flgMarista as flgMaristaMadre,
        famMadre.telefonoFijo as telefonoFijoMadre,
        famMadre.telefonoCelular as telefonoCelularMadre,
        famMadre.anioEgresoColegio as anioEgresoColegioMadre,
        
        famMadre.nombreColegio as nombreColegioMadre,
        famMadre.telefonoOficina as telefonoOficinaMadre,
        famMadre.centroLaboral as centroLaboralMadre,
        famMadre.hobby as hobbyMadre,
        famMadre.flgGrupoParroquial as flgGrupoParroquialMadre,
        famMadre.nombreParroquia as nombreParroquiaMadre,
        famMadre.cargo as cargoMadre,
        
        perMadre.apepat as apepatMadre,
        perMadre.apemat as apematMadre,
        perMadre.nombre as nombreMadre,
        perMadre.idTipoDocPer as idTipoDocPerMadre,
        perMadre.nroDoc as nroDocMadre,
        perMadre.fecNac as fecNacMadre,
        perMadre.correo as correoMadre,
        perMadre.idNacionalidad as idNacionalidadMadre,
        fam.status,
        fam.vehiculo1,
        fam.vehiculo2,
        fam.creaPor,
        fam.creaFecha,
        fam.uniNeg,
        fam.idGrupoFamiliar
        FROM MX_Familia fam
        Inner Join MX_Familiar famPadre On fam.idPadre=famPadre.idFamiliar 
        Inner Join MX_Persona perPadre On famPadre.idFamiliar=perPadre.idPersona
        Inner Join MX_Familiar famMadre On fam.idMadre=famMadre.idFamiliar 
        Inner Join MX_Persona perMadre On famMadre.idFamiliar=perMadre.idPersona
    </sql>
    <sql id="consultaCamposSim">
        SELECT 
        fam.idFamilia,
        fam.nombre,
        fam.idPadre,    

        perPadre.apepat as apepatPadre,
        perPadre.apemat as apematPadre,
        perPadre.nombre as nombrePadre,
        perPadre.idTipoDocPer as idTipoDocPerPadre,
        perPadre.nroDoc as nroDocPadre,
        fam.idMadre,

        perMadre.apepat as apepatMadre,
        perMadre.apemat as apematMadre,
        perMadre.nombre as nombreMadre,
        perMadre.idTipoDocPer as idTipoDocPerMadre,
        
        perMadre.nroDoc as nroDocMadre,
       
        fam.status,

        fam.creaPor,
        fam.creaFecha,
        fam.uniNeg,
        fam.idGrupoFamiliar
        FROM MX_Familia fam
        Inner Join MX_Familiar famPadre On fam.idPadre=famPadre.idFamiliar 
        Inner Join MX_Persona perPadre On famPadre.idFamiliar=perPadre.idPersona
        Inner Join MX_Familiar famMadre On fam.idMadre=famMadre.idFamiliar 
        Inner Join MX_Persona perMadre On famMadre.idFamiliar=perMadre.idPersona
    </sql>
    <resultMap id="familiaResultado" type="pe.marista.sigma.bean.FamiliaBean">
        <id property="unidadNegocioBean.uniNeg" column="uniNeg"/>
        <id property="idFamilia" column="idFamilia" />
        <result property="nombre" column="nombre" />
        <result property="padreBean.personaBean.idPersona" column="idPadre"/>
        <result property="madreBean.personaBean.idPersona" column="idMadre"/>
        <result property="status" column="status" />
        <result property="vehiculo1" column="vehiculo1" />
        <result property="vehiculo2" column="vehiculo2" />
        <result property="creaPor" column="creaPor" />
        <result property="creaFecha" column="creafecha" />
        <result property="modiPor" column="modipor" />
        <result property="modiVer" column="modiver" />
        <result property="idGrupoFamiliar" column="idGrupoFamiliar" />
        <association property="padreBean" column="idPadre" 
                     javaType="pe.marista.sigma.bean.FamiliarBean" 
                     resultMap="familiarPadreResultado"/>
        <association property="madreBean" column="idMadre" 
                     javaType="pe.marista.sigma.bean.FamiliarBean" 
                     resultMap="familiarMadreResultado"/>
        <association property="unidadNegocioBean" column="uniNeg" 
                     javaType="pe.marista.sigma.bean.UnidadNegocioBean" 
                     resultMap="unidadNegocioResultado"/>
    </resultMap> 
    <!--Padre-->
    <resultMap id="familiarPadreResultado" type="pe.marista.sigma.bean.FamiliarBean">
        <id property="personaBean.idPersona" column="idPadre"/>
        <result property="flgVive" column="flgVivePadre"/>
        <result property="flgCatolico" column="flgCatolicoPadre"/>
        <result property="flgMarista" column="flgMaristaPadre"/>
        <result property="telefonoFijo" column="telefonoFijoPadre"/>
        <result property="telefonoCelular" column="telefonoCelularPadre"/>
        <result property="anioEgresoColegio" column="anioEgresoColegioPadre"/>
        <result property="profesion" column="profesionPadre"/>
        <result property="ocupacion" column="ocupacionPadre"/>
        <result property="nombreColegio" column="nombreColegioPadre"/>
        <result property="telefonoOficina" column="telefonoOficinaPadre"/>
        <result property="centroLaboral" column="centroLaboralPadre"/>
        <result property="hobby" column="hobbyPadre"/>
        <result property="flgGrupoParroquial" column="flgGrupoParroquialPadre"/>
        <result property="nombreParroquia" column="nombreParroquiaPadre"/>
        <result property="cargo" column="cargoPadre"/>
        <association property="personaBean" column="idPadre"
                     javaType="pe.marista.sigma.bean.PersonaBean"
                     resultMap="personaPadreResultado"/>
    </resultMap>
    <resultMap id="personaPadreResultado" type="pe.marista.sigma.bean.PersonaBean">
        <id property="idPersona" column="idPadre"/>
        <result property="nombre" column="nombrePadre"/>
        <result property="apepat" column="apepatPadre"/>
        <result property="apemat" column="apematPadre"/>
        <result property="idTipoDocPer.idCodigo" column="idTipoDocPerPadre"/>
        <result property="nroDoc" column="nroDocPadre"/>
        <result property="fecNac" column="fecNacPadre"/>
        <result property="correo" column="correoPadre"/>
        <result property="paisBean.idPais" column="idNacionalidadPadre"/>
    </resultMap>  
    <!--Madre-->
    <resultMap id="familiarMadreResultado" type="pe.marista.sigma.bean.FamiliarBean">
        <id property="personaBean.idPersona" column="idMadre"/>
        <result property="flgVive" column="flgViveMadre"/>
        <result property="flgCatolico" column="flgCatolicoMadre"/>
        <result property="flgMarista" column="flgMaristaMadre"/>
        <result property="telefonoFijo" column="telefonoFijoMadre"/>
        <result property="telefonoCelular" column="telefonoCelularMadre"/>
        <result property="anioEgresoColegio" column="anioEgresoColegioMadre"/>
        <result property="profesion" column="profesionMadre"/>
        <result property="ocupacion" column="ocupacionMadre"/>
        <result property="nombreColegio" column="nombreColegioMadre"/>
        <result property="telefonoOficina" column="telefonoOficinaMadre"/>
        <result property="centroLaboral" column="centroLaboralMadre"/>
        <result property="hobby" column="hobbyMadre"/>
        <result property="flgGrupoParroquial" column="flgGrupoParroquialMadre"/>
        <result property="nombreParroquia" column="nombreParroquiaMadre"/>
        <result property="cargo" column="cargoMadre"/>
        <association property="personaBean" column="idMadre"
                     javaType="pe.marista.sigma.bean.PersonaBean"
                     resultMap="personaMadreResultado"/>
    </resultMap>
    <resultMap id="personaMadreResultado" type="pe.marista.sigma.bean.PersonaBean">
        <id property="idPersona" column="idMadre"/>
        <result property="nombre" column="nombreMadre"/>
        <result property="apepat" column="apepatMadre"/>
        <result property="apemat" column="apematMadre"/>
        <result property="idTipoDocPer.idCodigo" column="idTipoDocPerMadre"/>
        <result property="nroDoc" column="nroDocMadre"/>
        <result property="fecNac" column="fecNacMadre"/>
        <result property="correo" column="correoMadre"/>
        <result property="paisBean.idPais" column="idNacionalidadMadre"/>
    </resultMap>  
    
    <!--Cambio add Unidad de Negocio-->
    <resultMap id="unidadNegocioResultado" type="pe.marista.sigma.bean.UnidadNegocioBean">
        <id property="uniNeg" column="uniNeg" />
    </resultMap>         
    <select id="obtenerFamilia" resultMap="familiaResultado">
        <include refid="consultaCampos" />
    </select>
    <select id="obtenerFiltroFamilia" resultMap="familiaResultado" parameterType="pe.marista.sigma.bean.FamiliaBean">
        <include refid="consultaCampos" />
        <where>
            fam.uniNeg = #{unidadNegocioBean.uniNeg} 
            <!--Padre-->
            <if test="gpFlg==1">
                and fam.idGrupoFamiliar is null 
            </if>
            <if test="gpFlg==2">
                and fam.idGrupoFamiliar is not null 
            </if>
            <if test="padreBean.personaBean.apepat != null and padreBean.personaBean.apepat != '' " >
                and upper(perPadre.apepat) like concat('%',#{padreBean.personaBean.apepat},'%')
            </if>  
            <if test="padreBean.personaBean.idPersona != null and padreBean.personaBean.idPersona != '' " >
                and  perPadre.idPersona = #{padreBean.personaBean.idPersona}
            </if>  
            <if test="padreBean.personaBean.apemat != null and padreBean.personaBean.apemat != '' " >
                and upper(perPadre.apemat) like concat('%',#{padreBean.personaBean.apemat},'%')
            </if>  
            <if test="padreBean.personaBean.nombre != null and padreBean.personaBean.nombre != '' " >
                and upper(perPadre.nombre) like concat('%',#{padreBean.personaBean.nombre},'%')
            </if>  
            <!--Madre-->
            <if test="madreBean.personaBean.apepat != null and madreBean.personaBean.apepat != '' " >
                and upper(perMadre.apepat) like concat('%',#{padreBean.personaBean.apepat},'%')
            </if>  
            <if test="madreBean.personaBean.apemat != null and madreBean.personaBean.apemat != '' " >
                and upper(perMadre.apemat) like concat('%',#{padreBean.personaBean.apemat},'%')
            </if>  
            <if test="madreBean.personaBean.nombre != null and madreBean.personaBean.nombre != '' " >
                and upper(perMadre.nombre) like concat('%',#{padreBean.personaBean.nombre},'%')
            </if>  
            <if test="madreBean.personaBean.idPersona != null and madreBean.personaBean.idPersona != '' " >
                and  perMadre.idPersona = #{madreBean.personaBean.idPersona}
            </if>  
        </where>
        order by idGrupoFamiliar asc
    </select>
    <select id="obtenerFiltroGrupoFamilia" resultMap="familiaResultado" parameterType="pe.marista.sigma.bean.FamiliaBean">
        <include refid="consultaCampos" />
        <where> 
            <if test="idGrupoFamiliar == null">
                fam.idGrupoFamiliar is not null
            </if>
            <if test="idGrupoFamiliar != null">
                and fam.idGrupoFamiliar = #{idGrupoFamiliar}
            </if>
            <!--Padre-->
            <if test="padreBean.personaBean.apepat != null and padreBean.personaBean.apepat != '' " >
                and upper(perPadre.apepat) like concat('%',#{padreBean.personaBean.apepat},'%')
            </if>  
            <if test="padreBean.personaBean.apemat != null and padreBean.personaBean.apemat != '' " >
                and upper(perPadre.apemat) like concat('%',#{padreBean.personaBean.apemat},'%')
            </if>  
            <if test="padreBean.personaBean.nombre != null and padreBean.personaBean.nombre != '' " >
                and upper(perPadre.nombre) like concat('%',#{padreBean.personaBean.nombre},'%')
            </if>  
            <!--Madre-->
            <if test="madreBean.personaBean.apepat != null and madreBean.personaBean.apepat != '' " >
                and upper(perMadre.apepat) like concat('%',#{padreBean.personaBean.apepat},'%')
            </if>  
            <if test="madreBean.personaBean.apemat != null and madreBean.personaBean.apemat != '' " >
                and upper(perMadre.apemat) like concat('%',#{padreBean.personaBean.apemat},'%')
            </if>  
            <if test="madreBean.personaBean.nombre != null and madreBean.personaBean.nombre != '' " >
                and upper(perMadre.nombre) like concat('%',#{padreBean.personaBean.nombre},'%')
            </if>  
            <if test="nombre != null and nombre != '' " >
                and upper(fam.nombre) like concat('%',#{nombre},'%')
            </if>  
        </where>
        order by idGrupoFamiliar asc
    </select>
    <select id="obtenerFamiliaPorId" resultMap="familiaResultado" parameterType="pe.marista.sigma.bean.FamiliaBean">
        <include refid="consultaCampos" /> Where fam.idFamilia = #{idFamilia} and fam.uniNeg = #{unidadNegocioBean.uniNeg}  
    </select> 
    <select id="obtenerFamiliaPorIdRapido" resultMap="familiaResultado" parameterType="pe.marista.sigma.bean.FamiliaBean">
        select
        fam.idfamilia,
        fam.unineg as uniNeg
        ,fam.nombre as nombre
        ,famPadre.idfamiliar as idPadre
        ,famMadre.idfamiliar as idMadre
        ,fam.idGrupoFamiliar
        from MX_Familia fam
        inner Join MX_Familiar famPadre On fam.idPadre=famPadre.idFamiliar 
        inner Join MX_Persona perPadre On famPadre.idFamiliar=perPadre.idPersona
        inner Join MX_Familiar famMadre On fam.idMadre=famMadre.idFamiliar 
        inner Join MX_Persona perMadre On famMadre.idFamiliar=perMadre.idPersona
        Where fam.idFamilia = #{idFamilia} and fam.uniNeg = #{unidadNegocioBean.uniNeg}  
    </select> 
    <select id="obtenerFamiliaPorPaMa" resultMap="familiaResultado" parameterType="pe.marista.sigma.bean.FamiliaBean">
        <include refid="consultaCampos" /> Where fam.idPadre = #{padreBean.idPadre} and fam.idMadre = #{madreBean.idMadre} and fam.uniNeg = #{unidadNegocioBean.uniNeg}  
    </select>
    <insert id="insertarFamilia" parameterType="pe.marista.sigma.bean.FamiliaBean">
        Insert Into MX_Familia (uniNeg,nombre,idPadre,idMadre,vehiculo1,vehiculo2,status,creaPor,creaFecha) 
        Values (#{unidadNegocioBean.uniNeg},#{nombre}, #{padreBean.personaBean.idPersona}, #{madreBean.personaBean.idPersona}, 
        #{vehiculo1},#{vehiculo2},#{status}, #{creaPor}, getDate())
        <selectKey keyProperty="idFamilia" order="AFTER" resultType="Integer">
            SELECT current_value FROM sys.sequences WHERE name = 'SQ_Familia';
        </selectKey>
    </insert> 
    <insert id="insertarFamiliaRapido" parameterType="pe.marista.sigma.bean.FamiliaBean">
        Insert Into MX_Familia (uniNeg,nombre,idPadre,idMadre,vehiculo1,vehiculo2,status,creaPor,creaFecha) 
        Values (#{unidadNegocioBean.uniNeg},#{nombre}, #{padreBean.personaBean.idPersona}, #{madreBean.personaBean.idPersona}, 
        #{vehiculo1},#{vehiculo2},#{status}, #{creaPor}, getDate())
        <selectKey keyProperty="idFamilia" order="AFTER" resultType="Integer"> 
            SELECT max(idFamilia) FROM MX_Familia WHERE uniNeg = #{unidadNegocioBean.uniNeg}
        </selectKey>
    </insert> 
    <update id="modificarFamilia" parameterType="pe.marista.sigma.bean.FamiliaBean">
        Update MX_Familia set
        nombre = #{nombre},
        idPadre = #{padreBean.personaBean.idPersona},
        idMadre = #{madreBean.personaBean.idPersona},
        vehiculo1 = #{vehiculo1},
        vehiculo2 = #{vehiculo2},
        status = #{status},
        modiPor = #{modiPor}
        Where idFamilia = #{idFamilia} and uniNeg = #{unidadNegocioBean.uniNeg}  
    </update>
    <update id="modificarFamiliaRapido" parameterType="pe.marista.sigma.bean.FamiliaBean">
        Update MX_Familia set 
        idPadre = #{padreBean.personaBean.idPersona},
        idMadre = #{madreBean.personaBean.idPersona}, 
        modiPor = #{modiPor}
        Where idFamilia = #{idFamilia} and uniNeg = #{unidadNegocioBean.uniNeg}  
    </update>
    <update id="modificarFamiliaRapidoPapa" parameterType="pe.marista.sigma.bean.FamiliaBean">
        Update MX_Familia set 
        idPadre = #{padreBean.personaBean.idPersona},
        modiPor = #{modiPor}
        Where idFamilia = #{idFamilia} and uniNeg = #{unidadNegocioBean.uniNeg}  
    </update>
    <update id="modificarFamiliaRapidoMama" parameterType="pe.marista.sigma.bean.FamiliaBean">
        Update MX_Familia set 
        idMadre = #{madreBean.personaBean.idPersona}, 
        modiPor = #{modiPor}
        Where idFamilia = #{idFamilia} and uniNeg = #{unidadNegocioBean.uniNeg}  
    </update>
    <delete id="eliminarFamilia" parameterType="Integer">
        Delete from MX_Familia  Where idFamilia = #{idFamilia} and uniNeg = #{unidadNegocioBean.uniNeg}  
    </delete>  
    <update id="actualizaFamiliaPorGrupo" parameterType="pe.marista.sigma.bean.FamiliaBean">
        Update MX_Familia set idGrupoFamiliar = #{idGrupoFamiliar} Where idFamilia = #{idFamilia}
    </update>
    <select id="generaCodigoGrupoFamiliar" resultType="Integer">
        select 
        (case When max(idGrupoFamiliar) is not null then max(idGrupoFamiliar)
        else 0
        end) as maximo
        from MX_Familia Where uniNeg = #{unidadNegocioBean.uniNeg}
    </select>
    <select id="obtenerGrupoFamiliirPorId" resultMap="familiaResultado" parameterType="pe.marista.sigma.bean.FamiliaBean">
        <include refid="consultaCampos" />
        Where fam.idGrupoFamiliar = #{idGrupoFamiliar} and fam.uniNeg = #{unidadNegocioBean.uniNeg}  
    </select>
    <select id="obtenerGrupoFamiliirPorIdInverso" resultMap="familiaResultado" parameterType="pe.marista.sigma.bean.FamiliaBean">
        <include refid="consultaCamposSim" />
        Where fam.idGrupoFamiliar is null and fam.uniNeg = #{unidadNegocioBean.uniNeg}  
    </select>
    <select id="obtenerEstudiantePorGrupoFam" parameterType="pe.marista.sigma.bean.FamiliaBean" resultType="pe.marista.sigma.bean.PersonaBean">
        select 
        per.apepat,
        per.apemat,
        per.nombre,
        fam.idEstudiante as idPersona
        from MX_FamiliarEstudiante fam
        Inner Join MX_Persona per On fam.idEstudiante=per.idPersona
        where fam.idfamiliar in (Select distinct idPadre from MX_Familia
        WHERE unineg = #{unidadNegocioBean.uniNeg} and idGrupoFamiliar = #{idGrupoFamiliar})
    </select>
    <select id="obtenerFamiliaPorPadresFam" resultType="Boolean" parameterType="map">
        select 'true' from  MX_Familia where idpadre=#{idPadre} and idmadre=#{idMadre} and unineg=#{uniNeg}
    </select>
    <select id="obtenerFamiliaId" resultType="Integer" parameterType="map">
        <if test="flgOpcion ==1">
        select idfamilia from  MX_Familia where idpadre=#{idPadre} and idmadre=#{idMadre} and unineg=#{uniNeg}
        </if>
        <if test="flgOpcion ==2">
        select idfamilia from  MX_Familia where idpadre is null and idmadre=#{idMadre} and unineg=#{uniNeg}
        </if>
        <if test="flgOpcion ==3">
        select idfamilia from  MX_Familia where idpadre=#{idPadre} and idmadre is null and unineg=#{uniNeg}
        </if>
    </select>
</mapper>
