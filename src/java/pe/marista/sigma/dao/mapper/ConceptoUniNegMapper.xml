<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="pe.marista.sigma.dao.ConceptoUniNegDAO">  
    <sql id="consultaCampos">
        Select  
        conUniNeg.uniNeg,
        conUniNeg.idConcepto,
        conUniNeg.idConcepto as idConceptoVista,
        cat.idTipoConcepto,
        cat.idTipoConcepto as idtipoConceptoVista,
        cat.nombre as nombreCategoria,
        con.nombre,
        ISNULL(con.descrip,'---------') as descrip,
        <!--con.cuentad as cuentad,-->
        (case when con.cuentad =101111 then con.cuentah else (case when con.cuentad !=0 then con.cuentad else con.cuentah end ) end )as cuentad,
        con.cuentah,
        con.flgShowEstudiante,
        con.flgShowExAlumno,
        con.flgShowExterno,
        con.flgShowHijoExalumno,
        con.flgShowHijoEmpleado,
        con.flgProgramacion,
        con.flgPrecio,
        con.cuentad as cuentad,
        plnD.nombre as nombreCuentaD,
        con.cuentah as cuentah,
        plnH.nombre as nombreCuentaH,
        isnull(conUniNeg.importe,0) as importe,
        conUniNeg.flgDsctoEstudiante,
        conUniNeg.flgDsctoExAlumno,
        conUniNeg.flgDsctoHijoExAlumno,
        conUniNeg.flgDsctoHijoEmpleado,
        conUniNeg.flgDsctoExterno,
        conUniNeg.flgDsctoBeca,
        conUniNeg.dsctoAlumno,
        conUniNeg.dsctoEmpleado,
        conUniNeg.dsctoExAlumno,
        conUniNeg.dsctoExterno,
        conUniNeg.status,
        con.status as statusCon,
        conUniNeg.creaPor,
        conUniNeg.creaFecha,
        conUniNeg.modiPor,
        cat.flgIngreso,
        conUniNeg.idTipoMoneda as idTipoMoneda,
        codMon.idCodigo as idTipoMon,
        codMon.codigo as codiMoneda,
        (case when cat.idTipoConcepto=103 
        then (case when 
        (select count(idconcepto) from MX_Programacion where unineg=conUniNeg.unineg and status=1 and idconcepto=con.idconcepto)=0 then 'true'
        else 'false'
        end
        )  else 'false'
        end) as flgDisable,
        isnull(con.flgTieneCr,1) as flgTieneCr,
        (case when isnull(con.flgTieneCr,1)=1 then 'Sí' else 'No' end) as flgTieneCrVista
        From MT_ConceptoUniNeg conUniNeg
        Inner Join MT_Concepto con On conUniNeg.idConcepto=con.idConcepto
        Inner Join MT_TipoConcepto cat ON con.idTipoConcepto=cat.idTipoConcepto 
        Left Join MT_PlanContable plnD ON con.cuentad = plnD.cuenta
        Left Join MT_PlanContable plnH ON con.cuentah = plnH.cuenta
        left Join MO_Codigo codMon on conUniNeg.idTipoMoneda=codMon.idCodigo
        inner join MT_TipoConcepto t on t.idTipoConcepto=con.idtipoconcepto
    </sql>
    <sql id="consultaCamposIng">
        Select  
        conUniNeg.uniNeg,
        conUniNeg.idConcepto,
        conUniNeg.idConcepto as idConceptoVista,
        cat.idTipoConcepto,
        cat.idTipoConcepto as idtipoConceptoVista,
        cat.nombre as nombreCategoria,
        con.nombre,
        ISNULL(con.descrip,'---------') as descrip,
        con.cuentad as cuentad,
        <!--(case when con.cuentad =101111 then con.cuentah else (case when con.cuentad !=0 then con.cuentad else con.cuentah end ) end )as cuentad,-->
        con.cuentah,
        con.flgShowEstudiante,
        con.flgShowExAlumno,
        con.flgShowExterno,
        con.flgShowHijoExalumno,
        con.flgShowHijoEmpleado,
        con.flgProgramacion,
        con.flgPrecio,
        con.cuentad as cuentad,
        plnD.nombre as nombreCuentaD,
        con.cuentah as cuentah,
        plnH.nombre as nombreCuentaH,
        isnull(conUniNeg.importe,0) as importe,
        conUniNeg.flgDsctoEstudiante,
        conUniNeg.flgDsctoExAlumno,
        conUniNeg.flgDsctoHijoExAlumno,
        conUniNeg.flgDsctoHijoEmpleado,
        conUniNeg.flgDsctoExterno,
        conUniNeg.flgDsctoBeca,
        conUniNeg.dsctoAlumno,
        conUniNeg.dsctoEmpleado,
        conUniNeg.dsctoExAlumno,
        conUniNeg.dsctoExterno,
        conUniNeg.status,
        con.status as statusCon,
        conUniNeg.creaPor,
        conUniNeg.creaFecha,
        conUniNeg.modiPor,
        cat.flgIngreso,
        conUniNeg.idTipoMoneda as idTipoMoneda,
        codMon.idCodigo as idTipoMon,
        codMon.codigo as codiMoneda,
        (case when cat.idTipoConcepto=103 
        then (case when 
        (select count(idconcepto) from MX_Programacion where unineg=conUniNeg.unineg and status=1 and idconcepto=con.idconcepto)=0 then 'true'
        else 'false'
        end
        )  else 'false'
        end) as flgDisable,
        isnull(con.flgTieneCr,1) as flgTieneCr,
        (case when isnull(con.flgTieneCr,1)=1 then 'Sí' else 'No' end) as flgTieneCrVista
        From MT_ConceptoUniNeg conUniNeg
        Inner Join MT_Concepto con On conUniNeg.idConcepto=con.idConcepto
        Inner Join MT_TipoConcepto cat ON con.idTipoConcepto=cat.idTipoConcepto 
        Left Join MT_PlanContable plnD ON con.cuentad = plnD.cuenta
        Left Join MT_PlanContable plnH ON con.cuentah = plnH.cuenta
        left Join MO_Codigo codMon on conUniNeg.idTipoMoneda=codMon.idCodigo
    </sql>
    <resultMap id="conceptoUniNegResultado" type="pe.marista.sigma.bean.ConceptoUniNegBean">
        <id property="conceptoBean.idConcepto" column="idConcepto"/>
        <id property="unidadNegocioBean.uniNeg" column="uniNeg"/>
        <result property="importe" column="importe"/>
        <result property="importeConDscto" column="importeConDscto"/>
        <result property="flgDsctoEstudiante" column="flgDsctoEstudiante"/>
        <result property="flgDsctoExAlumno" column="flgDsctoExAlumno"/>
        <result property="flgDsctoHijoExAlumno" column="flgDsctoHijoExAlumno"/>
        <result property="flgDsctoHijoEmpleado" column="flgDsctoHijoEmpleado"/>
        <result property="flgDsctoExterno" column="flgDsctoExterno"/>
        <result property="flgDsctoBeca" column="flgDsctoBeca"/>
        <result property="dsctoAlumno" column="dsctoAlumno"/>
        <result property="dsctoEmpleado" column="dsctoEmpleado"/>
        <result property="dsctoExAlumno" column="dsctoExAlumno"/>
        <result property="dsctoExterno" column="dsctoExterno"/>
        <result property="status" column="status"/>
        <result property="creaPor" column="creaPor"/>
        <result property="creaFecha" column="creaFecha"/>
        <result property="modiPor" column="modiPor"/> 
        <result property="flgDisable" column="flgDisable"/> 
        <association property="conceptoBean" column="idConcepto"
                     javaType="pe.marista.sigma.bean.ConceptoBean"
                     resultMap="conceptoResultado"/>
        <association property="unidadNegocioBean" column="uniNeg"
                     javaType="pe.marista.sigma.bean.UnidadNegocioBean"
                     resultMap="unidadNegocioResultado"/>
        <association property="idTipoMoneda" column="idTipoMoneda"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoMonedaResultado"/>
    </resultMap>
    <resultMap id="tipoMonedaResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoMon"/>
        <result property="codigo" column="codiMoneda"/>
    </resultMap> 
    <resultMap id="conceptoResultado" type="pe.marista.sigma.bean.ConceptoBean">
        <id property="idConcepto" column="idConcepto"/>
        <result property="nombre" column="nombre"/>
        <result property="descrip" column="descrip"/>
        <result property="flgShowEstudiante" column="flgShowEstudiante"/>
        <result property="flgShowExAlumno" column="flgShowExAlumno"/>
        <result property="flgShowExterno" column="flgShowExterno"/>
        <result property="flgShowHijoExAlumno" column="flgShowHijoExAlumno"/>
        <result property="flgShowHijoEmpleado" column="flgShowHijoEmpleado"/>
        <result property="flgProgramacion" column="flgProgramacion"/>
        <result property="status" column="statusCon"/>
        <result property="flgPrecio" column="flgPrecio"/> 
        <result property="flgTieneCr" column="flgTieneCr"/> 
        <result property="flgTieneCrVista" column="flgTieneCrVista"/> 
        <association property="planContableCuentaDBean" column="cuentad"
                     javaType="pe.marista.sigma.bean.PlanContableBean"
                     resultMap="planContableDResultado"/>
        <association property="planContableCuentaHBean" column="cuentah"
                     javaType="pe.marista.sigma.bean.PlanContableBean"
                     resultMap="planContableHResultado"/>
        <association property="tipoConceptoBean" column="idTipoConcepto"
                     javaType="pe.marista.sigma.bean.TipoConceptoBean"
                     resultMap="tipoConceptoResultado"/>
    </resultMap>
    <resultMap id="planContableDResultado" type="pe.marista.sigma.bean.PlanContableBean">
        <id property="cuenta" column="cuentad"/>
        <result property="nombre" column="nombreCuentaD"/>
    </resultMap>
    <resultMap id="planContableHResultado" type="pe.marista.sigma.bean.PlanContableBean">
        <id property="cuenta" column="cuentah"/>
        <result property="nombre" column="nombreCuentaH"/>
    </resultMap>
    <resultMap id="tipoConceptoResultado" type="pe.marista.sigma.bean.TipoConceptoBean">
        <id property="idTipoConcepto" column="idTipoConcepto"/>
        <result property="nombre" column="nombreCategoria"/>
        <result property="flgIngreso" column="flgIngreso"/> 
    </resultMap>
    <resultMap id="unidadNegocioResultado" type="pe.marista.sigma.bean.UnidadNegocioBean">
        <id property="uniNeg" column="uniNeg"/>
    </resultMap>
    <select id="obtenerConceptoPorId" resultMap="conceptoUniNegResultado" parameterType="pe.marista.sigma.bean.ConceptoUniNegBean">
        <include refid="consultaCampos" />WHERE conUniNeg.uniNeg = #{unidadNegocioBean.uniNeg} and conUniNeg.idConcepto = #{conceptoBean.idConcepto}
    </select>
    <select id="obtenerConceptoUniNeg" resultMap="conceptoUniNegResultado">
        <include refid="consultaCampos" />
    </select>
    <select id="obtenerConceptoUniNegPorTip" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCamposIng" />Where cat.idTipoConcepto = #{parms.idTipoConcepto} and conUniNeg.uniNeg =#{parms.uniNeg}
    </select>
    <select id="obtenerConceptoUniNegPorTipo" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCampos" />Where cat.idTipoConcepto = #{parms.idTipoConcepto} and conUniNeg.uniNeg =#{parms.uniNeg}
    </select>
    <select id="obtenerTipoPorIdConcepto" parameterType="map" resultType="Integer">
        Select   cat.idTipoConcepto 
        From MT_ConceptoUniNeg conUniNeg
        Inner Join MT_Concepto con On conUniNeg.idConcepto=con.idConcepto
        Inner Join MT_TipoConcepto cat ON con.idTipoConcepto=cat.idTipoConcepto 
        Left Join MT_PlanContable plnD ON con.cuentad = plnD.cuenta  
        Where conUniNeg.uniNeg = #{uniNeg} and con.idconcepto=#{idConcepto}
    </select>
    <select id="obtenerPorIdConceptoMontoCero" parameterType="map" resultType="Integer">
        declare @unineg varchar(6),@idconcepto int
        set @unineg=#{uniNeg}
        set @idconcepto=#{idConcepto}
        declare @FLG int = (select top 1 CUN.idconcepto from MT_Concepto c
        inner join MT_ConceptoUniNeg cun on cun.idconcepto=c.idconcepto
        where (nombre like '%ADELANTO A RENDIR%' or nombre like '%BANCO DE LIBROS%' or nombre like '%VENTAS VARIAS%')
        and cun.status=1 and cun.unineg=@unineg and c.idconcepto IN (@idconcepto))
        select (case when @FLG is not null then 1 else 0 end) as id 
    </select>
    <select id="obtenerTipoPorProgramacion" parameterType="map" resultType="Integer">        
        declare @idconcepto int  ,@unineg varchar(6) 
        set @idconcepto   = #{idConcepto}
        set @unineg	  =#{uniNeg}
        declare @id int=(SELECT top 1  isnull(tc.idTipoConcepto,0) AS idTipoConcepto FROM MX_Programacion PRO
        LEFT JOIN MT_ConceptoUniNeg CUN ON CUN.idconcepto=PRO.idconcepto AND PRO.unineg=CUN.unineg
        LEFT JOIN MT_Concepto CON ON CUN.idconcepto=CON.idconcepto  
        LEFT JOIN MT_TipoConcepto TC ON TC.idTipoConcepto=CON.idtipoconcepto
        WHERE PRO.status=1 and CON.idconcepto=@idconcepto AND PRO.unineg=@unineg)
        select (case when @id is null then 0 else 1 end) as id
    </select>
    <select id="obtenerConceptoUniNegPorUni" resultMap="conceptoUniNegResultado" parameterType="String">
        <include refid="consultaCampos" />Where conUniNeg.uniNeg = #{uniNeg} and con.status=1
        order by cat.flgIngreso,cat.nombre
    </select>
    <select id="obtenerConceptoUniNegPorUniArendir" resultMap="conceptoUniNegResultado" parameterType="String">
        <include refid="consultaCampos" />Where conUniNeg.uniNeg = #{uniNeg} and con.status=1 and con.nombre like 'Entregas a rendir por cuenta de%'
        order by cat.flgIngreso,cat.nombre
    </select>
    <select id="obtenerConceptoUniNegActivos" resultMap="conceptoUniNegResultado">
        <include refid="consultaCampos" />Where conUniNeg.status = 1
        order by cat.flgIngreso,cat.nombre
    </select>
    <select id="obtenerConceptoUniNegActivosIngresos" resultMap="conceptoUniNegResultado">
        <include refid="consultaCampos" />Where conUniNeg.status = 1  and t.flgIngreso=1
        order by cat.flgIngreso,cat.nombre
    </select>
 
    <insert id="insertarConceptoUniNeg" parameterType="pe.marista.sigma.bean.ConceptoUniNegBean">
        INSERT INTO MT_ConceptoUniNeg (
        uniNeg,
        idConcepto,
        importe,
        flgDsctoEstudiante,
        flgDsctoExAlumno,
        flgDsctoHijoEmpleado,
        flgDsctoHijoExAlumno,
        flgDsctoExterno,
        flgDsctoBeca,
        dsctoAlumno,
        dsctoEmpleado,
        dsctoExAlumno,
        dsctoExterno,
        status,
        creaPor,
        creaFecha,idTipoMoneda)
        Values (
        #{unidadNegocioBean.uniNeg},
        #{conceptoBean.idConcepto},
        #{importe},
        #{flgDsctoEstudiante},
        #{flgDsctoExAlumno},
        #{flgDsctoHijoEmpleado},
        #{flgDsctoHijoExAlumno},
        #{flgDsctoExterno},
        #{flgDsctoBeca},
        #{dsctoAlumno},
        #{dsctoEmpleado},
        #{dsctoExAlumno},
        #{dsctoExterno},
        #{status},
        #{creaPor},
        getDate(),#{idTipoMoneda.idCodigo})
    </insert> 
    <update id="modificarConceptoUniNeg" parameterType="pe.marista.sigma.bean.ConceptoUniNegBean">
        UPDATE MT_ConceptoUniNeg
        SET 
        importe = #{importe},
        flgDsctoEstudiante= #{flgDsctoEstudiante},
        flgDsctoExAlumno = #{flgDsctoExAlumno},
        flgDsctoHijoEmpleado = #{flgDsctoHijoEmpleado},
        flgDsctoHijoExAlumno = #{flgDsctoHijoExAlumno},
        flgDsctoExterno = #{flgDsctoExterno},
        flgDsctoBeca = #{flgDsctoBeca},
        dsctoAlumno = #{dsctoAlumno},
        dsctoEmpleado = #{dsctoEmpleado},
        dsctoExAlumno = #{dsctoExAlumno},
        dsctoExterno = #{dsctoExterno},
        status = #{status},
        modiPor = #{modiPor},
        idTipoMoneda= #{idTipoMoneda.idCodigo}
        Where uniNeg = #{unidadNegocioBean.uniNeg} and idConcepto = #{conceptoBean.idConcepto}
    </update>
    <update id="modificarMontoConceptoUniNeg" parameterType="pe.marista.sigma.bean.ConceptoUniNegBean">
        update cun
        set cun.importe=#{importe}, 
        modiPor = #{modiPor}
        FROM  MT_ConceptoUniNeg cun
        inner join mt_concepto c on cun.idconcepto = c.idconcepto
        where c.flgprecio=1 and cun.uniNeg = #{unidadNegocioBean.uniNeg} and cun.idConcepto = #{conceptoBean.idConcepto}
    </update>
    <delete id="eliminarConceptoUniNeg" parameterType="pe.marista.sigma.bean.ConceptoUniNegBean">
        Delete From MT_ConceptoUniNeg Where uniNeg = #{unidadNegocioBean.uniNeg} and idConcepto = #{conceptoBean.idConcepto}
    </delete>
    <delete id="cambiarEstadoConceptoUniNeg" parameterType="pe.marista.sigma.bean.ConceptoUniNegBean">
        UPDATE MT_ConceptoUniNeg
        SET 
        status = #{status}
        Where uniNeg = #{unidadNegocioBean.uniNeg} and idConcepto = #{conceptoBean.idConcepto}
    </delete>
    
    <select id="obtenerConceptosEstudiante" resultMap="conceptoUniNegResultado"  parameterType="map">
        <include refid="consultaCampos" />WHERE conUniNeg.uniNeg = #{param.uniNeg} and con.flgShowEstudiante = #{param.flgShowEstudiante}
    </select>
    
    <select id="obtenerConceptosExAlumno" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCampos" />WHERE conUniNeg.uniNeg = #{param.uniNeg} and con.flgShowExAlumno = #{param.flgShowExAlumno}
    </select>
    <select id="obtenerConceptosExterno" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCampos" />WHERE conUniNeg.uniNeg = #{param.uniNeg} and con.flgShowExterno = #{param.flgShowExterno}
    </select>
    <select id="obtenerConceptosHijoExAlumno" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCampos" />WHERE conUniNeg.uniNeg = #{param.uniNeg} and con.flgShowHijoExAlumno= #{param.flgShowHijoExAlumno}
    </select>
    <select id="obtenerConceptosHijoEmpleado" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCampos" />WHERE conUniNeg.uniNeg = #{param.uniNeg} and con.flgShowHijoEmpleado = #{param.flgShowHijoEmpleado}
    </select>
    <select id="obtenerConceptosParametro" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCampos" />WHERE conUniNeg.uniNeg = #{param.uniNeg}  and cat.nombre = {param.nombreTip}
    </select>
   
    <sql id="consultaCamposDsctoTipPersona">
        Select  
        conUniNeg.uniNeg,
        conUniNeg.idConcepto,
        cat.idTipoConcepto,
        cat.nombre as nombreCategoria,
        con.nombre,
        isnull(con.descrip,'----------') as descrip, 
        con.cuentad as cuentad,
        con.cuentah,
        con.flgShowEstudiante,
        con.flgShowExAlumno,
        con.flgShowExterno,
        con.flgShowHijoExalumno,
        con.flgShowHijoEmpleado,
        con.flgProgramacion,
        con.flgPrecio,
        con.cuentad as cuentad,
        plnD.nombre as nombreCuentaD,
        con.cuentah as cuentah,
        plnH.nombre as nombreCuentaH,
        isnull(conUniNeg.importe,0) as importe,
        <!--isnull(conUniNeg.importe,0)*(100 - isnull(conUniNeg.${param.dscto},0))/100 as importeConDscto,-->
        convert(money,isnull(conUniNeg.importe,0)-(isnull(conUniNeg.${param.dscto},0))) as importeConDscto,
        isnull(conUniNeg.flgDsctoEstudiante,0) as flgDsctoEstudiante,
        isnull(conUniNeg.flgDsctoExAlumno,0) as flgDsctoExAlumno,
        isnull(conUniNeg.flgDsctoHijoExAlumno,0) as flgDsctoHijoExAlumno,
        isnull(conUniNeg.flgDsctoHijoEmpleado,0) as flgDsctoHijoEmpleado,
        isnull(conUniNeg.flgDsctoExterno,0) as flgDsctoExterno,
        isnull(conUniNeg.flgDsctoBeca,0) as flgDsctoBeca,
        isnull(conUniNeg.dsctoAlumno,0) as dsctoAlumno,
        isnull(conUniNeg.dsctoEmpleado,0) as dsctoEmpleado,
        isnull(conUniNeg.dsctoExAlumno,0) as dsctoExAlumno,
        isnull(conUniNeg.dsctoExterno,0) as dsctoExterno,
        conUniNeg.status,
        conUniNeg.creaPor,
        conUniNeg.creaFecha,
        conUniNeg.idTipoMoneda as idTipoMoneda,
        codMon.idCodigo as idTipoMon,
        codMon.codigo as codiMoneda,
        (case when con.idConcepto in (select distinct idconcepto from MX_Programacion)
        then (case when 
        (select count(idconcepto) from MX_Programacion where unineg=conUniNeg.unineg and status=1 and idconcepto=con.idconcepto)=0 then 'true'
        else 'false'
        end
        )  else 'false'
        end) as flgDisable
        From MT_ConceptoUniNeg conUniNeg
        Inner Join MT_Concepto con On conUniNeg.idConcepto=con.idConcepto
        Inner Join MT_TipoConcepto cat ON con.idTipoConcepto=cat.idTipoConcepto 
        Left Join MT_PlanContable plnD ON con.cuentad = plnD.cuenta
        Left Join MT_PlanContable plnH ON con.cuentah = plnH.cuenta
        left Join MO_Codigo codMon on conUniNeg.idTipoMoneda=codMon.idCodigo
    </sql> 
    
    <select id="obtenerConceptoPost" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCamposDsctoTipPersona" />
        WHERE conUniNeg.uniNeg = #{param.uniNeg} and conUniNeg.status=1
        and cat.idtipoconcepto in (SELECT idTipoConcepto FROM MT_TipoConcepto WHERE flgIngreso=1 AND nombre NOT IN (#{param.matri},#{param.pensiones}))
        order by cat.nombre,con.nombre
    </select>
    <select id="obtenerConceptoInscr" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCamposDsctoTipPersona" />
        WHERE conUniNeg.uniNeg = #{param.uniNeg} and conUniNeg.status=1
        and cat.idtipoconcepto in (SELECT idTipoConcepto FROM MT_TipoConcepto WHERE flgIngreso=1 AND nombre NOT IN (#{param.matri},#{param.pensiones}))
        order by cat.nombre,con.nombre
    </select>
    <select id="obtenerConceptoEstMatri" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCamposDsctoTipPersona" />
        WHERE conUniNeg.uniNeg = #{param.uniNeg} and conUniNeg.status=1
        and cat.idtipoconcepto in (SELECT idTipoConcepto FROM MT_TipoConcepto WHERE flgIngreso=1 AND nombre NOT IN (#{param.matri},#{param.pensiones}))
        order by cat.nombre,con.nombre
    </select> 
    <select id="obtenerConceptoExterno" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCamposDsctoTipPersona" />
        WHERE conUniNeg.uniNeg = #{param.uniNeg}  and conUniNeg.status=1
        and cat.idtipoconcepto in (SELECT idTipoConcepto FROM MT_TipoConcepto WHERE flgIngreso=1 AND nombre NOT IN (#{param.matri},#{param.pensiones}))
        order by cat.nombre,con.nombre
    </select>    
    <select id="obtenerConceptoConProgramacion" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCamposDsctoTipPersona" />
        WHERE conUniNeg.uniNeg = #{param.uniNeg}  and conUniNeg.status=1
        and con.idconcepto in (select distinct idconcepto  from MX_Programacion where unineg=conUniNeg.unineg and status=1)
    </select>    
    <select id="obtenerConceptoConProgramacionPorFiltro" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCamposDsctoTipPersona" />
        WHERE conUniNeg.uniNeg = #{param.uniNeg}  and conUniNeg.status=1 
        and con.nombre like concat('%',#{param.nombreConcepto},'%')
        and con.idconcepto in (select distinct idconcepto  from MX_Programacion where unineg=conUniNeg.unineg and status=1)
    </select>    
    <select id="obtenerConceptoPorIdConDscto" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCamposDsctoTipPersona" />
        WHERE conUniNeg.uniNeg = #{param.uniNeg}
        and conUniNeg.idConcepto = #{param.idConcepto}
        order by cat.nombre,con.nombre
    </select>
    <select id="obtenerConceptoPorIdConCuotaIng" resultMap="conceptoUniNegResultado" parameterType="map">
        <include refid="consultaCampos" />
        WHERE conUniNeg.uniNeg = #{param.uniNeg}
        and conUniNeg.idConcepto = #{param.idConcepto}
        order by cat.nombre,con.nombre
    </select>
    <select id="obtenerConceptoUniNegPorIng" resultMap="conceptoUniNegResultado" parameterType="pe.marista.sigma.bean.ConceptoUniNegBean">
        <include refid="consultaCampos" />
        WHERE conUniNeg.uniNeg = #{uniNeg}
        and cat.flgIngreso = 1
        order by cat.nombre,con.nombre
    </select> 
    <select id="obtenerConceptoUniNegCuotaIng" resultMap="conceptoUniNegResultado" parameterType="pe.marista.sigma.bean.ConceptoUniNegBean">
        <include refid="consultaCampos" />
        WHERE conUniNeg.uniNeg = #{uniNeg}
        and cat.flgIngreso = 1 and con.nombre like'%cuota%'
        order by cat.nombre,con.nombre
    </select> 
    <select id="obtenerConceptoUniNegPorEgr" resultMap="conceptoUniNegResultado" parameterType="pe.marista.sigma.bean.ConceptoUniNegBean">
        <include refid="consultaCampos" />
        WHERE conUniNeg.uniNeg = #{uniNeg}
        and cat.flgIngreso = 0
        order by cat.nombre,con.nombre
    </select> 
</mapper>
