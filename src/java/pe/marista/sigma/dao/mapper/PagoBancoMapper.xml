<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="pe.marista.sigma.dao.PagoBancoDAO">  
    <sql id="consultaCampos">
        SELECT   [unineg]
        ,[idpagobanco]
        ,[idtiposervicio]
        ,[idtipodoc]
        ,[impresora]
        ,[serie]
        ,[nrodoc]
        ,[iddiscente]
        ,[discente]
        ,[anio]
        ,[codigo]
        ,[obs]
        ,[idtipolugarpago]
        ,[idtipomodopago]
        ,[fechapago]
        ,[idtipomoneda]
        ,[idtipostatuspagobanco]
        ,[creafechastatus]
        ,[creastatus]
        ,[fechavenc]
        ,[cuentabanco]
        ,[idconcepto]
        ,[monto]
        ,[dscto]
        ,[montopagado]
        ,[cuentad]
        ,[cuentah]
        ,[cr]
        ,[montoDolares]
        ,[montoSoles]
        ,[referencia]
        ,[idprogramacion]
        ,[idprogramaciondscto]
        ,[cantidad]
        ,[creapor]
        ,[creafecha]
        ,[modipor]
        ,[modiver]
        ,[idprocesobancoenv]
        ,[idprocesobancorec]
        ,[glosa]
        FROM  [MT_PagoBanco]
    </sql>
    <resultMap id="PagoBancoResultado" type="pe.marista.sigma.bean.PagoBancoBean">
        <id property="idPagoBanco" column="idPagoBanco"/>
        <id property="unidadNegocioBean.uniNeg" column="uniNeg"/>
        <result property="serie" column="serie"/> 
        <result property="nroDoc" column="nroDoc"/>       
        <result property="idDiscente" column="idDiscente"/> 
        <result property="discente" column="discente"/> 
        <result property="anio" column="anio"/> 
        <result property="codigo" column="codigo"/> 
        <result property="obs" column="obs"/>  
        <result property="fechaPago" column="fechaPago"/> 
        <result property="creaFechaStatus" column="creaFechaStatus"/>  
        <result property="creaStatus" column="creaStatus"/>  
        <result property="fechaVenc" column="fechaVenc"  jdbcType="DATE"/>
        <result property="monto" column="monto"/>
        <result property="dscto" column="dscto"/>
        <result property="montoPagado" column="montoPagado"/>
        <result property="cuentaD" column="cuentaD"/>
        <result property="cuentaH" column="cuentaH"/>
        <result property="cr" column="cr"/>
        <result property="montoDolares" column="montoDolares"/>
        <result property="montoSoles" column="montoSoles"/>
        <result property="referencia" column="referencia"/>
        <result property="montoSoles" column="montoSoles"/>
        <result property="cantidad" column="cantidad"/>
        <result property="idProcesoBancoRec" column="idProcesoBancoRec"/>
        <result property="idProcesoBancoEnv" column="idProcesoBancoEnv"/>
        <result property="montoConDscto" column="montoConDscto"/>
        <result property="dsctoTipoDicente" column="dsctoTipoDicente"/> 
        <result property="creaPor" column="creaPor"/>
        <result property="creaFecha" column="creaFecha"  jdbcType="DATE"/>
        <result property="modiPor" column="modiPor"/>
        <result property="glosa" column="glosa"/>
        <association property="unidadNegocioBean" column="uniNeg"
                     javaType="pe.marista.sigma.bean.UnidadNegocioBean"
                     resultMap="unidadNegocioResultado"/>
        <association property="idTipoServicioIngBean" column="idTipoServicioIng"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoServicioResultadoIng"/>
        <association property="idTipoDoc" column="idTipoDoc"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoDocResultadoDocIng"/>
        <association property="impresoraBean" column="impresora"
                     javaType="pe.marista.sigma.bean.ImpresoraBean"
                     resultMap="impresoraResultado"/>
        <association property="idTipoLugarPago" column="idTipoLugarPago"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoLugarPagoResultadoDocIng"/>
        <association property="idTipoModoPago" column="idTipoModoPago"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoModoPagoResultadoDocIng"/>
        <association property="idTipoMoneda" column="idTipoMoneda"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoMonedaResultadoDocIng"/>
        <association property="tipoStatusPagoBanco" column="tipoStatusPagoBanco"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoStatusPagoResultado"/>
        <association property="cuentaBancoBean" column="numCuenta"
                     javaType="pe.marista.sigma.bean.CuentaBancoBean"
                     resultMap="cuentaBancoResultado"/>
        <association property="conceptoBean" column="idConcepto"
                     javaType="pe.marista.sigma.bean.ConceptoBean"
                     resultMap="conceptoResultado"/>
        <association property="idTipoDscto" column="idTipoDscto"
                     javaType="pe.marista.sigma.bean.CodigoBean"
                     resultMap="tipoDsctoResultado"/> 
        <association property="programacionBean" column="idProgramacion"
                     javaType="pe.marista.sigma.bean.ProgramacionBean"
                     resultMap="programacionResultadoDocIng"/> 
    </resultMap>
    <resultMap id="unidadNegocioResultado" type="pe.marista.sigma.bean.UnidadNegocioBean">
        <id property="uniNeg" column="uniNeg"/>
    </resultMap>
    <resultMap id="tipoServicioResultadoIng" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoServicioIng"/>
        <result property="codigo" column="codTipoSer"/> 
    </resultMap>
    <resultMap id="tipoDocResultadoDocIng" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoDoc"/>
        <result property="codigo" column="codTipoDoc"/> 
    </resultMap>
    <resultMap id="impresoraResultado" type="pe.marista.sigma.bean.ImpresoraBean">
        <id property="impresora" column="impresora"/> 
        <result property="serie" column="serie"/>     
        <result property="actual" column="actual"/>
        <result property="status" column="status"/> 
    </resultMap>
    <resultMap id="tipoLugarPagoResultadoDocIng" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoLugarPago"/> 
        <result property="codigo" column="codTipoLugarPago"/>
    </resultMap>  
    <resultMap id="tipoModoPagoResultadoDocIng" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoModoPago"/>
        <result property="codigo" column="modoPago"/>
        <result property="codigo" column="codTipoModoPago"/>
    </resultMap>
    <resultMap id="tipoMonedaResultadoDocIng" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoMoneda"/> 
        <result property="codigo" column="codTipoMoneda"/>
    </resultMap>
    <resultMap id="tipoStatusPagoResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idtipostatuspagobanco"/> 
        <result property="codigo" column="codTipoStatusPagoBco"/>
    </resultMap>
    <resultMap id="cuentaBancoResultado" type="pe.marista.sigma.bean.CuentaBancoBean">
        <id property="numCuenta" column="numCuentaBanco"/>  
        <!-- unidad negocio de cuenta banco -->
        <association property="unidadNegocioBean" column="uniNegBanco" 
                     javaType="pe.marista.sigma.bean.UnidadNegocioBean" 
                     resultMap="unidadNegocioResultado"/> 
        <association property="entidadBancoBean" column="rucBanco"
                     javaType="pe.marista.sigma.bean.EntidadBean"
                     resultMap="entidadBancoResultado"/> 
    </resultMap>
    <resultMap id="entidadBancoResultado" type="pe.marista.sigma.bean.EntidadBean">
        <id property="ruc" column="rucBanco" />
        <id property="unidadNegocioBean.uniNeg" column="uniNegBanco"/>
        <result property="nombre" column="nombreEntBanco" />
        <!--   unidad negocio de entidad -->
        <association property="unidadNegocioBean" column="uniNegBanco" 
                     javaType="pe.marista.sigma.bean.UnidadNegocioBean" 
                     resultMap="unidadNegocioResultadoBanco"/> 
    </resultMap>    
    <resultMap id="conceptoResultado" type="pe.marista.sigma.bean.ConceptoBean">
        <id property="idConcepto" column="idConcepto"/>
        <result property="nombre" column="nombre"/> 
        <association property="tipoConceptoBean" column="idTipoConcepto"
                     javaType="pe.marista.sigma.bean.TipoConceptoBean"
                     resultMap="tipoConceptoResultado"/>
    </resultMap>
    <resultMap id="tipoConceptoResultado" type="pe.marista.sigma.bean.TipoConceptoBean">
        <id property="idTipoConcepto" column="idTipoConcepto"/>
        <result property="nombre" column="catNombre"/>
    </resultMap>
    <resultMap id="tipoDsctoResultado" type="pe.marista.sigma.bean.CodigoBean">
        <id property="idCodigo" column="idTipoDscto"/>
        <result property="codigo" column="codTipoDesc"/>
    </resultMap>
    <resultMap id="programacionResultadoDocIng" type="pe.marista.sigma.bean.ProgramacionBean">
        <id property="uniNeg" column="uniNegPro"/>
        <id property="idProgramacion" column="idProgramacion"/>
        <result property="anio" column="anio"/>
        <result property="precio" column="precio"/>
    </resultMap>  
        
    <insert id="insertarPagoBanco" parameterType="pe.marista.sigma.bean.PagoBancoBean">
        Insert Into MT_PagoBanco (
        unineg
        <!--,idpagobanco-->
        ,idtiposervicioing
        ,idtipodoc
        ,impresora
        
        ,serie
        ,nrodoc
        ,iddiscente
        ,discente
        ,anio
        
        ,codigo
        ,obs
        ,idtipolugarpago
        ,idtipomodopago
        ,fechapago
        
        ,idtipomoneda
        ,idtipostatuspagobanco         
        ,fechavenc
        ,numcuenta
        ,idconcepto
        
        ,monto
        ,dscto
        ,idTipoDscto
        ,montopagado
        ,cuentad
        
        ,cuentah        
        ,cr 
        ,montoSoles
        ,montoDolares
        ,referencia
        
        ,idprogramacion        
        ,idprogramaciondscto
        ,cantidad
        ,creapor
        ,creafecha
        
        ,glosa
        )
        values (
        #{unidadNegocioBean.uniNeg}
        <!--,#{idPagoBanco}-->
        ,#{idTipoServicioIngBean.idCodigo}
        ,#{idTipoDoc.idCodigo}
        ,#{impresoraBean.impresora}
        
        ,#{serie}
        ,#{nroDoc} 
        ,#{idDiscente}
        ,#{discente}
        ,#{anio}
        
        ,#{codigo}
        ,#{obs}
        ,#{idTipoLugarPago.idCodigo}
        ,#{idTipoModoPago.idCodigo}
        ,#{fechaPago}
        
        ,#{idTipoMoneda.idCodigo}
        ,#{tipoStatusPagoBanco.idCodigo}
        ,#{fechaVenc}
        ,#{cuentaBancoBean.numCuenta}
        ,#{conceptoBean.idConcepto}
        
        ,#{monto}
        ,#{dscto}
        ,#{idTipoDscto.idCodigo}
        ,#{montoPagado}
        ,#{cuentaD}
        
        ,#{cuentaH}        
        ,#{cr}
        ,#{montoSoles}
        ,#{montoDolares}
        ,#{referencia}
        
        ,#{programacionBean.idProgramacion}
        ,#{programacionBeanDscto.idProgramacionDscto}
        ,#{cantidad}
        ,#{creaPor}
        ,#{creaFecha}
        
        ,#{glosa}
        )
        <selectKey keyProperty="idPagoBanco" order="AFTER" resultType="Integer">
            SELECT max(idpagobanco) FROM MT_PagoBanco WHERE uniNeg = #{unidadNegocioBean.uniNeg}
        </selectKey>
    </insert>
    <select id="validarCodigo" resultType="Integer" parameterType="map">
        SELECT case when count(*)=0 then 0 else 1  end FROM MT_PagoBanco where codigo = #{codigo} and unineg=#{uniNeg} 
    </select>
    
    <select id="obtenerFechaVenc" resultType="Date" parameterType="map">
        declare @unineg varchar(6),@fecha datetime, @fechamasundia datetime, @cantHoras int, @flgVencDiaSgte int,@horacorte varchar(8)
        set @unineg=#{uniNeg}
        set @horacorte = '18:00:00'
        set @cantHoras=10
        set @fecha=DATEADD(DAY,0,#{fecha}) 
        set @fechamasundia=DATEADD(DAY,+1,@fecha)
        set @flgVencDiaSgte =(select case when convert(varchar,DATEADD(hour, +@cantHoras,convert(varchar,getdate(),108)),108) <![CDATA[  <=  ]]>@horacorte then 0 else 1 end) 
        select  
        case when @flgVencDiaSgte=0 then convert(varchar,@fecha,105) + ' '+ convert(datetime,@horacorte) 
        else  convert(varchar,@fechamasundia,105) + ' '+ convert(datetime,@horacorte) 
        end as fechavenc
    </select>
    <select id="validarFechaVencNoLaborable" resultType="Integer" parameterType="map">
        declare @unineg varchar(6), @fecha datetime
        set @unineg =#{uniNeg}
        SET @fecha  =#{fecha}
        select  
        case
        when count(*)<![CDATA[  >=  ]]>1 then 1 else 0  
        end
        from MM_CalendarioNoLaborable  where  fecha=convert(date,@fecha) and unineg=@unineg 
    </select>
    <select id="obtenerNewFechaVenc" resultType="Date" parameterType="map">        
        declare @count int, @unineg varchar(6), @fecha datetime, @fechamasundia datetime,@fecvenc datetime, @cantHoras int, @flgVencNoLab int,@horacorte varchar(8)
        set @unineg=#{uniNeg}
        set @horacorte = '18:00:00' 
        set @cantHoras=10 
        set @count=#{count}
        set @fecha=DATEADD(DAY,0,#{fecha})
        <!--set @fecha=DATEADD(DAY,0,getdate())-->
        set @fechamasundia=DATEADD(DAY,+@count,@fecha)  
        set @flgVencNoLab = (select case when count(*) <![CDATA[  >=   ]]> 1 then 1 else 0 end from MM_CalendarioNoLaborable where fecha=@fechamasundia and unineg=@unineg  )
        set @fecvenc= (case when @flgVencNoLab=1 then (select convert(varchar,fecha,105) + ' '+convert(datetime,horavenc) from MM_CalendarioNoLaborable where unineg=@unineg and fecha=convert(date,@fechamasundia)) else 
        convert(varchar,@fechamasundia,105) + ' '+ convert(datetime,@horacorte) 
        end)
        select @fecvenc 
    </select>
    <select  id="obtenerPagoBancoFor" parameterType="map" resultType="pe.marista.sigma.bean.reporte.PagoBancoRepBean">
        declare @uniNeg varchar(6) 
        set @uniNeg= #{uniNeg}
        declare @banco varchar(100)=(select top 1 nombre from MO_Entidad where ruc=(select distinct top 1 rucbanco from MT_CuentaBanco  where flgrecaudabanco=1 and unineg=@uniNeg) and unineg=@uniNeg)
        select  
        convert(varchar,isnull(serie,''))+' - '+convert(varchar,isnull(nrodoc,'')) as nrodoc,
        'CÓDIGO ALUMNO:   ' +convert(varchar(4),ISNULL(anio,''))+right(replicate('0', 7) + rtrim(convert(varchar,isnull(nrodoc,''))), 7) as codigo,
        <!--'CÓDIGO:   ' +convert(varchar,isnull(anio,''))+''+convert(varchar,isnull(nrodoc,'')) as codigo,-->
        
        'SERVICIO 03 - VACACIONES' AS servicio, 
        'FECHA: '+DATENAME(dd,pb.creafecha) + ' de ' +DATENAME(mm,pb.creafecha) + ' del ' + DATENAME(yy,pb.creafecha) + ' '+' Hora: '+convert(varchar,pb.creafecha,108)  as fecha,
        'ALUMNO:  ' +   discente as discente,
        'Realizar el pago hasta el día: '+ convert(varchar,fechavenc,103) <!--+ ' hora: '+ convert(varchar,fechavenc,108)--> as glosa1,
        'pasada la fecha de pago, este recibo carecerá de validez.' as glosa2,
       
        '01' as cantidad,
        referencia as ref, 
        CONVERT(varchar, CAST(isnull(monto,0) AS money), 1) as monto, 
        (CASE WHEN ISNULL(dscto,0)  <![CDATA[  > ]]> 0 THEN 'DESCUENTO' ELSE ' ' END ) AS dsctoRef,
        (CASE WHEN ISNULL(dscto,0)  <![CDATA[  > ]]> 0 THEN '-'+CONVERT(varchar, CAST(isnull(dscto,0) AS money), 1) ELSE ' ' END ) AS dscto, 
        (case
        when cod.codigo='Soles' then 'S/. ' 
        when cod.codigo='Dolares' then 'US$. ' 
        end)+CONVERT(varchar, CAST(isnull(montopagado,0) AS money), 1) as montoPagado,
        'SON : ' +  (select dbo.CantidadConLetra(ISNULL(montopagado,0)))+ ' ' +isnull(UPPER(cod.codigo),'SOLES') as montoPagadoLetras,
        'Pagos en: '+ isnull(@banco,'') as banco,
        (case 
        when cod.codigo='Soles' then 'S/. ' 
        when cod.codigo='Dolares' then 'US$. ' 
        end) as simbolo,
        upper(ent.nombre) as nombreUniNeg,
        isnull(ent.ruc,' ') as ruc,
        upper(ent.direccion) as direccion,
        isnull(ent.correo,0) as correo,
        (case when pb.unineg='sanlui' then (SELECT TOP 1 ISNULL(DESCRIPCION,'') FROM MM_RecaudaBanco WHERE UNINEG=@uniNeg) else '' end) as nombreRecaudo,  
        (case when pb.unineg='sanlui' then (SELECT TOP 1 ISNULL(CODIGO,'') FROM MM_RecaudaBanco WHERE UNINEG=@uniNeg) else '' end) as codRecaudo
        from MT_PagoBanco pb
        left join MO_codigo cod on cod.idcodigo=pb.idtipomoneda
        inner join MO_UnidadNegocio un on pb.unineg=un.unineg
        inner join MO_Entidad ent on ent.ruc=un.RUC and ent.unineg=un.unineg
        where nrodoc is not null and pb.idpagobanco in 
        <foreach item="item" index="index" collection="list" 
                 open="(" separator="," close=")">
            #{item}
        </foreach> 
        order by 1 desc
    </select> 
    <select  id="obtenerPagoTalleresWeb" parameterType="map" resultType="pe.marista.sigma.bean.reporte.TalleresWebRepBean">
        declare @uniNeg varchar(6) 
        set @uniNeg= #{uniNeg}
         declare @banco varchar(100)=(select top 1 nombre from MO_Entidad where ruc=(select distinct top 1 rucbanco from MT_CuentaBanco  where flgrecaudabanco=1 and unineg=@uniNeg) and unineg=@uniNeg)
        select  distinct
        convert(varchar,isnull(serie,''))+' - '+convert(varchar,isnull(nrodoc,'')) as nrodoc,
        'CÓDIGO ALUMNO:   ' +convert(varchar(4),ISNULL(anio,''))+right(replicate('0', 7) + rtrim(convert(varchar,isnull(nrodoc,''))), 7) as codigo,
      
        'SERVICIO 03 - VACACIONES' AS servicio, 
        'FECHA: '+DATENAME(dd,pb.creafecha) + ' de ' +DATENAME(mm,pb.creafecha) + ' del ' + DATENAME(yy,pb.creafecha) + ' '+' Hora: '+convert(varchar,pb.creafecha,108)  as fecha,
        'ALUMNO:  ' +   discente as discente,
        'Realizar el pago hasta el día: '+ convert(varchar,fechavenc,103)  as glosa1,
        'pasada la fecha de pago, este recibo carecerá de validez.' as glosa2,
         (case
        when cod.codigo='Soles' then 'S/. ' 
        when cod.codigo='Dolares' then 'US$. ' 
        end)
        +(select
        CONVERT(varchar, CAST(  (sum(ISNULL(montopagado,0))) AS money), 1)
        from MT_PagoBanco pb1 
        where pb1.nrodoc=pb.nrodoc)
        as montoPagado, 
        'SON : ' +(select
        (select dbo.CantidadConLetra  (sum(ISNULL(montopagado,0))) ) 
        from MT_PagoBanco pb1 
        where pb1.nrodoc=pb.nrodoc) + ' ' +isnull(UPPER(cod.codigo),'SOLES') as montoPagadoLetras,
        'Pagos en: '+ isnull(@banco,'') as banco,
        (case 
        when cod.codigo='Soles' then 'S/. ' 
        when cod.codigo='Dolares' then 'US$. ' 
        end) as simbolo,
        upper(ent.nombre) as nombreUniNeg,
        isnull(ent.ruc,' ') as ruc,
        upper(ent.direccion) as direccion,
        isnull(ent.correo,0) as correo,
        (case when pb.unineg='sanlui' then (SELECT TOP 1 ISNULL(DESCRIPCION,'') FROM MM_RecaudaBanco WHERE UNINEG=@uniNeg) else '' end) as nombreRecaudo,  
        (case when pb.unineg='sanlui' then (SELECT TOP 1 ISNULL(CODIGO,'') FROM MM_RecaudaBanco WHERE UNINEG=@uniNeg) else '' end) as codRecaudo
        from MT_PagoBanco pb
        left join MO_codigo cod on cod.idcodigo=pb.idtipomoneda
        inner join MO_UnidadNegocio un on pb.unineg=un.unineg
        inner join MO_Entidad ent on ent.ruc=un.RUC and ent.unineg=un.unineg
        where nrodoc is not null and pb.idpagobanco in 
        <foreach item="item" index="index" collection="list" 
                 open="(" separator="," close=")">
            #{item}
        </foreach> 
        order by 1 desc
    </select> 
    <select  id="obtenerPagoTalleresWebDetalle" parameterType="map" resultType="pe.marista.sigma.bean.reporte.TalleresWebRepBean">
        declare @uniNeg varchar(6) 
        set @uniNeg= #{uniNeg}
         declare @banco varchar(100)=(select top 1 nombre from MO_Entidad where ruc=(select distinct top 1 rucbanco from MT_CuentaBanco  where flgrecaudabanco=1 and unineg=@uniNeg) and unineg=@uniNeg)
        select   
        '01' as cantidad,
        referencia as ref, 
        CONVERT(varchar, CAST(isnull(monto,0) AS money), 1) as monto, 
        (CASE WHEN ISNULL(dscto,0)   >   0 THEN 'DESCUENTO' ELSE ' ' END ) AS dsctoRef,
        (CASE WHEN ISNULL(dscto,0)   >   0 THEN '-'+CONVERT(varchar, CAST(isnull(dscto,0) AS money), 1) ELSE ' ' END ) AS dscto, 
        (case
        when cod.codigo='Soles' then 'S/. ' 
        when cod.codigo='Dolares' then 'US$. ' 
        end)+CONVERT(varchar, CAST(isnull(montopagado,0) AS money), 1) as montoPagado 
        from MT_PagoBanco pb
        left join MO_codigo cod on cod.idcodigo=pb.idtipomoneda
        inner join MO_UnidadNegocio un on pb.unineg=un.unineg
        inner join MO_Entidad ent on ent.ruc=un.RUC and ent.unineg=un.unineg
        where nrodoc is not null and pb.idpagobanco in   
        <foreach item="item" index="index" collection="list" 
                 open="(" separator="," close=")">
            #{item}
        </foreach> 
        order by 1 desc
    </select> 
    <select  id="obtenerArqueoPagoBancoPorUniNeg" parameterType="map" resultType="pe.marista.sigma.bean.reporte.ArqueoPagoBcoRepBean">
        <!--
        select
        distinct 
        convert(date,pb.creafecha) as fecha,
        convert(varchar,pb.creafecha,103) as strFecha,
        pb.creaPor,
        CONCAT(per.apepat, ' ',per.apemat,', ',per.nombre) as cajero,
        convert(varchar(5),count(*)) as cant, 
        CONVERT(varchar, CAST(sum(isnull(montopagado,0)) AS money), 1) as totalRecaudado
        from MT_PagoBanco pb
        inner join MM_Usuario u on pb.creapor=u.usuario and pb.unineg=u.unineg
        inner join MO_Personal per on per.idpersonal=u.idpersonal and u.unineg=per.unineg
        left join MO_Codigo cod on cod.idcodigo=pb.idtipostatuspagobanco
        where pb.unineg=#{uniNeg} and pb.creapor=#{usuario} and cod.codigo='Pagado'
        <if test="fechaInicio != null" >
                <![CDATA[ 
                and ( pb.creafecha  >= #{fechaInicio})
                ]]>
        </if>
        <if test="fechaFin != null" >
                <![CDATA[
                and ( pb.creafecha  <= #{fechaFin})
                ]]>
        </if>
        group by convert(date,pb.creafecha),pb.creapor,CONCAT(per.apepat, ' ',per.apemat,', ',per.nombre), convert(varchar,pb.creafecha,103) 
        order by 1 desc -->
        select
        distinct 
        convert(date,pb.creafecha) as fecha,
        convert(varchar,pb.creafecha,103) as strFecha,        
        convert(varchar(5),count(*)) as cant, 
        CONVERT(varchar, CAST(sum(isnull(montopagado,0)) AS money), 1) as totalRecaudado
        from MT_PagoBanco pb 
        left join MO_Codigo cod on cod.idcodigo=pb.idtipostatuspagobanco
        where pb.unineg= #{uniNeg} 
         <if test="fechaInicio != null" >
                <![CDATA[ 
                and ( pb.creafecha  >= #{fechaInicio})
                ]]>
        </if>
        <if test="fechaFin != null" >
                <![CDATA[
                and ( pb.creafecha  <= #{fechaFin})
                ]]>
        </if>
        group by convert(date,pb.creafecha),  convert(varchar,pb.creafecha,103) 
        order by 1 desc
    </select>
    <select  id="obtenerDetArqPagoBanco" parameterType="map" resultType="pe.marista.sigma.bean.reporte.DetArqueoPagoBcoRepBean">
       <!-- declare @usuario varchar(100)
        set @usuario=#{usuario}
        declare @uniNeg varchar(6)
        set @uniNeg=#{uniNeg}
        declare @cant int = #{cant}
        declare @montototal varchar(30) = 'TOTAL: S/. '+#{montoTotal}
        declare @flgmonto int = 1
        declare @fechaini date =convert(date,#{fecha}) 

        declare @nombreUniNeg varchar(100),@ruc varchar(305)
        set @nombreUniNeg=(select nombreUniNeg from MO_UnidadNegocio where unineg=@uniNeg) 
        set @ruc=(select 'R.U.C.: '+ RUC from MO_UnidadNegocio where unineg=@uniNeg)
        declare @filtro varchar(100)
        set @filtro='Fecha de Inscripción: ' +convert(varchar,@fechaini,103)
        declare @cajera varchar(100)= (select CONCAT(p.apepat, ' ',p.apemat,', ',p.nombre) from MO_Personal  p  inner join MM_Usuario u on u.idpersonal=p.idpersonal and p.unineg=u.unineg where usuario=@usuario and p.unineg=@uniNeg)
 
        select  
        upper(@nombreUniNeg) as nombreUniNeg,
        @ruc as rucUniNeg,
        @cajera as cajero,
        @filtro as filtro,
        convert(varchar, @cant) as cant,
        convert(varchar(4),ISNULL(pb.anio,''))+right(replicate('0', 7) + rtrim(convert(varchar,isnull(nrodoc,''))), 7) as codigo,
        isnull(discente,'') as discente,
        pb.referencia as ref,
        convert(varchar,pb.creafecha,103) as fechaInscripcion ,
        isnull(cod.codigo,' ') as estado,
        (case when @flgmonto=1 then CONVERT(varchar, CAST(isnull(montopagado,0) AS money), 1) else '' end) as monto,
        (case when @flgmonto=1 then  @montoTotal else ''  end ) as montoTotal
        from MT_PagoBanco pb
        left join MO_Codigo cod on cod.idcodigo=pb.idtipostatuspagobanco 
        where   convert(date,pb.creafecha) = DATEADD(day, 0, @fechaini)   and pb.unineg=@uniNeg and pb.creapor=@usuario
        and cod.codigo='Pagado'
        order by pb.codigo-->
        declare @uniNeg varchar(6)
        set @uniNeg=#{uniNeg}
        declare @cant int = #{cant}
        declare @montototal varchar(30) = 'TOTAL  S/. '+#{montoTotal}
        declare @flgmonto int = 1
        declare @fechaini date =convert(date,#{fecha}) 

        declare @nombreUniNeg varchar(100),@ruc varchar(305)
        set @nombreUniNeg=(select nombreUniNeg from MO_UnidadNegocio where unineg=@uniNeg) 
        set @ruc=(select 'R.U.C.: '+ RUC from MO_UnidadNegocio where unineg=@uniNeg)
        declare @filtro varchar(100)
        set @filtro='Fecha de Inscripción: ' +convert(varchar,@fechaini,103)
      
        select  
        upper(@nombreUniNeg) as nombreUniNeg,
        @ruc as rucUniNeg,
         
        @filtro as filtro,
        convert(varchar, @cant) as cant,
        convert(varchar(4),ISNULL(pb.anio,''))+right(replicate('0', 7) + rtrim(convert(varchar,isnull(nrodoc,''))), 7) as codigo,
        isnull(discente,'') as discente,
        pb.referencia as ref,
        convert(varchar,pb.creafecha,103) as fechaInscripcion ,
        isnull(cod.codigo,' ') as estado,
        (case when @flgmonto=1 then CONVERT(varchar, CAST(isnull(montopagado,0) AS money), 1) else '' end) as monto,
        (case when @flgmonto=1 then  @montoTotal else ''  end ) as montoTotal
        from MT_PagoBanco pb
        left join MO_Codigo cod on cod.idcodigo=pb.idtipostatuspagobanco 
        where   convert(date,pb.creafecha) = DATEADD(day, 0, @fechaini)   and pb.unineg=@uniNeg  
        and cod.codigo='Pagado'
        order by pb.codigo 
    </select> 
    
    <select id="obtenerConciliaPagoBanco" parameterType="pe.marista.sigma.bean.reporte.DocIngresoTallerRepBean" resultType="pe.marista.sigma.bean.reporte.DocIngresoTallerRepBean" >
        select
        pb.idPagoBanco as idPagoBanco, 
        per.idpersona as iddiscente,
        pb.discente as discente,
        sta.codigo as estado,
        tdoc.codigo as tipoDoc,
        tmon.codigo as tipoMoneda,
        tmod.codigo as tipoModo,
        tlug.codigo as tipoLugar,
        pb.montopagado as montoPagado,
        CONVERT(varchar,pb.fechapago,105) as fechapago,
        pb.referencia as referencia,
        CONCAT(pb.anio,RIGHT('0000' + Ltrim(Rtrim(pb.nrodoc)),4)) as codRecaudo,
        isnull(pb.flgImpresion,0) as flgImpresion
        from MT_PagoBanco pb
        inner join MX_Persona per on pb.iddiscente = per.idpersona and pb.unineg = per.unineg
        left join MO_Codigo sta on pb.idtipostatuspagobanco = sta.idcodigo
        left join MO_Codigo tdoc on pb.idtipodoc = tdoc.idcodigo
        left join MO_Codigo tmon on pb.idtipomoneda = tmon.idcodigo
        left join MO_Codigo tmod on pb.idtipomodopago = tmod.idcodigo
        left join MO_Codigo tlug on pb.idtipolugarpago = tlug.idcodigo
        <where>
            pb.unineg = #{uniNeg}
            <if test="fechaIni != null" >
                and CONVERT(date,pb.fechapago) <![CDATA[  >= ]]> convert(date,#{fechaIni}) 
            </if>
            <if test="fechaFin != null" >
                and CONVERT(date,pb.fechapago) <![CDATA[  <= ]]> convert(date,#{fechaFin}) 
            </if>
            <if test="idTipoLugar != null" >
                and pb.idtipolugarpago = #{idTipoLugar}
            </if>
            <if test="idTipoModo != null" >
                and pb.idtipomodopago = #{idTipoModo}
            </if>
            <if test="idTipoMoneda != null" >
                and pb.idtipomoneda = #{idTipoMoneda}
            </if>
            <if test="idEstado != null" >
                and pb.idtipostatuspagobanco = #{idEstado}    
            </if> 
            <if test="idTipoDoc != null" >
                and tdoc.idcodigo = #{idTipoDoc}    
            </if> 
            <if test="referencia != null and referencia != '' " >
                and pb.referencia like concat('%',#{referencia},'%') 
            </if>
            <if test="flgImpresion != null" >
                and pb.flgImpresion = #{flgImpresion}
            </if>
            order by pb.fechapago <!-- ,pb.discente -->
        </where> 
    </select>
     
    <select id="reImprimirReciboTaller" resultType="pe.marista.sigma.bean.reporte.PagoBancoRepBean" parameterType="pe.marista.sigma.bean.reporte.DocIngresoTallerRepBean" >
        declare @uniNeg varchar(6) = #{uniNeg}
        declare @pagobanco Integer = #{idPagoBanco}
        
        declare @banco varchar(100)=(select descripcion from MT_CuentaBanco where flgrecaudabanco=1 and unineg=@uniNeg)
        
        select top 5
        convert(varchar,isnull(serie,''))+' - '+convert(varchar,isnull(nrodoc,'')) as nrodoc,
        'CÓDIGO:   ' +convert(varchar,isnull(anio,''))+''+convert(varchar,isnull(nrodoc,'')) as codigo,
        'SERVICIO 03 - VACACIONES' AS servicio,
        'FECHA: '+DATENAME(dd,fechapago) + ' de ' +DATENAME(mm,fechapago) + ' del ' + DATENAME(yy,fechapago)  as fecha,
        'ALUMNO:  ' +   discente as discente,
        'Realizar el pago hasta el día: '+ convert(varchar,fechavenc,103) + ' hora: '+ convert(varchar,fechavenc,108) as glosa1,
        'pasada la fecha de pago, este recibo carecerá de validez.' as glosa2,
        --detalle
        '01' as cantidad,
        referencia as ref,
        CONVERT(varchar, CAST(isnull(monto,0) AS money), 1) as monto,
        (CASE WHEN ISNULL(dscto,0) >0 THEN 'DESCUENTO' ELSE ' ' END ) AS dsctoRef,
        (CASE WHEN ISNULL(dscto,0) >0 THEN '-'+CONVERT(varchar, CAST(isnull(dscto,0) AS money), 1) ELSE ' ' END ) AS dscto,
        (case
        when cod.codigo='Soles' then 'S/. '
        when cod.codigo='Dolares' then 'US$. '
        end)+CONVERT(varchar, CAST(isnull(montopagado,0) AS money), 1) as montoPagado,
        'SON : ' +  (select dbo.CantidadConLetra(ISNULL(montopagado,0)))+ ' ' +isnull(UPPER(cod.codigo),'SOLES') as montoPagadoletras,
        isnull(@banco,'') as banco,
        (case
        when cod.codigo='Soles' then 'S/. '
        when cod.codigo='Dolares' then 'US$. '
        end) as simbolo,
        upper(ent.nombre) as nombreUniNeg,
        isnull(ent.ruc,' ') as ruc,
        upper(ent.direccion) as direccion,
        isnull(ent.correo,0) as correo,
        (case when pb.unineg='sanlui' then (SELECT TOP 1 ISNULL(DESCRIPCION,'') FROM MM_RecaudaBanco WHERE UNINEG=@uniNeg) else '' end) as nombreRecaudo,  
        (case when pb.unineg='sanlui' then (SELECT TOP 1 ISNULL(CODIGO,'') FROM MM_RecaudaBanco WHERE UNINEG=@uniNeg) else '' end) as codRecaudo
        from MT_PagoBanco pb
        left join MO_codigo cod on cod.idcodigo=pb.idtipomoneda
        inner join MO_UnidadNegocio un on pb.unineg=un.unineg
        inner join MO_Entidad ent on ent.ruc=un.RUC and ent.unineg=un.unineg
        where pb.unineg = @uniNeg and pb.idpagobanco = @pagobanco
        order by 2 desc
    </select>
    
    <select id="reImprimirReciboTallerMasivo" resultType="pe.marista.sigma.bean.reporte.PagoBancoRepBean" parameterType="map" >
        declare @uniNeg varchar(6) = #{uniNeg}
        
        declare @banco varchar(100)=(select descripcion from MT_CuentaBanco where flgrecaudabanco=1 and unineg=@uniNeg)
        
        select top 5
        convert(varchar,isnull(serie,''))+' - '+convert(varchar,isnull(nrodoc,'')) as nrodoc,
        'CÓDIGO:   ' +convert(varchar,isnull(anio,''))+''+convert(varchar,isnull(nrodoc,'')) as codigo,
        'SERVICIO 03 - VACACIONES' AS servicio,
        'FECHA: '+DATENAME(dd,fechapago) + ' de ' +DATENAME(mm,fechapago) + ' del ' + DATENAME(yy,fechapago)  as fecha,
        'ALUMNO:  ' +   discente as discente,
        'Realizar el pago hasta el día: '+ convert(varchar,fechavenc,103) + ' hora: '+ convert(varchar,fechavenc,108) as glosa1,
        'pasada la fecha de pago, este recibo carecerá de validez.' as glosa2,
        --detalle
        '01' as cantidad,
        referencia as ref,
        CONVERT(varchar, CAST(isnull(monto,0) AS money), 1) as monto,
        (CASE WHEN ISNULL(dscto,0) >0 THEN 'DESCUENTO' ELSE ' ' END ) AS dsctoRef,
        (CASE WHEN ISNULL(dscto,0) >0 THEN '-'+CONVERT(varchar, CAST(isnull(dscto,0) AS money), 1) ELSE ' ' END ) AS dscto,
        (case
        when cod.codigo='Soles' then 'S/. '
        when cod.codigo='Dolares' then 'US$. '
        end)+CONVERT(varchar, CAST(isnull(montopagado,0) AS money), 1) as montoPagado,
        'SON : ' +  (select dbo.CantidadConLetra(ISNULL(montopagado,0)))+ ' ' +isnull(UPPER(cod.codigo),'SOLES') as montoPagadoletras,
        isnull(@banco,'') as banco,
        (case
        when cod.codigo='Soles' then 'S/. '
        when cod.codigo='Dolares' then 'US$. '
        end) as simbolo,
        upper(ent.nombre) as nombreUniNeg,
        isnull(ent.ruc,' ') as ruc,
        upper(ent.direccion) as direccion,
        isnull(ent.correo,0) as correo,
        (case when pb.unineg='sanlui' then (SELECT TOP 1 ISNULL(DESCRIPCION,'') FROM MM_RecaudaBanco WHERE UNINEG=@uniNeg) else '' end) as nombreRecaudo,  
        (case when pb.unineg='sanlui' then (SELECT TOP 1 ISNULL(CODIGO,'') FROM MM_RecaudaBanco WHERE UNINEG=@uniNeg) else '' end) as codRecaudo
        from MT_PagoBanco pb
        left join MO_codigo cod on cod.idcodigo=pb.idtipomoneda
        inner join MO_UnidadNegocio un on pb.unineg=un.unineg
        inner join MO_Entidad ent on ent.ruc=un.RUC and ent.unineg=un.unineg
        where pb.unineg = @uniNeg 
        and pb.idpagobanco in 
        <foreach item="item" index="index" collection="lista" open="(" separator="," close=")"> #{item} </foreach>
        order by pb.fechapago
    </select>
    
    <sql id="consultaPagoBanco" >
        select
        pb.idPagoBanco as idPagoBanco, 
        per.idpersona as iddiscente,
        pb.discente as discente,
        sta.codigo as estado,
        tdoc.codigo as tipoDoc,
        tmon.codigo as tipoMoneda,
        tmod.codigo as tipoModo,
        tlug.codigo as tipoLugar,
        pb.montopagado as montoPagado,
        isnull(pb.monto,0) as monto,
        isnull(pb.dscto,0) as dscto,
        isnull(pb.montopagado,0) as pagado,
        CONVERT(varchar,pb.fechapago,105) as fechapago,
        pb.referencia as referencia,
        CONCAT(pb.anio,RIGHT('0000' + Ltrim(Rtrim(pb.nrodoc)),4)) as codRecaudo
        from MT_PagoBanco pb
        inner join MX_Persona per on pb.iddiscente = per.idpersona and pb.unineg = per.unineg
        left join MO_Codigo sta on pb.idtipostatuspagobanco = sta.idcodigo
        left join MO_Codigo tdoc on pb.idtipodoc = tdoc.idcodigo
        left join MO_Codigo tmon on pb.idtipomoneda = tmon.idcodigo
        left join MO_Codigo tmod on pb.idtipomodopago = tmod.idcodigo
        left join MO_Codigo tlug on pb.idtipolugarpago = tlug.idcodigo
    </sql>
    <select id="obtenerPorIdPagoBanco" resultType="pe.marista.sigma.bean.reporte.DocIngresoTallerRepBean" parameterType="pe.marista.sigma.bean.reporte.DocIngresoTallerRepBean" >
        <include refid="consultaPagoBanco" />
        where pb.unineg = #{uniNeg} and pb.idpagobanco = #{idPagoBanco}
    </select>
    <select id="reImprimirReciboTallerMasivoLibre" resultType="pe.marista.sigma.bean.reporte.CobranzaValoradoRepBean" parameterType="map" >
        select 
        f.idpagobanco as idficha,
        uni.nombreUniNeg as nombre,
        uni.ruc as ruc,
        en.direccion,
        dis.nombre as nomDistrito,
        en.telefono as telefono,
        en.correo as correo,
        td.codigo as codigo,
        CONCAT(f.serie,'-',convert(varchar(100),ISNULL(right(replicate('0', 7) + rtrim(f.nrodoc), 7),'-----'))) as serieNroDoc,
        UPPER(f.discente) as pagante,
        f.referencia as referencia,
        UPPER(tpc.nombre + ' / '+ c.nombre) as concepto, 
        convert(varchar(20),f.monto) as monto,
        convert(varchar,f.fechapago,105) as fechaPago,
        convert(varchar(20),f.montopagado) as montoPago,
        (select (select dbo.CantidadConLetra(convert(varchar(20),sum(ff.montopagado)))) as montopagado from MT_PagoBanco ff where 
        ff.unineg = f.unineg 
        and ff.nrodoc = f.nrodoc
        and ff.iddiscente = f.iddiscente
        and ff.idpagobanco in 
        <foreach item="item" index="index" collection="lista" open="(" separator="," close=")"> #{item} </foreach>) + ' SOLES' as montoTotal,
        td.codigo as tipoDoc
        from MT_PagoBanco f
        inner join MO_Codigo td on f.idtipodoc = td.idcodigo
        left join MO_Codigo tp on f.idtipomodopago = tp.idcodigo
        left join MO_Codigo tm on f.idtipomoneda = tm.idcodigo
        left join MO_Codigo ts on f.idtipostatuspagobanco = ts.idcodigo
        inner join MO_UnidadNegocio uni on f.unineg = uni.unineg
        inner join MT_ConceptoUniNeg cu on f.idconcepto = cu.idconcepto and f.unineg = cu.unineg
        inner join MT_Concepto c on cu.idconcepto = c.idconcepto
        inner join mt_tipoconcepto tpc on c.idtipoconcepto = tpc.idtipoconcepto
        inner join MO_Entidad en on uni.RUC = en.ruc and uni.unineg = en.unineg
        inner join MO_Distrito dis on uni.iddistrito = dis.iddistrito
        where 
        <!-- f.unineg = #{uniNeg} and -->
        f.idpagobanco in 
        <foreach item="item" index="index" collection="lista" open="(" separator="," close=")"> #{item} </foreach>
        order by f.nrodoc,f.fechapago asc
    </select>
    
    <!-- CABECERA POR PAGO BANCO  -->
    <select id="obtenerCabeceraPagoBancoLibre" resultType="pe.marista.sigma.bean.reporte.CobranzaValoradoRepBean" parameterType="pe.marista.sigma.bean.reporte.DocIngresoTallerRepBean" >
        select 
        f.idpagobanco as idficha,
        uni.nombreUniNeg as nombre,
        uni.ruc as ruc,
        en.direccion,
        dis.nombre as nomDistrito,
        en.telefono as telefono,
        en.correo as correo,
        td.codigo as codigo,
        CONCAT(f.serie,'-',convert(varchar(100),ISNULL(right(replicate('0', 7) + rtrim(f.nrodoc), 7),'-----'))) as serieNroDoc,
        f.iddiscente as idDiscente,
        UPPER(f.discente) as pagante,
        c.nombre as concepto,
        concat('COLABORACIÓN NRO. ',f.nrodoc) as referencia,
        convert(varchar(20),f.monto) as monto,
        convert(varchar,f.fechapago,105) as fechaPago,
        convert(varchar(20),f.montopagado) as montoPago,
        (select convert(varchar(20),sum(ff.montopagado)) as montopagado from MT_PagoBanco ff where 
        ff.unineg = f.unineg 
        and ff.iddiscente = f.iddiscente) as montoTotal,
        td.codigo as tipoDoc
        from MT_PagoBanco f
        inner join MO_Codigo td on f.idtipodoc = td.idcodigo
        left join MO_Codigo tp on f.idtipomodopago = tp.idcodigo
        left join MO_Codigo tm on f.idtipomoneda = tm.idcodigo
        left join MO_Codigo ts on f.idtipostatuspagobanco = ts.idcodigo
        inner join MO_UnidadNegocio uni on f.unineg = uni.unineg
        inner join MT_ConceptoUniNeg cu on f.idconcepto = cu.idconcepto and f.unineg = cu.unineg
        inner join MT_Concepto c on cu.idconcepto = c.idconcepto
        inner join MO_Entidad en on uni.RUC = en.ruc and uni.unineg = en.unineg
        inner join MO_Distrito dis on uni.iddistrito = dis.iddistrito
        where f.unineg = #{uniNeg} 
        and f.idtipostatuspagobanco = #{idEstado} 
        and isnull(f.flgImpresion,0) = #{flgImpresion}
        order by f.fechapago
    </select>
    
    <!-- DETALLE POR PAGO BANCO  -->
    <select id="obtenerDetallePagoBancoLibre" resultType="pe.marista.sigma.bean.reporte.CobranzaValoradoRepBean" parameterType="map" >
        select 
        f.idpagobanco as idficha,
        uni.nombreUniNeg as nombre,
        uni.ruc as ruc,
        en.direccion,
        dis.nombre as nomDistrito,
        en.telefono as telefono,
        en.correo as correo,
        td.codigo as codigo,
        CONCAT(f.serie,'-',convert(varchar(100),ISNULL(right(replicate('0', 7) + rtrim(f.nrodoc), 7),'-----'))) as serieNroDoc,
        UPPER(f.discente) as pagante,
        c.nombre as concepto,
        concat('COLABORACIÓN NRO. ',f.nrodoc) as referencia,
        convert(varchar(20),f.monto) as monto,
        convert(varchar,f.fechapago,105) as fechaPago,
        convert(varchar(20),f.montopagado) as montoPago,
        (select convert(varchar(20),sum(ff.montopagado)) as montopagado from MT_PagoBanco ff where ff.unineg = f.unineg 
        and ff.iddiscente = f.iddiscente 
        and ff.unineg = f.unineg) as montoTotal,
        td.codigo as tipoDoc
        from MT_PagoBanco f
        inner join MO_Codigo td on f.idtipodoc = td.idcodigo
        left join MO_Codigo tp on f.idtipomodopago = tp.idcodigo
        left join MO_Codigo tm on f.idtipomoneda = tm.idcodigo
        left join MO_Codigo ts on f.idtipostatuspagobanco = ts.idcodigo
        inner join MO_UnidadNegocio uni on f.unineg = uni.unineg
        inner join MT_ConceptoUniNeg cu on f.idconcepto = cu.idconcepto and f.unineg = cu.unineg
        inner join MT_Concepto c on cu.idconcepto = c.idconcepto
        inner join MO_Entidad en on uni.RUC = en.ruc and uni.unineg = en.unineg
        inner join MO_Distrito dis on uni.iddistrito = dis.iddistrito
        where f.iddiscente = #{idDiscente}
        and f.unineg = #{uniNeg} 
        and f.idtipostatuspagobanco = #{idEstado} 
        and isnull(f.flgImpresion,0) = #{flgImpresion}
    </select>
    
    <select id="obtenerMaxNroDoc" resultType="Integer" parameterType="String" >
        select isnull(max(nrodoc),0) as nrodoc from MT_PagoBanco where serie = '003'
    </select>
    <update id="modificarPagoBanco" parameterType="pe.marista.sigma.bean.reporte.DocIngresoTallerRepBean" >
        UPDATE [dbo].[MT_PagoBanco] 
        SET
        [iddiscente] = #{idDiscente}
        ,[discente] = #{discente}
        ,[monto] = #{monto}
        ,[dscto] = #{dscto}
        ,[montopagado] = #{pagado}
        ,[referencia] = #{referencia}
        ,[glosa] = #{obs}
        ,modipor = #{modiPor}
        WHERE idpagobanco = #{idPagoBanco} and unineg = #{uniNeg}
    </update>
    <update id="modificarNumRecibo" parameterType="pe.marista.sigma.bean.reporte.DocIngresoTallerRepBean" >
        UPDATE [dbo].[MT_PagoBanco]
        set
        nrodoc = #{nroDoc},
        serie = #{serie},
        flgImpresion = #{flgImpresion},
        modipor = #{modiPor}
        WHERE idpagobanco = #{idPagoBanco} and unineg = #{uniNeg}
    </update>
</mapper>
